
Smart_Home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003092  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000035c  00800060  00003092  00003126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000032  008003bc  008003bc  00003482  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003482  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000034e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003f8  00000000  00000000  0000351c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006cd5  00000000  00000000  00003914  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001247  00000000  00000000  0000a5e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000033b2  00000000  00000000  0000b830  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a9c  00000000  00000000  0000ebe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001420  00000000  00000000  0000f680  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002ed5  00000000  00000000  00010aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000380  00000000  00000000  00013975  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 10 12 	jmp	0x2420	; 0x2420 <__vector_10>
      2c:	0c 94 d5 11 	jmp	0x23aa	; 0x23aa <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	13 e0       	ldi	r17, 0x03	; 3
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e9       	ldi	r30, 0x92	; 146
      68:	f0 e3       	ldi	r31, 0x30	; 48
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 3b       	cpi	r26, 0xBC	; 188
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	23 e0       	ldi	r18, 0x03	; 3
      78:	ac eb       	ldi	r26, 0xBC	; 188
      7a:	b3 e0       	ldi	r27, 0x03	; 3
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 3e       	cpi	r26, 0xEE	; 238
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <main>
      8a:	0c 94 47 18 	jmp	0x308e	; 0x308e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <HOME_voidInit>:
				{
					
				}

					
        break;
      92:	0e 94 57 0d 	call	0x1aae	; 0x1aae <LCD_voidInit>
      96:	0e 94 df 10 	call	0x21be	; 0x21be <PWM_voidInitChannel_1A>
      9a:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <PWM_voidInitChannel_1B>
      9e:	0e 94 9b 0b 	call	0x1736	; 0x1736 <EEPROM_voidInit>
      a2:	64 e0       	ldi	r22, 0x04	; 4
      a4:	83 e0       	ldi	r24, 0x03	; 3
      a6:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <SERVO_voidInit>
      aa:	60 e0       	ldi	r22, 0x00	; 0
      ac:	70 e0       	ldi	r23, 0x00	; 0
      ae:	cb 01       	movw	r24, r22
      b0:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <SERVO_voidStartByAngle>
      b4:	0e 94 09 0c 	call	0x1812	; 0x1812 <KPD_voidInit>
      b8:	0e 94 8f 0b 	call	0x171e	; 0x171e <BL_voidInit>
      bc:	41 e0       	ldi	r20, 0x01	; 1
      be:	61 e0       	ldi	r22, 0x01	; 1
      c0:	83 e0       	ldi	r24, 0x03	; 3
      c2:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
      c6:	40 e0       	ldi	r20, 0x00	; 0
      c8:	60 e0       	ldi	r22, 0x00	; 0
      ca:	83 e0       	ldi	r24, 0x03	; 3
      cc:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
      d0:	0e 94 db 10 	call	0x21b6	; 0x21b6 <GI_voidEnable>
      d4:	0e 94 9d 11 	call	0x233a	; 0x233a <TMR0_voidInit>
      d8:	63 e0       	ldi	r22, 0x03	; 3
      da:	83 e0       	ldi	r24, 0x03	; 3
      dc:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <LED_voidInit>
      e0:	60 e0       	ldi	r22, 0x00	; 0
      e2:	81 e0       	ldi	r24, 0x01	; 1
      e4:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <LED_voidInit>
      e8:	62 e0       	ldi	r22, 0x02	; 2
      ea:	80 e0       	ldi	r24, 0x00	; 0
      ec:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <LED_voidInit>
      f0:	63 e0       	ldi	r22, 0x03	; 3
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <LED_voidInit>
      f8:	62 e0       	ldi	r22, 0x02	; 2
      fa:	83 e0       	ldi	r24, 0x03	; 3
      fc:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <LED_voidInit>
     100:	65 e0       	ldi	r22, 0x05	; 5
     102:	83 e0       	ldi	r24, 0x03	; 3
     104:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <LED_voidInit>
     108:	08 95       	ret

0000010a <HOME_voidLocalGetUserAndPass>:
     10a:	cf 92       	push	r12
     10c:	df 92       	push	r13
     10e:	ef 92       	push	r14
     110:	ff 92       	push	r15
     112:	1f 93       	push	r17
     114:	cf 93       	push	r28
     116:	df 93       	push	r29
     118:	00 97       	sbiw	r24, 0x00	; 0
     11a:	09 f4       	brne	.+2      	; 0x11e <HOME_voidLocalGetUserAndPass+0x14>
     11c:	67 c0       	rjmp	.+206    	; 0x1ec <HOME_voidLocalGetUserAndPass+0xe2>
     11e:	61 15       	cp	r22, r1
     120:	71 05       	cpc	r23, r1
     122:	09 f4       	brne	.+2      	; 0x126 <HOME_voidLocalGetUserAndPass+0x1c>
     124:	63 c0       	rjmp	.+198    	; 0x1ec <HOME_voidLocalGetUserAndPass+0xe2>
     126:	7b 01       	movw	r14, r22
     128:	6c 01       	movw	r12, r24
     12a:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
     12e:	60 e0       	ldi	r22, 0x00	; 0
     130:	81 e0       	ldi	r24, 0x01	; 1
     132:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     136:	83 e7       	ldi	r24, 0x73	; 115
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     13e:	60 e0       	ldi	r22, 0x00	; 0
     140:	82 e0       	ldi	r24, 0x02	; 2
     142:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     146:	85 e8       	ldi	r24, 0x85	; 133
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     14e:	2f ef       	ldi	r18, 0xFF	; 255
     150:	83 ed       	ldi	r24, 0xD3	; 211
     152:	90 e3       	ldi	r25, 0x30	; 48
     154:	21 50       	subi	r18, 0x01	; 1
     156:	80 40       	sbci	r24, 0x00	; 0
     158:	90 40       	sbci	r25, 0x00	; 0
     15a:	e1 f7       	brne	.-8      	; 0x154 <HOME_voidLocalGetUserAndPass+0x4a>
     15c:	00 c0       	rjmp	.+0      	; 0x15e <HOME_voidLocalGetUserAndPass+0x54>
     15e:	00 00       	nop
     160:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	81 e0       	ldi	r24, 0x01	; 1
     168:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     16c:	85 ea       	ldi	r24, 0xA5	; 165
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     174:	10 e0       	ldi	r17, 0x00	; 0
     176:	11 c0       	rjmp	.+34     	; 0x19a <HOME_voidLocalGetUserAndPass+0x90>
     178:	e6 01       	movw	r28, r12
     17a:	c1 0f       	add	r28, r17
     17c:	d1 1d       	adc	r29, r1
     17e:	ce 01       	movw	r24, r28
     180:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
     184:	98 81       	ld	r25, Y
     186:	9f 3f       	cpi	r25, 0xFF	; 255
     188:	b9 f3       	breq	.-18     	; 0x178 <HOME_voidLocalGetUserAndPass+0x6e>
     18a:	61 2f       	mov	r22, r17
     18c:	82 e0       	ldi	r24, 0x02	; 2
     18e:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     192:	88 81       	ld	r24, Y
     194:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <LCD_voidDisplayChar>
     198:	1f 5f       	subi	r17, 0xFF	; 255
     19a:	17 30       	cpi	r17, 0x07	; 7
     19c:	68 f3       	brcs	.-38     	; 0x178 <HOME_voidLocalGetUserAndPass+0x6e>
     19e:	f6 01       	movw	r30, r12
     1a0:	e1 0f       	add	r30, r17
     1a2:	f1 1d       	adc	r31, r1
     1a4:	10 82       	st	Z, r1
     1a6:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	81 e0       	ldi	r24, 0x01	; 1
     1ae:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     1b2:	83 e9       	ldi	r24, 0x93	; 147
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     1ba:	10 e0       	ldi	r17, 0x00	; 0
     1bc:	11 c0       	rjmp	.+34     	; 0x1e0 <HOME_voidLocalGetUserAndPass+0xd6>
     1be:	e7 01       	movw	r28, r14
     1c0:	c1 0f       	add	r28, r17
     1c2:	d1 1d       	adc	r29, r1
     1c4:	ce 01       	movw	r24, r28
     1c6:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
     1ca:	88 81       	ld	r24, Y
     1cc:	8f 3f       	cpi	r24, 0xFF	; 255
     1ce:	b9 f3       	breq	.-18     	; 0x1be <HOME_voidLocalGetUserAndPass+0xb4>
     1d0:	61 2f       	mov	r22, r17
     1d2:	82 e0       	ldi	r24, 0x02	; 2
     1d4:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     1d8:	88 81       	ld	r24, Y
     1da:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <LCD_voidDisplayChar>
     1de:	1f 5f       	subi	r17, 0xFF	; 255
     1e0:	17 30       	cpi	r17, 0x07	; 7
     1e2:	68 f3       	brcs	.-38     	; 0x1be <HOME_voidLocalGetUserAndPass+0xb4>
     1e4:	f7 01       	movw	r30, r14
     1e6:	e1 0f       	add	r30, r17
     1e8:	f1 1d       	adc	r31, r1
     1ea:	10 82       	st	Z, r1
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	1f 91       	pop	r17
     1f2:	ff 90       	pop	r15
     1f4:	ef 90       	pop	r14
     1f6:	df 90       	pop	r13
     1f8:	cf 90       	pop	r12
     1fa:	08 95       	ret

000001fc <HOME_voidRemoteGetUserAndPass>:
     1fc:	cf 92       	push	r12
     1fe:	df 92       	push	r13
     200:	ef 92       	push	r14
     202:	ff 92       	push	r15
     204:	0f 93       	push	r16
     206:	1f 93       	push	r17
     208:	cf 93       	push	r28
     20a:	00 97       	sbiw	r24, 0x00	; 0
     20c:	09 f4       	brne	.+2      	; 0x210 <HOME_voidRemoteGetUserAndPass+0x14>
     20e:	64 c0       	rjmp	.+200    	; 0x2d8 <HOME_voidRemoteGetUserAndPass+0xdc>
     210:	61 15       	cp	r22, r1
     212:	71 05       	cpc	r23, r1
     214:	09 f4       	brne	.+2      	; 0x218 <HOME_voidRemoteGetUserAndPass+0x1c>
     216:	60 c0       	rjmp	.+192    	; 0x2d8 <HOME_voidRemoteGetUserAndPass+0xdc>
     218:	8b 01       	movw	r16, r22
     21a:	7c 01       	movw	r14, r24
     21c:	85 ea       	ldi	r24, 0xA5	; 165
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     224:	8d e0       	ldi	r24, 0x0D	; 13
     226:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     22a:	c0 e0       	ldi	r28, 0x00	; 0
     22c:	0b c0       	rjmp	.+22     	; 0x244 <HOME_voidRemoteGetUserAndPass+0x48>
     22e:	67 01       	movw	r12, r14
     230:	cc 0e       	add	r12, r28
     232:	d1 1c       	adc	r13, r1
     234:	c6 01       	movw	r24, r12
     236:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     23a:	f6 01       	movw	r30, r12
     23c:	80 81       	ld	r24, Z
     23e:	83 32       	cpi	r24, 0x23	; 35
     240:	19 f0       	breq	.+6      	; 0x248 <HOME_voidRemoteGetUserAndPass+0x4c>
     242:	cf 5f       	subi	r28, 0xFF	; 255
     244:	c8 30       	cpi	r28, 0x08	; 8
     246:	98 f3       	brcs	.-26     	; 0x22e <HOME_voidRemoteGetUserAndPass+0x32>
     248:	f7 01       	movw	r30, r14
     24a:	ec 0f       	add	r30, r28
     24c:	f1 1d       	adc	r31, r1
     24e:	10 82       	st	Z, r1
     250:	8d e9       	ldi	r24, 0x9D	; 157
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     258:	8d e0       	ldi	r24, 0x0D	; 13
     25a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     25e:	c0 e0       	ldi	r28, 0x00	; 0
     260:	07 c0       	rjmp	.+14     	; 0x270 <HOME_voidRemoteGetUserAndPass+0x74>
     262:	f7 01       	movw	r30, r14
     264:	ec 0f       	add	r30, r28
     266:	f1 1d       	adc	r31, r1
     268:	80 81       	ld	r24, Z
     26a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     26e:	cf 5f       	subi	r28, 0xFF	; 255
     270:	c8 30       	cpi	r28, 0x08	; 8
     272:	b8 f3       	brcs	.-18     	; 0x262 <HOME_voidRemoteGetUserAndPass+0x66>
     274:	8d e0       	ldi	r24, 0x0D	; 13
     276:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     27a:	80 eb       	ldi	r24, 0xB0	; 176
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     282:	8d e0       	ldi	r24, 0x0D	; 13
     284:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     288:	c0 e0       	ldi	r28, 0x00	; 0
     28a:	0b c0       	rjmp	.+22     	; 0x2a2 <HOME_voidRemoteGetUserAndPass+0xa6>
     28c:	78 01       	movw	r14, r16
     28e:	ec 0e       	add	r14, r28
     290:	f1 1c       	adc	r15, r1
     292:	c7 01       	movw	r24, r14
     294:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     298:	f7 01       	movw	r30, r14
     29a:	80 81       	ld	r24, Z
     29c:	83 32       	cpi	r24, 0x23	; 35
     29e:	19 f0       	breq	.+6      	; 0x2a6 <HOME_voidRemoteGetUserAndPass+0xaa>
     2a0:	cf 5f       	subi	r28, 0xFF	; 255
     2a2:	c9 30       	cpi	r28, 0x09	; 9
     2a4:	98 f3       	brcs	.-26     	; 0x28c <HOME_voidRemoteGetUserAndPass+0x90>
     2a6:	f8 01       	movw	r30, r16
     2a8:	ec 0f       	add	r30, r28
     2aa:	f1 1d       	adc	r31, r1
     2ac:	10 82       	st	Z, r1
     2ae:	8a eb       	ldi	r24, 0xBA	; 186
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     2b6:	8d e0       	ldi	r24, 0x0D	; 13
     2b8:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     2bc:	c0 e0       	ldi	r28, 0x00	; 0
     2be:	07 c0       	rjmp	.+14     	; 0x2ce <HOME_voidRemoteGetUserAndPass+0xd2>
     2c0:	f8 01       	movw	r30, r16
     2c2:	ec 0f       	add	r30, r28
     2c4:	f1 1d       	adc	r31, r1
     2c6:	80 81       	ld	r24, Z
     2c8:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     2cc:	cf 5f       	subi	r28, 0xFF	; 255
     2ce:	c8 30       	cpi	r28, 0x08	; 8
     2d0:	b8 f3       	brcs	.-18     	; 0x2c0 <HOME_voidRemoteGetUserAndPass+0xc4>
     2d2:	8d e0       	ldi	r24, 0x0D	; 13
     2d4:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     2d8:	cf 91       	pop	r28
     2da:	1f 91       	pop	r17
     2dc:	0f 91       	pop	r16
     2de:	ff 90       	pop	r15
     2e0:	ef 90       	pop	r14
     2e2:	df 90       	pop	r13
     2e4:	cf 90       	pop	r12
     2e6:	08 95       	ret

000002e8 <HOME_voidCheckUserAndPass>:
     2e8:	8f 92       	push	r8
     2ea:	9f 92       	push	r9
     2ec:	af 92       	push	r10
     2ee:	bf 92       	push	r11
     2f0:	cf 92       	push	r12
     2f2:	df 92       	push	r13
     2f4:	ef 92       	push	r14
     2f6:	ff 92       	push	r15
     2f8:	0f 93       	push	r16
     2fa:	1f 93       	push	r17
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	a0 97       	sbiw	r28, 0x20	; 32
     306:	0f b6       	in	r0, 0x3f	; 63
     308:	f8 94       	cli
     30a:	de bf       	out	0x3e, r29	; 62
     30c:	0f be       	out	0x3f, r0	; 63
     30e:	cd bf       	out	0x3d, r28	; 61
     310:	61 15       	cp	r22, r1
     312:	71 05       	cpc	r23, r1
     314:	09 f4       	brne	.+2      	; 0x318 <HOME_voidCheckUserAndPass+0x30>
     316:	b6 c1       	rjmp	.+876    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     318:	4b 01       	movw	r8, r22
     31a:	81 30       	cpi	r24, 0x01	; 1
     31c:	09 f0       	breq	.+2      	; 0x320 <HOME_voidCheckUserAndPass+0x38>
     31e:	e8 c0       	rjmp	.+464    	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
     320:	d8 c0       	rjmp	.+432    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
     322:	a3 94       	inc	r10
     324:	be 01       	movw	r22, r28
     326:	6f 5e       	subi	r22, 0xEF	; 239
     328:	7f 4f       	sbci	r23, 0xFF	; 255
     32a:	ce 01       	movw	r24, r28
     32c:	49 96       	adiw	r24, 0x19	; 25
     32e:	0e 94 85 00 	call	0x10a	; 0x10a <HOME_voidLocalGetUserAndPass>
     332:	b1 2c       	mov	r11, r1
     334:	c1 2c       	mov	r12, r1
     336:	00 e0       	ldi	r16, 0x00	; 0
     338:	60 c0       	rjmp	.+192    	; 0x3fa <HOME_voidCheckUserAndPass+0x112>
     33a:	e0 2e       	mov	r14, r16
     33c:	ee 0c       	add	r14, r14
     33e:	ee 0c       	add	r14, r14
     340:	ee 0c       	add	r14, r14
     342:	ee 0c       	add	r14, r14
     344:	f1 2c       	mov	r15, r1
     346:	ae 01       	movw	r20, r28
     348:	47 5f       	subi	r20, 0xF7	; 247
     34a:	5f 4f       	sbci	r21, 0xFF	; 255
     34c:	68 e0       	ldi	r22, 0x08	; 8
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	c7 01       	movw	r24, r14
     352:	0e 94 c9 0b 	call	0x1792	; 0x1792 <EEPROM_voidSequentialRead>
     356:	ae 01       	movw	r20, r28
     358:	4f 5f       	subi	r20, 0xFF	; 255
     35a:	5f 4f       	sbci	r21, 0xFF	; 255
     35c:	68 e0       	ldi	r22, 0x08	; 8
     35e:	70 e0       	ldi	r23, 0x00	; 0
     360:	c7 01       	movw	r24, r14
     362:	08 96       	adiw	r24, 0x08	; 8
     364:	0e 94 c9 0b 	call	0x1792	; 0x1792 <EEPROM_voidSequentialRead>
     368:	40 e0       	ldi	r20, 0x00	; 0
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	14 c0       	rjmp	.+40     	; 0x396 <HOME_voidCheckUserAndPass+0xae>
     36e:	82 2f       	mov	r24, r18
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	e9 e1       	ldi	r30, 0x19	; 25
     374:	f0 e0       	ldi	r31, 0x00	; 0
     376:	ec 0f       	add	r30, r28
     378:	fd 1f       	adc	r31, r29
     37a:	e8 0f       	add	r30, r24
     37c:	f9 1f       	adc	r31, r25
     37e:	30 81       	ld	r19, Z
     380:	e9 e0       	ldi	r30, 0x09	; 9
     382:	f0 e0       	ldi	r31, 0x00	; 0
     384:	ec 0f       	add	r30, r28
     386:	fd 1f       	adc	r31, r29
     388:	e8 0f       	add	r30, r24
     38a:	f9 1f       	adc	r31, r25
     38c:	80 81       	ld	r24, Z
     38e:	38 13       	cpse	r19, r24
     390:	01 c0       	rjmp	.+2      	; 0x394 <HOME_voidCheckUserAndPass+0xac>
     392:	4f 5f       	subi	r20, 0xFF	; 255
     394:	2f 5f       	subi	r18, 0xFF	; 255
     396:	28 30       	cpi	r18, 0x08	; 8
     398:	50 f3       	brcs	.-44     	; 0x36e <HOME_voidCheckUserAndPass+0x86>
     39a:	48 30       	cpi	r20, 0x08	; 8
     39c:	61 f5       	brne	.+88     	; 0x3f6 <HOME_voidCheckUserAndPass+0x10e>
     39e:	15 c0       	rjmp	.+42     	; 0x3ca <HOME_voidCheckUserAndPass+0xe2>
     3a0:	82 2f       	mov	r24, r18
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	e1 e1       	ldi	r30, 0x11	; 17
     3a6:	f0 e0       	ldi	r31, 0x00	; 0
     3a8:	ec 0f       	add	r30, r28
     3aa:	fd 1f       	adc	r31, r29
     3ac:	e8 0f       	add	r30, r24
     3ae:	f9 1f       	adc	r31, r25
     3b0:	30 81       	ld	r19, Z
     3b2:	e1 e0       	ldi	r30, 0x01	; 1
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	ec 0f       	add	r30, r28
     3b8:	fd 1f       	adc	r31, r29
     3ba:	e8 0f       	add	r30, r24
     3bc:	f9 1f       	adc	r31, r25
     3be:	80 81       	ld	r24, Z
     3c0:	38 13       	cpse	r19, r24
     3c2:	01 c0       	rjmp	.+2      	; 0x3c6 <HOME_voidCheckUserAndPass+0xde>
     3c4:	4f 5f       	subi	r20, 0xFF	; 255
     3c6:	2f 5f       	subi	r18, 0xFF	; 255
     3c8:	02 c0       	rjmp	.+4      	; 0x3ce <HOME_voidCheckUserAndPass+0xe6>
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	28 30       	cpi	r18, 0x08	; 8
     3d0:	38 f3       	brcs	.-50     	; 0x3a0 <HOME_voidCheckUserAndPass+0xb8>
     3d2:	48 30       	cpi	r20, 0x08	; 8
     3d4:	71 f4       	brne	.+28     	; 0x3f2 <HOME_voidCheckUserAndPass+0x10a>
     3d6:	05 30       	cpi	r16, 0x05	; 5
     3d8:	31 f4       	brne	.+12     	; 0x3e6 <HOME_voidCheckUserAndPass+0xfe>
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	f4 01       	movw	r30, r8
     3de:	80 83       	st	Z, r24
     3e0:	dd 24       	eor	r13, r13
     3e2:	d3 94       	inc	r13
     3e4:	0d c0       	rjmp	.+26     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3e6:	82 e0       	ldi	r24, 0x02	; 2
     3e8:	f4 01       	movw	r30, r8
     3ea:	80 83       	st	Z, r24
     3ec:	dd 24       	eor	r13, r13
     3ee:	d3 94       	inc	r13
     3f0:	07 c0       	rjmp	.+14     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3f2:	b3 94       	inc	r11
     3f4:	01 c0       	rjmp	.+2      	; 0x3f8 <HOME_voidCheckUserAndPass+0x110>
     3f6:	c3 94       	inc	r12
     3f8:	0f 5f       	subi	r16, 0xFF	; 255
     3fa:	06 30       	cpi	r16, 0x06	; 6
     3fc:	08 f4       	brcc	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
     3fe:	9d cf       	rjmp	.-198    	; 0x33a <HOME_voidCheckUserAndPass+0x52>
     400:	f1 e0       	ldi	r31, 0x01	; 1
     402:	df 12       	cpse	r13, r31
     404:	14 c0       	rjmp	.+40     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     406:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
     40a:	60 e0       	ldi	r22, 0x00	; 0
     40c:	81 e0       	ldi	r24, 0x01	; 1
     40e:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     412:	88 ec       	ldi	r24, 0xC8	; 200
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     41a:	2f ef       	ldi	r18, 0xFF	; 255
     41c:	89 e6       	ldi	r24, 0x69	; 105
     41e:	98 e1       	ldi	r25, 0x18	; 24
     420:	21 50       	subi	r18, 0x01	; 1
     422:	80 40       	sbci	r24, 0x00	; 0
     424:	90 40       	sbci	r25, 0x00	; 0
     426:	e1 f7       	brne	.-8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     428:	00 c0       	rjmp	.+0      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     42a:	00 00       	nop
     42c:	58 c0       	rjmp	.+176    	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
     42e:	e6 e0       	ldi	r30, 0x06	; 6
     430:	ce 12       	cpse	r12, r30
     432:	26 c0       	rjmp	.+76     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     434:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
     438:	60 e0       	ldi	r22, 0x00	; 0
     43a:	81 e0       	ldi	r24, 0x01	; 1
     43c:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     440:	88 ed       	ldi	r24, 0xD8	; 216
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     448:	60 e0       	ldi	r22, 0x00	; 0
     44a:	82 e0       	ldi	r24, 0x02	; 2
     44c:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     450:	86 ee       	ldi	r24, 0xE6	; 230
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     458:	12 30       	cpi	r17, 0x02	; 2
     45a:	c9 f1       	breq	.+114    	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     45c:	ff ef       	ldi	r31, 0xFF	; 255
     45e:	23 ed       	ldi	r18, 0xD3	; 211
     460:	80 e3       	ldi	r24, 0x30	; 48
     462:	f1 50       	subi	r31, 0x01	; 1
     464:	20 40       	sbci	r18, 0x00	; 0
     466:	80 40       	sbci	r24, 0x00	; 0
     468:	e1 f7       	brne	.-8      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     46a:	00 c0       	rjmp	.+0      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     46c:	00 00       	nop
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	82 e0       	ldi	r24, 0x02	; 2
     472:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     476:	86 ef       	ldi	r24, 0xF6	; 246
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     47e:	27 c0       	rjmp	.+78     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     480:	bb 20       	and	r11, r11
     482:	29 f1       	breq	.+74     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     484:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
     488:	60 e0       	ldi	r22, 0x00	; 0
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     490:	88 ed       	ldi	r24, 0xD8	; 216
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     498:	60 e0       	ldi	r22, 0x00	; 0
     49a:	82 e0       	ldi	r24, 0x02	; 2
     49c:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     4a0:	87 e0       	ldi	r24, 0x07	; 7
     4a2:	91 e0       	ldi	r25, 0x01	; 1
     4a4:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     4a8:	12 30       	cpi	r17, 0x02	; 2
     4aa:	89 f0       	breq	.+34     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     4ac:	9f ef       	ldi	r25, 0xFF	; 255
     4ae:	e3 ed       	ldi	r30, 0xD3	; 211
     4b0:	f0 e3       	ldi	r31, 0x30	; 48
     4b2:	91 50       	subi	r25, 0x01	; 1
     4b4:	e0 40       	sbci	r30, 0x00	; 0
     4b6:	f0 40       	sbci	r31, 0x00	; 0
     4b8:	e1 f7       	brne	.-8      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
     4bc:	00 00       	nop
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	82 e0       	ldi	r24, 0x02	; 2
     4c2:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
     4c6:	86 ef       	ldi	r24, 0xF6	; 246
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
     4ce:	1f 5f       	subi	r17, 0xFF	; 255
     4d0:	03 c0       	rjmp	.+6      	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
     4d2:	d1 2c       	mov	r13, r1
     4d4:	a1 2c       	mov	r10, r1
     4d6:	10 e0       	ldi	r17, 0x00	; 0
     4d8:	13 30       	cpi	r17, 0x03	; 3
     4da:	08 f4       	brcc	.+2      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
     4dc:	22 cf       	rjmp	.-444    	; 0x322 <HOME_voidCheckUserAndPass+0x3a>
     4de:	23 e0       	ldi	r18, 0x03	; 3
     4e0:	a2 12       	cpse	r10, r18
     4e2:	d0 c0       	rjmp	.+416    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     4e4:	d1 10       	cpse	r13, r1
     4e6:	ce c0       	rjmp	.+412    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     4e8:	85 e0       	ldi	r24, 0x05	; 5
     4ea:	f4 01       	movw	r30, r8
     4ec:	80 83       	st	Z, r24
     4ee:	ca c0       	rjmp	.+404    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     4f0:	82 30       	cpi	r24, 0x02	; 2
     4f2:	09 f0       	breq	.+2      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
     4f4:	c7 c0       	rjmp	.+398    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     4f6:	b8 c0       	rjmp	.+368    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
     4f8:	a3 94       	inc	r10
     4fa:	86 e1       	ldi	r24, 0x16	; 22
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     502:	89 e3       	ldi	r24, 0x39	; 57
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     50a:	be 01       	movw	r22, r28
     50c:	6f 5e       	subi	r22, 0xEF	; 239
     50e:	7f 4f       	sbci	r23, 0xFF	; 255
     510:	ce 01       	movw	r24, r28
     512:	49 96       	adiw	r24, 0x19	; 25
     514:	0e 94 fe 00 	call	0x1fc	; 0x1fc <HOME_voidRemoteGetUserAndPass>
     518:	b1 2c       	mov	r11, r1
     51a:	c1 2c       	mov	r12, r1
     51c:	05 e0       	ldi	r16, 0x05	; 5
     51e:	60 c0       	rjmp	.+192    	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     520:	e0 2e       	mov	r14, r16
     522:	ee 0c       	add	r14, r14
     524:	ee 0c       	add	r14, r14
     526:	ee 0c       	add	r14, r14
     528:	ee 0c       	add	r14, r14
     52a:	f1 2c       	mov	r15, r1
     52c:	ae 01       	movw	r20, r28
     52e:	47 5f       	subi	r20, 0xF7	; 247
     530:	5f 4f       	sbci	r21, 0xFF	; 255
     532:	68 e0       	ldi	r22, 0x08	; 8
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	c7 01       	movw	r24, r14
     538:	0e 94 c9 0b 	call	0x1792	; 0x1792 <EEPROM_voidSequentialRead>
     53c:	ae 01       	movw	r20, r28
     53e:	4f 5f       	subi	r20, 0xFF	; 255
     540:	5f 4f       	sbci	r21, 0xFF	; 255
     542:	68 e0       	ldi	r22, 0x08	; 8
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	c7 01       	movw	r24, r14
     548:	08 96       	adiw	r24, 0x08	; 8
     54a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <EEPROM_voidSequentialRead>
     54e:	40 e0       	ldi	r20, 0x00	; 0
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	14 c0       	rjmp	.+40     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
     554:	82 2f       	mov	r24, r18
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	e9 e1       	ldi	r30, 0x19	; 25
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	ec 0f       	add	r30, r28
     55e:	fd 1f       	adc	r31, r29
     560:	e8 0f       	add	r30, r24
     562:	f9 1f       	adc	r31, r25
     564:	30 81       	ld	r19, Z
     566:	e9 e0       	ldi	r30, 0x09	; 9
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	ec 0f       	add	r30, r28
     56c:	fd 1f       	adc	r31, r29
     56e:	e8 0f       	add	r30, r24
     570:	f9 1f       	adc	r31, r25
     572:	80 81       	ld	r24, Z
     574:	38 13       	cpse	r19, r24
     576:	01 c0       	rjmp	.+2      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
     578:	4f 5f       	subi	r20, 0xFF	; 255
     57a:	2f 5f       	subi	r18, 0xFF	; 255
     57c:	28 30       	cpi	r18, 0x08	; 8
     57e:	50 f3       	brcs	.-44     	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
     580:	48 30       	cpi	r20, 0x08	; 8
     582:	61 f5       	brne	.+88     	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
     584:	15 c0       	rjmp	.+42     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
     586:	82 2f       	mov	r24, r18
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	e1 e1       	ldi	r30, 0x11	; 17
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	ec 0f       	add	r30, r28
     590:	fd 1f       	adc	r31, r29
     592:	e8 0f       	add	r30, r24
     594:	f9 1f       	adc	r31, r25
     596:	30 81       	ld	r19, Z
     598:	e1 e0       	ldi	r30, 0x01	; 1
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	ec 0f       	add	r30, r28
     59e:	fd 1f       	adc	r31, r29
     5a0:	e8 0f       	add	r30, r24
     5a2:	f9 1f       	adc	r31, r25
     5a4:	80 81       	ld	r24, Z
     5a6:	38 13       	cpse	r19, r24
     5a8:	01 c0       	rjmp	.+2      	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
     5aa:	4f 5f       	subi	r20, 0xFF	; 255
     5ac:	2f 5f       	subi	r18, 0xFF	; 255
     5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	28 30       	cpi	r18, 0x08	; 8
     5b6:	38 f3       	brcs	.-50     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
     5b8:	48 30       	cpi	r20, 0x08	; 8
     5ba:	71 f4       	brne	.+28     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
     5bc:	05 30       	cpi	r16, 0x05	; 5
     5be:	31 f4       	brne	.+12     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
     5c0:	83 e0       	ldi	r24, 0x03	; 3
     5c2:	f4 01       	movw	r30, r8
     5c4:	80 83       	st	Z, r24
     5c6:	dd 24       	eor	r13, r13
     5c8:	d3 94       	inc	r13
     5ca:	0d c0       	rjmp	.+26     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
     5cc:	84 e0       	ldi	r24, 0x04	; 4
     5ce:	f4 01       	movw	r30, r8
     5d0:	80 83       	st	Z, r24
     5d2:	dd 24       	eor	r13, r13
     5d4:	d3 94       	inc	r13
     5d6:	07 c0       	rjmp	.+14     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
     5d8:	b3 94       	inc	r11
     5da:	01 c0       	rjmp	.+2      	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
     5dc:	c3 94       	inc	r12
     5de:	0f 5f       	subi	r16, 0xFF	; 255
     5e0:	0b 30       	cpi	r16, 0x0B	; 11
     5e2:	08 f4       	brcc	.+2      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
     5e4:	9d cf       	rjmp	.-198    	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     5e6:	f1 e0       	ldi	r31, 0x01	; 1
     5e8:	df 12       	cpse	r13, r31
     5ea:	08 c0       	rjmp	.+16     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
     5ec:	88 ec       	ldi	r24, 0xC8	; 200
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     5f4:	8d e0       	ldi	r24, 0x0D	; 13
     5f6:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     5fa:	3c c0       	rjmp	.+120    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
     5fc:	26 e0       	ldi	r18, 0x06	; 6
     5fe:	c2 12       	cpse	r12, r18
     600:	18 c0       	rjmp	.+48     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
     602:	88 ed       	ldi	r24, 0xD8	; 216
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     60a:	8d e0       	ldi	r24, 0x0D	; 13
     60c:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     610:	86 ee       	ldi	r24, 0xE6	; 230
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     618:	8d e0       	ldi	r24, 0x0D	; 13
     61a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     61e:	12 30       	cpi	r17, 0x02	; 2
     620:	09 f1       	breq	.+66     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
     622:	86 ef       	ldi	r24, 0xF6	; 246
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     62a:	8d e0       	ldi	r24, 0x0D	; 13
     62c:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     630:	19 c0       	rjmp	.+50     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
     632:	bb 20       	and	r11, r11
     634:	b9 f0       	breq	.+46     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
     636:	88 ed       	ldi	r24, 0xD8	; 216
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     63e:	8d e0       	ldi	r24, 0x0D	; 13
     640:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     644:	87 e0       	ldi	r24, 0x07	; 7
     646:	91 e0       	ldi	r25, 0x01	; 1
     648:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     64c:	8d e0       	ldi	r24, 0x0D	; 13
     64e:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     652:	12 30       	cpi	r17, 0x02	; 2
     654:	39 f0       	breq	.+14     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
     656:	86 ef       	ldi	r24, 0xF6	; 246
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     65e:	8d e0       	ldi	r24, 0x0D	; 13
     660:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     664:	1f 5f       	subi	r17, 0xFF	; 255
     666:	03 c0       	rjmp	.+6      	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
     668:	d1 2c       	mov	r13, r1
     66a:	a1 2c       	mov	r10, r1
     66c:	10 e0       	ldi	r17, 0x00	; 0
     66e:	13 30       	cpi	r17, 0x03	; 3
     670:	08 f4       	brcc	.+2      	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
     672:	42 cf       	rjmp	.-380    	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
     674:	83 e0       	ldi	r24, 0x03	; 3
     676:	a8 12       	cpse	r10, r24
     678:	05 c0       	rjmp	.+10     	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     67a:	d1 10       	cpse	r13, r1
     67c:	03 c0       	rjmp	.+6      	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     67e:	85 e0       	ldi	r24, 0x05	; 5
     680:	f4 01       	movw	r30, r8
     682:	80 83       	st	Z, r24
     684:	a0 96       	adiw	r28, 0x20	; 32
     686:	0f b6       	in	r0, 0x3f	; 63
     688:	f8 94       	cli
     68a:	de bf       	out	0x3e, r29	; 62
     68c:	0f be       	out	0x3f, r0	; 63
     68e:	cd bf       	out	0x3d, r28	; 61
     690:	df 91       	pop	r29
     692:	cf 91       	pop	r28
     694:	1f 91       	pop	r17
     696:	0f 91       	pop	r16
     698:	ff 90       	pop	r15
     69a:	ef 90       	pop	r14
     69c:	df 90       	pop	r13
     69e:	cf 90       	pop	r12
     6a0:	bf 90       	pop	r11
     6a2:	af 90       	pop	r10
     6a4:	9f 90       	pop	r9
     6a6:	8f 90       	pop	r8
     6a8:	08 95       	ret

000006aa <KPD_Interface_RemoteAdmin>:
     6aa:	8c ec       	ldi	r24, 0xCC	; 204
     6ac:	97 e0       	ldi	r25, 0x07	; 7
     6ae:	0e 94 c7 11 	call	0x238e	; 0x238e <TMR0_SetCallBackCTC>
     6b2:	8d e0       	ldi	r24, 0x0D	; 13
     6b4:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     6b8:	8c ec       	ldi	r24, 0xCC	; 204
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     6c0:	8d e0       	ldi	r24, 0x0D	; 13
     6c2:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     6c6:	89 ed       	ldi	r24, 0xD9	; 217
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     6ce:	8d e0       	ldi	r24, 0x0D	; 13
     6d0:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     6d4:	0e 94 af 11 	call	0x235e	; 0x235e <TMR0_voidStart>
     6d8:	85 ec       	ldi	r24, 0xC5	; 197
     6da:	93 e0       	ldi	r25, 0x03	; 3
     6dc:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     6e0:	0e 94 bd 11 	call	0x237a	; 0x237a <TMR0_voidStop>
     6e4:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     6e8:	82 33       	cpi	r24, 0x32	; 50
     6ea:	09 f4       	brne	.+2      	; 0x6ee <KPD_Interface_RemoteAdmin+0x44>
     6ec:	42 c0       	rjmp	.+132    	; 0x772 <KPD_Interface_RemoteAdmin+0xc8>
     6ee:	18 f4       	brcc	.+6      	; 0x6f6 <KPD_Interface_RemoteAdmin+0x4c>
     6f0:	81 33       	cpi	r24, 0x31	; 49
     6f2:	41 f0       	breq	.+16     	; 0x704 <KPD_Interface_RemoteAdmin+0x5a>
     6f4:	08 95       	ret
     6f6:	83 33       	cpi	r24, 0x33	; 51
     6f8:	09 f4       	brne	.+2      	; 0x6fc <KPD_Interface_RemoteAdmin+0x52>
     6fa:	4c c3       	rjmp	.+1688   	; 0xd94 <__stack+0x535>
     6fc:	84 33       	cpi	r24, 0x34	; 52
     6fe:	09 f4       	brne	.+2      	; 0x702 <KPD_Interface_RemoteAdmin+0x58>
     700:	74 c3       	rjmp	.+1768   	; 0xdea <__stack+0x58b>
     702:	08 95       	ret
     704:	87 ee       	ldi	r24, 0xE7	; 231
     706:	91 e0       	ldi	r25, 0x01	; 1
     708:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     70c:	8d e0       	ldi	r24, 0x0D	; 13
     70e:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     712:	6c eb       	ldi	r22, 0xBC	; 188
     714:	73 e0       	ldi	r23, 0x03	; 3
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
     71c:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <__data_end>
     720:	1f 92       	push	r1
     722:	8f 93       	push	r24
     724:	84 ef       	ldi	r24, 0xF4	; 244
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	9f 93       	push	r25
     72a:	8f 93       	push	r24
     72c:	8a ed       	ldi	r24, 0xDA	; 218
     72e:	93 e0       	ldi	r25, 0x03	; 3
     730:	9f 93       	push	r25
     732:	8f 93       	push	r24
     734:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     738:	8a ed       	ldi	r24, 0xDA	; 218
     73a:	93 e0       	ldi	r25, 0x03	; 3
     73c:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     740:	8d e0       	ldi	r24, 0x0D	; 13
     742:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     746:	84 e0       	ldi	r24, 0x04	; 4
     748:	92 e0       	ldi	r25, 0x02	; 2
     74a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     74e:	8d e0       	ldi	r24, 0x0D	; 13
     750:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     754:	0e 94 af 11 	call	0x235e	; 0x235e <TMR0_voidStart>
     758:	85 ec       	ldi	r24, 0xC5	; 197
     75a:	93 e0       	ldi	r25, 0x03	; 3
     75c:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     760:	0e 94 bd 11 	call	0x237a	; 0x237a <TMR0_voidStop>
     764:	0f 90       	pop	r0
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
     76e:	0f 90       	pop	r0
     770:	08 95       	ret
     772:	8d e0       	ldi	r24, 0x0D	; 13
     774:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     778:	81 e1       	ldi	r24, 0x11	; 17
     77a:	92 e0       	ldi	r25, 0x02	; 2
     77c:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     780:	8d e0       	ldi	r24, 0x0D	; 13
     782:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     786:	81 e2       	ldi	r24, 0x21	; 33
     788:	92 e0       	ldi	r25, 0x02	; 2
     78a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     78e:	8d e0       	ldi	r24, 0x0D	; 13
     790:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     794:	8d e0       	ldi	r24, 0x0D	; 13
     796:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     79a:	0e 94 af 11 	call	0x235e	; 0x235e <TMR0_voidStart>
     79e:	85 ec       	ldi	r24, 0xC5	; 197
     7a0:	93 e0       	ldi	r25, 0x03	; 3
     7a2:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     7a6:	0e 94 bd 11 	call	0x237a	; 0x237a <TMR0_voidStop>
     7aa:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     7ae:	83 33       	cpi	r24, 0x33	; 51
     7b0:	09 f4       	brne	.+2      	; 0x7b4 <KPD_Interface_RemoteAdmin+0x10a>
     7b2:	a0 c0       	rjmp	.+320    	; 0x8f4 <__stack+0x95>
     7b4:	30 f4       	brcc	.+12     	; 0x7c2 <KPD_Interface_RemoteAdmin+0x118>
     7b6:	81 33       	cpi	r24, 0x31	; 49
     7b8:	69 f0       	breq	.+26     	; 0x7d4 <KPD_Interface_RemoteAdmin+0x12a>
     7ba:	82 33       	cpi	r24, 0x32	; 50
     7bc:	09 f4       	brne	.+2      	; 0x7c0 <KPD_Interface_RemoteAdmin+0x116>
     7be:	50 c0       	rjmp	.+160    	; 0x860 <__stack+0x1>
     7c0:	08 95       	ret
     7c2:	85 33       	cpi	r24, 0x35	; 53
     7c4:	09 f4       	brne	.+2      	; 0x7c8 <KPD_Interface_RemoteAdmin+0x11e>
     7c6:	2a c1       	rjmp	.+596    	; 0xa1c <__stack+0x1bd>
     7c8:	08 f4       	brcc	.+2      	; 0x7cc <KPD_Interface_RemoteAdmin+0x122>
     7ca:	de c0       	rjmp	.+444    	; 0x988 <__stack+0x129>
     7cc:	86 33       	cpi	r24, 0x36	; 54
     7ce:	09 f4       	brne	.+2      	; 0x7d2 <KPD_Interface_RemoteAdmin+0x128>
     7d0:	6f c1       	rjmp	.+734    	; 0xab0 <__stack+0x251>
     7d2:	08 95       	ret
     7d4:	4e eb       	ldi	r20, 0xBE	; 190
     7d6:	53 e0       	ldi	r21, 0x03	; 3
     7d8:	63 e0       	ldi	r22, 0x03	; 3
     7da:	83 e0       	ldi	r24, 0x03	; 3
     7dc:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
     7e0:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
     7e4:	81 30       	cpi	r24, 0x01	; 1
     7e6:	e9 f4       	brne	.+58     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     7e8:	8e e2       	ldi	r24, 0x2E	; 46
     7ea:	92 e0       	ldi	r25, 0x02	; 2
     7ec:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     7f0:	8d e0       	ldi	r24, 0x0D	; 13
     7f2:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     7f6:	8c e3       	ldi	r24, 0x3C	; 60
     7f8:	92 e0       	ldi	r25, 0x02	; 2
     7fa:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     7fe:	8d e0       	ldi	r24, 0x0D	; 13
     800:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     804:	85 ec       	ldi	r24, 0xC5	; 197
     806:	93 e0       	ldi	r25, 0x03	; 3
     808:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     80c:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     810:	81 33       	cpi	r24, 0x31	; 49
     812:	09 f0       	breq	.+2      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     814:	03 c3       	rjmp	.+1542   	; 0xe1c <__stack+0x5bd>
     816:	41 e0       	ldi	r20, 0x01	; 1
     818:	63 e0       	ldi	r22, 0x03	; 3
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
     820:	08 95       	ret
     822:	81 11       	cpse	r24, r1
     824:	fb c2       	rjmp	.+1526   	; 0xe1c <__stack+0x5bd>
     826:	8d e4       	ldi	r24, 0x4D	; 77
     828:	92 e0       	ldi	r25, 0x02	; 2
     82a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     82e:	8d e0       	ldi	r24, 0x0D	; 13
     830:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     834:	8c e5       	ldi	r24, 0x5C	; 92
     836:	92 e0       	ldi	r25, 0x02	; 2
     838:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     83c:	8d e0       	ldi	r24, 0x0D	; 13
     83e:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     842:	85 ec       	ldi	r24, 0xC5	; 197
     844:	93 e0       	ldi	r25, 0x03	; 3
     846:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     84a:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     84e:	81 33       	cpi	r24, 0x31	; 49
     850:	09 f0       	breq	.+2      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     852:	e4 c2       	rjmp	.+1480   	; 0xe1c <__stack+0x5bd>
     854:	41 e0       	ldi	r20, 0x01	; 1
     856:	63 e0       	ldi	r22, 0x03	; 3
     858:	83 e0       	ldi	r24, 0x03	; 3
     85a:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
     85e:	08 95       	ret
     860:	4e eb       	ldi	r20, 0xBE	; 190
     862:	53 e0       	ldi	r21, 0x03	; 3
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	81 e0       	ldi	r24, 0x01	; 1
     868:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
     86c:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
     870:	81 30       	cpi	r24, 0x01	; 1
     872:	f9 f4       	brne	.+62     	; 0x8b2 <__stack+0x53>
     874:	8c e6       	ldi	r24, 0x6C	; 108
     876:	92 e0       	ldi	r25, 0x02	; 2
     878:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     87c:	8d e0       	ldi	r24, 0x0D	; 13
     87e:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     882:	8c e3       	ldi	r24, 0x3C	; 60
     884:	92 e0       	ldi	r25, 0x02	; 2
     886:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     88a:	8d e0       	ldi	r24, 0x0D	; 13
     88c:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     890:	85 ec       	ldi	r24, 0xC5	; 197
     892:	93 e0       	ldi	r25, 0x03	; 3
     894:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     898:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     89c:	81 33       	cpi	r24, 0x31	; 49
     89e:	29 f4       	brne	.+10     	; 0x8aa <__stack+0x4b>
     8a0:	41 e0       	ldi	r20, 0x01	; 1
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
     8aa:	8f ef       	ldi	r24, 0xFF	; 255
     8ac:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     8b0:	08 95       	ret
     8b2:	81 11       	cpse	r24, r1
     8b4:	b3 c2       	rjmp	.+1382   	; 0xe1c <__stack+0x5bd>
     8b6:	8a e7       	ldi	r24, 0x7A	; 122
     8b8:	92 e0       	ldi	r25, 0x02	; 2
     8ba:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     8be:	8d e0       	ldi	r24, 0x0D	; 13
     8c0:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     8c4:	8c e5       	ldi	r24, 0x5C	; 92
     8c6:	92 e0       	ldi	r25, 0x02	; 2
     8c8:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     8cc:	8d e0       	ldi	r24, 0x0D	; 13
     8ce:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     8d2:	85 ec       	ldi	r24, 0xC5	; 197
     8d4:	93 e0       	ldi	r25, 0x03	; 3
     8d6:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     8da:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     8de:	81 33       	cpi	r24, 0x31	; 49
     8e0:	29 f4       	brne	.+10     	; 0x8ec <__stack+0x8d>
     8e2:	41 e0       	ldi	r20, 0x01	; 1
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
     8ec:	8f ef       	ldi	r24, 0xFF	; 255
     8ee:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     8f2:	08 95       	ret
     8f4:	4e eb       	ldi	r20, 0xBE	; 190
     8f6:	53 e0       	ldi	r21, 0x03	; 3
     8f8:	62 e0       	ldi	r22, 0x02	; 2
     8fa:	80 e0       	ldi	r24, 0x00	; 0
     8fc:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
     900:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
     904:	81 30       	cpi	r24, 0x01	; 1
     906:	f9 f4       	brne	.+62     	; 0x946 <__stack+0xe7>
     908:	89 e8       	ldi	r24, 0x89	; 137
     90a:	92 e0       	ldi	r25, 0x02	; 2
     90c:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     910:	8d e0       	ldi	r24, 0x0D	; 13
     912:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     916:	8c e3       	ldi	r24, 0x3C	; 60
     918:	92 e0       	ldi	r25, 0x02	; 2
     91a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     91e:	8d e0       	ldi	r24, 0x0D	; 13
     920:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     924:	85 ec       	ldi	r24, 0xC5	; 197
     926:	93 e0       	ldi	r25, 0x03	; 3
     928:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     92c:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     930:	81 33       	cpi	r24, 0x31	; 49
     932:	29 f4       	brne	.+10     	; 0x93e <__stack+0xdf>
     934:	41 e0       	ldi	r20, 0x01	; 1
     936:	62 e0       	ldi	r22, 0x02	; 2
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
     93e:	8f ef       	ldi	r24, 0xFF	; 255
     940:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     944:	08 95       	ret
     946:	81 11       	cpse	r24, r1
     948:	69 c2       	rjmp	.+1234   	; 0xe1c <__stack+0x5bd>
     94a:	87 e9       	ldi	r24, 0x97	; 151
     94c:	92 e0       	ldi	r25, 0x02	; 2
     94e:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     952:	8d e0       	ldi	r24, 0x0D	; 13
     954:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     958:	8c e5       	ldi	r24, 0x5C	; 92
     95a:	92 e0       	ldi	r25, 0x02	; 2
     95c:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     960:	8d e0       	ldi	r24, 0x0D	; 13
     962:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     966:	85 ec       	ldi	r24, 0xC5	; 197
     968:	93 e0       	ldi	r25, 0x03	; 3
     96a:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     96e:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     972:	81 33       	cpi	r24, 0x31	; 49
     974:	29 f4       	brne	.+10     	; 0x980 <__stack+0x121>
     976:	41 e0       	ldi	r20, 0x01	; 1
     978:	62 e0       	ldi	r22, 0x02	; 2
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
     980:	8f ef       	ldi	r24, 0xFF	; 255
     982:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     986:	08 95       	ret
     988:	4e eb       	ldi	r20, 0xBE	; 190
     98a:	53 e0       	ldi	r21, 0x03	; 3
     98c:	63 e0       	ldi	r22, 0x03	; 3
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
     994:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
     998:	81 30       	cpi	r24, 0x01	; 1
     99a:	f9 f4       	brne	.+62     	; 0x9da <__stack+0x17b>
     99c:	86 ea       	ldi	r24, 0xA6	; 166
     99e:	92 e0       	ldi	r25, 0x02	; 2
     9a0:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     9a4:	8d e0       	ldi	r24, 0x0D	; 13
     9a6:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     9aa:	8c e3       	ldi	r24, 0x3C	; 60
     9ac:	92 e0       	ldi	r25, 0x02	; 2
     9ae:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     9b2:	8d e0       	ldi	r24, 0x0D	; 13
     9b4:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     9b8:	85 ec       	ldi	r24, 0xC5	; 197
     9ba:	93 e0       	ldi	r25, 0x03	; 3
     9bc:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     9c0:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     9c4:	81 33       	cpi	r24, 0x31	; 49
     9c6:	29 f4       	brne	.+10     	; 0x9d2 <__stack+0x173>
     9c8:	41 e0       	ldi	r20, 0x01	; 1
     9ca:	63 e0       	ldi	r22, 0x03	; 3
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
     9d2:	8f ef       	ldi	r24, 0xFF	; 255
     9d4:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     9d8:	08 95       	ret
     9da:	81 11       	cpse	r24, r1
     9dc:	1f c2       	rjmp	.+1086   	; 0xe1c <__stack+0x5bd>
     9de:	84 eb       	ldi	r24, 0xB4	; 180
     9e0:	92 e0       	ldi	r25, 0x02	; 2
     9e2:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     9e6:	8d e0       	ldi	r24, 0x0D	; 13
     9e8:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     9ec:	8c e5       	ldi	r24, 0x5C	; 92
     9ee:	92 e0       	ldi	r25, 0x02	; 2
     9f0:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     9f4:	8d e0       	ldi	r24, 0x0D	; 13
     9f6:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     9fa:	85 ec       	ldi	r24, 0xC5	; 197
     9fc:	93 e0       	ldi	r25, 0x03	; 3
     9fe:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     a02:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     a06:	81 33       	cpi	r24, 0x31	; 49
     a08:	29 f4       	brne	.+10     	; 0xa14 <__stack+0x1b5>
     a0a:	41 e0       	ldi	r20, 0x01	; 1
     a0c:	63 e0       	ldi	r22, 0x03	; 3
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
     a14:	8f ef       	ldi	r24, 0xFF	; 255
     a16:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     a1a:	08 95       	ret
     a1c:	4e eb       	ldi	r20, 0xBE	; 190
     a1e:	53 e0       	ldi	r21, 0x03	; 3
     a20:	62 e0       	ldi	r22, 0x02	; 2
     a22:	83 e0       	ldi	r24, 0x03	; 3
     a24:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
     a28:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
     a2c:	81 30       	cpi	r24, 0x01	; 1
     a2e:	f9 f4       	brne	.+62     	; 0xa6e <__stack+0x20f>
     a30:	83 ec       	ldi	r24, 0xC3	; 195
     a32:	92 e0       	ldi	r25, 0x02	; 2
     a34:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     a38:	8d e0       	ldi	r24, 0x0D	; 13
     a3a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     a3e:	8c e3       	ldi	r24, 0x3C	; 60
     a40:	92 e0       	ldi	r25, 0x02	; 2
     a42:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     a46:	8d e0       	ldi	r24, 0x0D	; 13
     a48:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     a4c:	85 ec       	ldi	r24, 0xC5	; 197
     a4e:	93 e0       	ldi	r25, 0x03	; 3
     a50:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     a54:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     a58:	81 33       	cpi	r24, 0x31	; 49
     a5a:	29 f4       	brne	.+10     	; 0xa66 <__stack+0x207>
     a5c:	41 e0       	ldi	r20, 0x01	; 1
     a5e:	62 e0       	ldi	r22, 0x02	; 2
     a60:	83 e0       	ldi	r24, 0x03	; 3
     a62:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
     a66:	8f ef       	ldi	r24, 0xFF	; 255
     a68:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     a6c:	08 95       	ret
     a6e:	81 11       	cpse	r24, r1
     a70:	d5 c1       	rjmp	.+938    	; 0xe1c <__stack+0x5bd>
     a72:	81 ed       	ldi	r24, 0xD1	; 209
     a74:	92 e0       	ldi	r25, 0x02	; 2
     a76:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     a7a:	8d e0       	ldi	r24, 0x0D	; 13
     a7c:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     a80:	8c e5       	ldi	r24, 0x5C	; 92
     a82:	92 e0       	ldi	r25, 0x02	; 2
     a84:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     a88:	8d e0       	ldi	r24, 0x0D	; 13
     a8a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     a8e:	85 ec       	ldi	r24, 0xC5	; 197
     a90:	93 e0       	ldi	r25, 0x03	; 3
     a92:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     a96:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     a9a:	81 33       	cpi	r24, 0x31	; 49
     a9c:	29 f4       	brne	.+10     	; 0xaa8 <__stack+0x249>
     a9e:	41 e0       	ldi	r20, 0x01	; 1
     aa0:	62 e0       	ldi	r22, 0x02	; 2
     aa2:	83 e0       	ldi	r24, 0x03	; 3
     aa4:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
     aa8:	8f ef       	ldi	r24, 0xFF	; 255
     aaa:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <bluetooh_value>
     aae:	08 95       	ret
     ab0:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     ab4:	88 23       	and	r24, r24
     ab6:	09 f4       	brne	.+2      	; 0xaba <__stack+0x25b>
     ab8:	b1 c0       	rjmp	.+354    	; 0xc1c <__stack+0x3bd>
     aba:	8d e0       	ldi	r24, 0x0D	; 13
     abc:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     ac0:	80 ee       	ldi	r24, 0xE0	; 224
     ac2:	92 e0       	ldi	r25, 0x02	; 2
     ac4:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     ac8:	8d e0       	ldi	r24, 0x0D	; 13
     aca:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     ace:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     ad2:	1f 92       	push	r1
     ad4:	8f 93       	push	r24
     ad6:	8e ee       	ldi	r24, 0xEE	; 238
     ad8:	92 e0       	ldi	r25, 0x02	; 2
     ada:	9f 93       	push	r25
     adc:	8f 93       	push	r24
     ade:	86 ec       	ldi	r24, 0xC6	; 198
     ae0:	93 e0       	ldi	r25, 0x03	; 3
     ae2:	9f 93       	push	r25
     ae4:	8f 93       	push	r24
     ae6:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     aea:	86 ec       	ldi	r24, 0xC6	; 198
     aec:	93 e0       	ldi	r25, 0x03	; 3
     aee:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     af2:	8d e0       	ldi	r24, 0x0D	; 13
     af4:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     af8:	8e ef       	ldi	r24, 0xFE	; 254
     afa:	92 e0       	ldi	r25, 0x02	; 2
     afc:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     b00:	8d e0       	ldi	r24, 0x0D	; 13
     b02:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     b06:	85 ec       	ldi	r24, 0xC5	; 197
     b08:	93 e0       	ldi	r25, 0x03	; 3
     b0a:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     b0e:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     b12:	0f 90       	pop	r0
     b14:	0f 90       	pop	r0
     b16:	0f 90       	pop	r0
     b18:	0f 90       	pop	r0
     b1a:	0f 90       	pop	r0
     b1c:	0f 90       	pop	r0
     b1e:	88 23       	and	r24, r24
     b20:	09 f4       	brne	.+2      	; 0xb24 <__stack+0x2c5>
     b22:	7c c1       	rjmp	.+760    	; 0xe1c <__stack+0x5bd>
     b24:	81 33       	cpi	r24, 0x31	; 49
     b26:	09 f0       	breq	.+2      	; 0xb2a <__stack+0x2cb>
     b28:	43 c0       	rjmp	.+134    	; 0xbb0 <__stack+0x351>
     b2a:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
     b2e:	66 5f       	subi	r22, 0xF6	; 246
     b30:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
     b3e:	ab 01       	movw	r20, r22
     b40:	bc 01       	movw	r22, r24
     b42:	88 ee       	ldi	r24, 0xE8	; 232
     b44:	93 e0       	ldi	r25, 0x03	; 3
     b46:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
     b4a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     b4e:	1f 92       	push	r1
     b50:	8f 93       	push	r24
     b52:	8e ee       	ldi	r24, 0xEE	; 238
     b54:	92 e0       	ldi	r25, 0x02	; 2
     b56:	9f 93       	push	r25
     b58:	8f 93       	push	r24
     b5a:	86 ec       	ldi	r24, 0xC6	; 198
     b5c:	93 e0       	ldi	r25, 0x03	; 3
     b5e:	9f 93       	push	r25
     b60:	8f 93       	push	r24
     b62:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     b66:	86 ec       	ldi	r24, 0xC6	; 198
     b68:	93 e0       	ldi	r25, 0x03	; 3
     b6a:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     b6e:	8d e0       	ldi	r24, 0x0D	; 13
     b70:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     b74:	8e ef       	ldi	r24, 0xFE	; 254
     b76:	92 e0       	ldi	r25, 0x02	; 2
     b78:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     b7c:	8d e0       	ldi	r24, 0x0D	; 13
     b7e:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     b82:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     b86:	0f 90       	pop	r0
     b88:	0f 90       	pop	r0
     b8a:	0f 90       	pop	r0
     b8c:	0f 90       	pop	r0
     b8e:	0f 90       	pop	r0
     b90:	0f 90       	pop	r0
     b92:	85 36       	cpi	r24, 0x65	; 101
     b94:	08 f4       	brcc	.+2      	; 0xb98 <__stack+0x339>
     b96:	42 c1       	rjmp	.+644    	; 0xe1c <__stack+0x5bd>
     b98:	84 e6       	ldi	r24, 0x64	; 100
     b9a:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <dimmer_brightness>
     b9e:	40 e0       	ldi	r20, 0x00	; 0
     ba0:	50 e0       	ldi	r21, 0x00	; 0
     ba2:	68 ec       	ldi	r22, 0xC8	; 200
     ba4:	72 e4       	ldi	r23, 0x42	; 66
     ba6:	88 ee       	ldi	r24, 0xE8	; 232
     ba8:	93 e0       	ldi	r25, 0x03	; 3
     baa:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
     bae:	08 95       	ret
     bb0:	82 33       	cpi	r24, 0x32	; 50
     bb2:	09 f0       	breq	.+2      	; 0xbb6 <__stack+0x357>
     bb4:	33 c1       	rjmp	.+614    	; 0xe1c <__stack+0x5bd>
     bb6:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
     bba:	6a 50       	subi	r22, 0x0A	; 10
     bbc:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
     bca:	ab 01       	movw	r20, r22
     bcc:	bc 01       	movw	r22, r24
     bce:	88 ee       	ldi	r24, 0xE8	; 232
     bd0:	93 e0       	ldi	r25, 0x03	; 3
     bd2:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
     bd6:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     bda:	1f 92       	push	r1
     bdc:	8f 93       	push	r24
     bde:	8e ee       	ldi	r24, 0xEE	; 238
     be0:	92 e0       	ldi	r25, 0x02	; 2
     be2:	9f 93       	push	r25
     be4:	8f 93       	push	r24
     be6:	86 ec       	ldi	r24, 0xC6	; 198
     be8:	93 e0       	ldi	r25, 0x03	; 3
     bea:	9f 93       	push	r25
     bec:	8f 93       	push	r24
     bee:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     bf2:	86 ec       	ldi	r24, 0xC6	; 198
     bf4:	93 e0       	ldi	r25, 0x03	; 3
     bf6:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     bfa:	8d e0       	ldi	r24, 0x0D	; 13
     bfc:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     c00:	8e ef       	ldi	r24, 0xFE	; 254
     c02:	92 e0       	ldi	r25, 0x02	; 2
     c04:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     c08:	8d e0       	ldi	r24, 0x0D	; 13
     c0a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     c0e:	0f 90       	pop	r0
     c10:	0f 90       	pop	r0
     c12:	0f 90       	pop	r0
     c14:	0f 90       	pop	r0
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	08 95       	ret
     c1c:	81 11       	cpse	r24, r1
     c1e:	fe c0       	rjmp	.+508    	; 0xe1c <__stack+0x5bd>
     c20:	8e e0       	ldi	r24, 0x0E	; 14
     c22:	93 e0       	ldi	r25, 0x03	; 3
     c24:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     c28:	2f ef       	ldi	r18, 0xFF	; 255
     c2a:	33 ed       	ldi	r19, 0xD3	; 211
     c2c:	80 e3       	ldi	r24, 0x30	; 48
     c2e:	21 50       	subi	r18, 0x01	; 1
     c30:	30 40       	sbci	r19, 0x00	; 0
     c32:	80 40       	sbci	r24, 0x00	; 0
     c34:	e1 f7       	brne	.-8      	; 0xc2e <__stack+0x3cf>
     c36:	00 c0       	rjmp	.+0      	; 0xc38 <__stack+0x3d9>
     c38:	00 00       	nop
     c3a:	8d e0       	ldi	r24, 0x0D	; 13
     c3c:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     c40:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     c44:	1f 92       	push	r1
     c46:	8f 93       	push	r24
     c48:	8e ee       	ldi	r24, 0xEE	; 238
     c4a:	92 e0       	ldi	r25, 0x02	; 2
     c4c:	9f 93       	push	r25
     c4e:	8f 93       	push	r24
     c50:	86 ec       	ldi	r24, 0xC6	; 198
     c52:	93 e0       	ldi	r25, 0x03	; 3
     c54:	9f 93       	push	r25
     c56:	8f 93       	push	r24
     c58:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     c5c:	86 ec       	ldi	r24, 0xC6	; 198
     c5e:	93 e0       	ldi	r25, 0x03	; 3
     c60:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     c64:	8d e0       	ldi	r24, 0x0D	; 13
     c66:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     c6a:	8e ef       	ldi	r24, 0xFE	; 254
     c6c:	92 e0       	ldi	r25, 0x02	; 2
     c6e:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     c72:	8d e0       	ldi	r24, 0x0D	; 13
     c74:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     c78:	85 ec       	ldi	r24, 0xC5	; 197
     c7a:	93 e0       	ldi	r25, 0x03	; 3
     c7c:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	0f 90       	pop	r0
     c88:	0f 90       	pop	r0
     c8a:	0f 90       	pop	r0
     c8c:	7e c0       	rjmp	.+252    	; 0xd8a <__stack+0x52b>
     c8e:	81 33       	cpi	r24, 0x31	; 49
     c90:	09 f0       	breq	.+2      	; 0xc94 <__stack+0x435>
     c92:	43 c0       	rjmp	.+134    	; 0xd1a <__stack+0x4bb>
     c94:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
     c98:	66 5f       	subi	r22, 0xF6	; 246
     c9a:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
     ca8:	ab 01       	movw	r20, r22
     caa:	bc 01       	movw	r22, r24
     cac:	88 ee       	ldi	r24, 0xE8	; 232
     cae:	93 e0       	ldi	r25, 0x03	; 3
     cb0:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
     cb4:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     cb8:	1f 92       	push	r1
     cba:	8f 93       	push	r24
     cbc:	8e ee       	ldi	r24, 0xEE	; 238
     cbe:	92 e0       	ldi	r25, 0x02	; 2
     cc0:	9f 93       	push	r25
     cc2:	8f 93       	push	r24
     cc4:	86 ec       	ldi	r24, 0xC6	; 198
     cc6:	93 e0       	ldi	r25, 0x03	; 3
     cc8:	9f 93       	push	r25
     cca:	8f 93       	push	r24
     ccc:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     cd0:	86 ec       	ldi	r24, 0xC6	; 198
     cd2:	93 e0       	ldi	r25, 0x03	; 3
     cd4:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     cd8:	8d e0       	ldi	r24, 0x0D	; 13
     cda:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     cde:	8e ef       	ldi	r24, 0xFE	; 254
     ce0:	92 e0       	ldi	r25, 0x02	; 2
     ce2:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     ce6:	8d e0       	ldi	r24, 0x0D	; 13
     ce8:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     cec:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     cf0:	0f 90       	pop	r0
     cf2:	0f 90       	pop	r0
     cf4:	0f 90       	pop	r0
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	85 36       	cpi	r24, 0x65	; 101
     cfe:	08 f4       	brcc	.+2      	; 0xd02 <__stack+0x4a3>
     d00:	8d c0       	rjmp	.+282    	; 0xe1c <__stack+0x5bd>
     d02:	84 e6       	ldi	r24, 0x64	; 100
     d04:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <dimmer_brightness>
     d08:	40 e0       	ldi	r20, 0x00	; 0
     d0a:	50 e0       	ldi	r21, 0x00	; 0
     d0c:	68 ec       	ldi	r22, 0xC8	; 200
     d0e:	72 e4       	ldi	r23, 0x42	; 66
     d10:	88 ee       	ldi	r24, 0xE8	; 232
     d12:	93 e0       	ldi	r25, 0x03	; 3
     d14:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
     d18:	08 95       	ret
     d1a:	82 33       	cpi	r24, 0x32	; 50
     d1c:	99 f5       	brne	.+102    	; 0xd84 <__stack+0x525>
     d1e:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
     d22:	6a 50       	subi	r22, 0x0A	; 10
     d24:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
     d28:	70 e0       	ldi	r23, 0x00	; 0
     d2a:	80 e0       	ldi	r24, 0x00	; 0
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
     d32:	ab 01       	movw	r20, r22
     d34:	bc 01       	movw	r22, r24
     d36:	88 ee       	ldi	r24, 0xE8	; 232
     d38:	93 e0       	ldi	r25, 0x03	; 3
     d3a:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
     d3e:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
     d42:	1f 92       	push	r1
     d44:	8f 93       	push	r24
     d46:	8e ee       	ldi	r24, 0xEE	; 238
     d48:	92 e0       	ldi	r25, 0x02	; 2
     d4a:	9f 93       	push	r25
     d4c:	8f 93       	push	r24
     d4e:	86 ec       	ldi	r24, 0xC6	; 198
     d50:	93 e0       	ldi	r25, 0x03	; 3
     d52:	9f 93       	push	r25
     d54:	8f 93       	push	r24
     d56:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     d5a:	86 ec       	ldi	r24, 0xC6	; 198
     d5c:	93 e0       	ldi	r25, 0x03	; 3
     d5e:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     d62:	8d e0       	ldi	r24, 0x0D	; 13
     d64:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     d68:	8e ef       	ldi	r24, 0xFE	; 254
     d6a:	92 e0       	ldi	r25, 0x02	; 2
     d6c:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     d70:	8d e0       	ldi	r24, 0x0D	; 13
     d72:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     d76:	0f 90       	pop	r0
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	0f 90       	pop	r0
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	08 95       	ret
     d84:	80 33       	cpi	r24, 0x30	; 48
     d86:	09 f4       	brne	.+2      	; 0xd8a <__stack+0x52b>
     d88:	49 c0       	rjmp	.+146    	; 0xe1c <__stack+0x5bd>
     d8a:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     d8e:	81 11       	cpse	r24, r1
     d90:	7e cf       	rjmp	.-260    	; 0xc8e <__stack+0x42f>
     d92:	08 95       	ret
     d94:	6c eb       	ldi	r22, 0xBC	; 188
     d96:	73 e0       	ldi	r23, 0x03	; 3
     d98:	80 e0       	ldi	r24, 0x00	; 0
     d9a:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
     d9e:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <__data_end>
     da2:	1f 92       	push	r1
     da4:	8f 93       	push	r24
     da6:	84 ef       	ldi	r24, 0xF4	; 244
     da8:	91 e0       	ldi	r25, 0x01	; 1
     daa:	9f 93       	push	r25
     dac:	8f 93       	push	r24
     dae:	8a ed       	ldi	r24, 0xDA	; 218
     db0:	93 e0       	ldi	r25, 0x03	; 3
     db2:	9f 93       	push	r25
     db4:	8f 93       	push	r24
     db6:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
     dba:	8a ed       	ldi	r24, 0xDA	; 218
     dbc:	93 e0       	ldi	r25, 0x03	; 3
     dbe:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     dc2:	8d e0       	ldi	r24, 0x0D	; 13
     dc4:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     dc8:	84 e0       	ldi	r24, 0x04	; 4
     dca:	92 e0       	ldi	r25, 0x02	; 2
     dcc:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     dd0:	8d e0       	ldi	r24, 0x0D	; 13
     dd2:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
     dd6:	85 ec       	ldi	r24, 0xC5	; 197
     dd8:	93 e0       	ldi	r25, 0x03	; 3
     dda:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
     dde:	0f 90       	pop	r0
     de0:	0f 90       	pop	r0
     de2:	0f 90       	pop	r0
     de4:	0f 90       	pop	r0
     de6:	0f 90       	pop	r0
     de8:	0f 90       	pop	r0
     dea:	8d e1       	ldi	r24, 0x1D	; 29
     dec:	93 e0       	ldi	r25, 0x03	; 3
     dee:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	70 e0       	ldi	r23, 0x00	; 0
     df6:	84 eb       	ldi	r24, 0xB4	; 180
     df8:	92 e4       	ldi	r25, 0x42	; 66
     dfa:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <SERVO_voidStartByAngle>
     dfe:	9a ea       	ldi	r25, 0xAA	; 170
     e00:	26 ee       	ldi	r18, 0xE6	; 230
     e02:	36 e9       	ldi	r19, 0x96	; 150
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	91 50       	subi	r25, 0x01	; 1
     e08:	20 40       	sbci	r18, 0x00	; 0
     e0a:	30 40       	sbci	r19, 0x00	; 0
     e0c:	80 40       	sbci	r24, 0x00	; 0
     e0e:	d9 f7       	brne	.-10     	; 0xe06 <__stack+0x5a7>
     e10:	00 00       	nop
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	cb 01       	movw	r24, r22
     e18:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <SERVO_voidStartByAngle>
     e1c:	08 95       	ret

00000e1e <WelcomeScreen>:
    
}

void WelcomeScreen()
{
    LCD_voidDisplayStringDelay((u8 *)" Welcome to your");
     e1e:	8d e2       	ldi	r24, 0x2D	; 45
     e20:	93 e0       	ldi	r25, 0x03	; 3
     e22:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
    LCD_voidSendCommand(Write_SecondLine);
     e26:	80 ec       	ldi	r24, 0xC0	; 192
     e28:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
    LCD_voidDisplayStringDelay((u8 *)"   Smart Home");
     e2c:	8e e3       	ldi	r24, 0x3E	; 62
     e2e:	93 e0       	ldi	r25, 0x03	; 3
     e30:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e34:	2f ef       	ldi	r18, 0xFF	; 255
     e36:	83 ed       	ldi	r24, 0xD3	; 211
     e38:	90 e3       	ldi	r25, 0x30	; 48
     e3a:	21 50       	subi	r18, 0x01	; 1
     e3c:	80 40       	sbci	r24, 0x00	; 0
     e3e:	90 40       	sbci	r25, 0x00	; 0
     e40:	e1 f7       	brne	.-8      	; 0xe3a <WelcomeScreen+0x1c>
     e42:	00 c0       	rjmp	.+0      	; 0xe44 <WelcomeScreen+0x26>
     e44:	00 00       	nop
     e46:	08 95       	ret

00000e48 <APP_init>:




void APP_init(void)
{
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
     e4c:	cd b7       	in	r28, 0x3d	; 61
     e4e:	de b7       	in	r29, 0x3e	; 62
     e50:	e1 97       	sbiw	r28, 0x31	; 49
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	f8 94       	cli
     e56:	de bf       	out	0x3e, r29	; 62
     e58:	0f be       	out	0x3f, r0	; 63
     e5a:	cd bf       	out	0x3d, r28	; 61
    HOME_voidInit();
     e5c:	0e 94 49 00 	call	0x92	; 0x92 <HOME_voidInit>
	
    ADC_voidInit(ADC_REFERENCE_INTRNAL);
     e60:	83 e0       	ldi	r24, 0x03	; 3
     e62:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <ADC_voidInit>
	DIO_voidSetPinDirection(DIO_PORTA,DIO_PIN0,DIO_PIN_INPUT);
     e66:	40 e0       	ldi	r20, 0x00	; 0
     e68:	60 e0       	ldi	r22, 0x00	; 0
     e6a:	80 e0       	ldi	r24, 0x00	; 0
     e6c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	
	// display the welcome screen
	WelcomeScreen();
     e70:	0e 94 0f 07 	call	0xe1e	; 0xe1e <WelcomeScreen>
	LCD_voidClear();
     e74:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>

	
	
	u8 testusername[8]="7654321";
     e78:	88 e0       	ldi	r24, 0x08	; 8
     e7a:	ec e4       	ldi	r30, 0x4C	; 76
     e7c:	f3 e0       	ldi	r31, 0x03	; 3
     e7e:	de 01       	movw	r26, r28
     e80:	11 96       	adiw	r26, 0x01	; 1
     e82:	01 90       	ld	r0, Z+
     e84:	0d 92       	st	X+, r0
     e86:	8a 95       	dec	r24
     e88:	e1 f7       	brne	.-8      	; 0xe82 <APP_init+0x3a>
	u8 testuserpass[8]="7654321";
     e8a:	88 e0       	ldi	r24, 0x08	; 8
     e8c:	ec e4       	ldi	r30, 0x4C	; 76
     e8e:	f3 e0       	ldi	r31, 0x03	; 3
     e90:	de 01       	movw	r26, r28
     e92:	19 96       	adiw	r26, 0x09	; 9
     e94:	01 90       	ld	r0, Z+
     e96:	0d 92       	st	X+, r0
     e98:	8a 95       	dec	r24
     e9a:	e1 f7       	brne	.-8      	; 0xe94 <APP_init+0x4c>
	u8 testadminname[8]="1122334";
     e9c:	88 e0       	ldi	r24, 0x08	; 8
     e9e:	e4 e5       	ldi	r30, 0x54	; 84
     ea0:	f3 e0       	ldi	r31, 0x03	; 3
     ea2:	de 01       	movw	r26, r28
     ea4:	51 96       	adiw	r26, 0x11	; 17
     ea6:	01 90       	ld	r0, Z+
     ea8:	0d 92       	st	X+, r0
     eaa:	8a 95       	dec	r24
     eac:	e1 f7       	brne	.-8      	; 0xea6 <APP_init+0x5e>
	u8 testadminpass[8]="1122334";
     eae:	88 e0       	ldi	r24, 0x08	; 8
     eb0:	e4 e5       	ldi	r30, 0x54	; 84
     eb2:	f3 e0       	ldi	r31, 0x03	; 3
     eb4:	de 01       	movw	r26, r28
     eb6:	59 96       	adiw	r26, 0x19	; 25
     eb8:	01 90       	ld	r0, Z+
     eba:	0d 92       	st	X+, r0
     ebc:	8a 95       	dec	r24
     ebe:	e1 f7       	brne	.-8      	; 0xeb8 <APP_init+0x70>
	u8 testusername1[8]="1002003";
     ec0:	88 e0       	ldi	r24, 0x08	; 8
     ec2:	ec e5       	ldi	r30, 0x5C	; 92
     ec4:	f3 e0       	ldi	r31, 0x03	; 3
     ec6:	de 01       	movw	r26, r28
     ec8:	91 96       	adiw	r26, 0x21	; 33
     eca:	01 90       	ld	r0, Z+
     ecc:	0d 92       	st	X+, r0
     ece:	8a 95       	dec	r24
     ed0:	e1 f7       	brne	.-8      	; 0xeca <APP_init+0x82>
	u8 testuserpass1[8]="1002003";
     ed2:	88 e0       	ldi	r24, 0x08	; 8
     ed4:	ec e5       	ldi	r30, 0x5C	; 92
     ed6:	f3 e0       	ldi	r31, 0x03	; 3
     ed8:	de 01       	movw	r26, r28
     eda:	99 96       	adiw	r26, 0x29	; 41
     edc:	01 90       	ld	r0, Z+
     ede:	0d 92       	st	X+, r0
     ee0:	8a 95       	dec	r24
     ee2:	e1 f7       	brne	.-8      	; 0xedc <APP_init+0x94>
	u8 usertype;	
	
	EEPROM_voidWritePage(16,&testusername[0]);
     ee4:	be 01       	movw	r22, r28
     ee6:	6f 5f       	subi	r22, 0xFF	; 255
     ee8:	7f 4f       	sbci	r23, 0xFF	; 255
     eea:	80 e1       	ldi	r24, 0x10	; 16
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 9e 0b 	call	0x173c	; 0x173c <EEPROM_voidWritePage>
	EEPROM_voidWritePage(24,&testuserpass[0]);
     ef2:	be 01       	movw	r22, r28
     ef4:	67 5f       	subi	r22, 0xF7	; 247
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	88 e1       	ldi	r24, 0x18	; 24
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 9e 0b 	call	0x173c	; 0x173c <EEPROM_voidWritePage>
	EEPROM_voidWritePage(80,&testadminname[0]);
     f00:	be 01       	movw	r22, r28
     f02:	6f 5e       	subi	r22, 0xEF	; 239
     f04:	7f 4f       	sbci	r23, 0xFF	; 255
     f06:	80 e5       	ldi	r24, 0x50	; 80
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	0e 94 9e 0b 	call	0x173c	; 0x173c <EEPROM_voidWritePage>
	EEPROM_voidWritePage(88,&testadminpass[0]);
     f0e:	be 01       	movw	r22, r28
     f10:	67 5e       	subi	r22, 0xE7	; 231
     f12:	7f 4f       	sbci	r23, 0xFF	; 255
     f14:	88 e5       	ldi	r24, 0x58	; 88
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	0e 94 9e 0b 	call	0x173c	; 0x173c <EEPROM_voidWritePage>
	EEPROM_voidWritePage(96,&testusername1[0]);
     f1c:	be 01       	movw	r22, r28
     f1e:	6f 5d       	subi	r22, 0xDF	; 223
     f20:	7f 4f       	sbci	r23, 0xFF	; 255
     f22:	80 e6       	ldi	r24, 0x60	; 96
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	0e 94 9e 0b 	call	0x173c	; 0x173c <EEPROM_voidWritePage>
	EEPROM_voidWritePage(104,&testuserpass1[0]);
     f2a:	be 01       	movw	r22, r28
     f2c:	67 5d       	subi	r22, 0xD7	; 215
     f2e:	7f 4f       	sbci	r23, 0xFF	; 255
     f30:	88 e6       	ldi	r24, 0x68	; 104
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	0e 94 9e 0b 	call	0x173c	; 0x173c <EEPROM_voidWritePage>

	
	HOME_voidCheckUserAndPass(HOME_REMOTE_ACCESS,&usertype);
     f38:	be 01       	movw	r22, r28
     f3a:	6f 5c       	subi	r22, 0xCF	; 207
     f3c:	7f 4f       	sbci	r23, 0xFF	; 255
     f3e:	82 e0       	ldi	r24, 0x02	; 2
     f40:	0e 94 74 01 	call	0x2e8	; 0x2e8 <HOME_voidCheckUserAndPass>





}
     f44:	e1 96       	adiw	r28, 0x31	; 49
     f46:	0f b6       	in	r0, 0x3f	; 63
     f48:	f8 94       	cli
     f4a:	de bf       	out	0x3e, r29	; 62
     f4c:	0f be       	out	0x3f, r0	; 63
     f4e:	cd bf       	out	0x3d, r28	; 61
     f50:	df 91       	pop	r29
     f52:	cf 91       	pop	r28
     f54:	08 95       	ret

00000f56 <Display_Remotetemp>:
    }
}

void Display_Remotetemp(void)
{
	ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp); 
     f56:	6c eb       	ldi	r22, 0xBC	; 188
     f58:	73 e0       	ldi	r23, 0x03	; 3
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
	sprintf(tempString, "Room Temp: %d c", local_temp);
     f60:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <__data_end>
     f64:	1f 92       	push	r1
     f66:	8f 93       	push	r24
     f68:	84 ef       	ldi	r24, 0xF4	; 244
     f6a:	91 e0       	ldi	r25, 0x01	; 1
     f6c:	9f 93       	push	r25
     f6e:	8f 93       	push	r24
     f70:	8a ed       	ldi	r24, 0xDA	; 218
     f72:	93 e0       	ldi	r25, 0x03	; 3
     f74:	9f 93       	push	r25
     f76:	8f 93       	push	r24
     f78:	0e 94 5d 15 	call	0x2aba	; 0x2aba <sprintf>
	BL_voidTxString(tempString);
     f7c:	8a ed       	ldi	r24, 0xDA	; 218
     f7e:	93 e0       	ldi	r25, 0x03	; 3
     f80:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
	BL_voidTxChar('\r');
     f84:	8d e0       	ldi	r24, 0x0D	; 13
     f86:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
}
     f8a:	0f 90       	pop	r0
     f8c:	0f 90       	pop	r0
     f8e:	0f 90       	pop	r0
     f90:	0f 90       	pop	r0
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	08 95       	ret

00000f98 <Idle_RemoteAction>:
}


void Idle_RemoteAction()
{ 
    BL_voidTxChar('\r');
     f98:	8d e0       	ldi	r24, 0x0D	; 13
     f9a:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
	Display_Remotetemp();
     f9e:	0e 94 ab 07 	call	0xf56	; 0xf56 <Display_Remotetemp>
	BL_voidTxString("0-Go to Home");
     fa2:	84 e6       	ldi	r24, 0x64	; 100
     fa4:	93 e0       	ldi	r25, 0x03	; 3
     fa6:	0e 94 98 0b 	call	0x1730	; 0x1730 <BL_voidTxString>
	BL_voidTxChar('\r');
     faa:	8d e0       	ldi	r24, 0x0D	; 13
     fac:	0e 94 92 0b 	call	0x1724	; 0x1724 <BL_voidTxChar>
	BL_voidRxChar(&bluetooh_value);
     fb0:	85 ec       	ldi	r24, 0xC5	; 197
     fb2:	93 e0       	ldi	r25, 0x03	; 3
     fb4:	0e 94 95 0b 	call	0x172a	; 0x172a <BL_voidRxChar>
    if (bluetooh_value == '0')
     fb8:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <bluetooh_value>
     fbc:	80 33       	cpi	r24, 0x30	; 48
     fbe:	11 f4       	brne	.+4      	; 0xfc4 <Idle_RemoteAction+0x2c>
    {
        TMR0clear_flag();
     fc0:	0e 94 ce 11 	call	0x239c	; 0x239c <TMR0clear_flag>
     fc4:	08 95       	ret

00000fc6 <Display_temp>:

}

void Display_temp(void)
{
	ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
     fc6:	6c eb       	ldi	r22, 0xBC	; 188
     fc8:	73 e0       	ldi	r23, 0x03	; 3
     fca:	80 e0       	ldi	r24, 0x00	; 0
     fcc:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
	LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,11);
     fd0:	6b e0       	ldi	r22, 0x0B	; 11
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
	LCD_voidDisplayNumber(local_temp);
     fd8:	60 91 bc 03 	lds	r22, 0x03BC	; 0x8003bc <__data_end>
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
     fe6:	08 95       	ret

00000fe8 <Idle_Action>:
	BL_voidTxChar('\r');
}

void Idle_Action()
{ 
    LCD_voidClear();
     fe8:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
	LCD_voidSendCommand(Write_FirstLine);
     fec:	80 e8       	ldi	r24, 0x80	; 128
     fee:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
	LCD_voidDisplayString((u8 *)"Room Temp:   c");
     ff2:	81 e7       	ldi	r24, 0x71	; 113
     ff4:	93 e0       	ldi	r25, 0x03	; 3
     ff6:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
	Display_temp();
     ffa:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <Display_temp>
	LCD_voidSendCommand(Write_SecondLine);
     ffe:	80 ec       	ldi	r24, 0xC0	; 192
    1000:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
	LCD_voidDisplayString("0-Go to Home");
    1004:	84 e6       	ldi	r24, 0x64	; 100
    1006:	93 e0       	ldi	r25, 0x03	; 3
    1008:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
	
    while (local_KPDIdleValue == KPD_Not_Pressed)
    100c:	06 c0       	rjmp	.+12     	; 0x101a <Idle_Action+0x32>
    {
        KPD_voidGetValue(&local_KPDIdleValue);
    100e:	81 e6       	ldi	r24, 0x61	; 97
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
		Display_temp();
    1016:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <Display_temp>
	LCD_voidDisplayString((u8 *)"Room Temp:   c");
	Display_temp();
	LCD_voidSendCommand(Write_SecondLine);
	LCD_voidDisplayString("0-Go to Home");
	
    while (local_KPDIdleValue == KPD_Not_Pressed)
    101a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    101e:	8f 3f       	cpi	r24, 0xFF	; 255
    1020:	b1 f3       	breq	.-20     	; 0x100e <Idle_Action+0x26>
        KPD_voidGetValue(&local_KPDIdleValue);
		Display_temp();

        
    }
    if (local_KPDIdleValue == '0')
    1022:	80 33       	cpi	r24, 0x30	; 48
    1024:	11 f4       	brne	.+4      	; 0x102a <Idle_Action+0x42>
    {
        LCD_voidClear();
    1026:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
    }
    TMR0clear_flag();
    102a:	0e 94 ce 11 	call	0x239c	; 0x239c <TMR0clear_flag>
    LCD_voidClear();
    102e:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
    1032:	08 95       	ret

00001034 <Reset_AllKPDValues>:

}

void Reset_AllKPDValues()
{
    Local_copyKPDValue = KPD_Not_Pressed;
    1034:	8f ef       	ldi	r24, 0xFF	; 255
    1036:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <Local_copyKPDValue>
    local_lightNum = KPD_Not_Pressed;
    103a:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <local_lightNum>
    local_lightStatus = KPD_Not_Pressed;
    103e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
	local_KPDIdleValue = KPD_Not_Pressed;
    1042:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <local_KPDIdleValue>
    1046:	08 95       	ret

00001048 <KPD_Interface_Localuser>:


void KPD_Interface_Localuser(void)
{

        Reset_AllKPDValues();
    1048:	0e 94 1a 08 	call	0x1034	; 0x1034 <Reset_AllKPDValues>

        TMR0_SetCallBackCTC(&Idle_Action);
    104c:	84 ef       	ldi	r24, 0xF4	; 244
    104e:	97 e0       	ldi	r25, 0x07	; 7
    1050:	0e 94 c7 11 	call	0x238e	; 0x238e <TMR0_SetCallBackCTC>

        TMR0_voidStart();
    1054:	0e 94 af 11 	call	0x235e	; 0x235e <TMR0_voidStart>
        LCD_voidClear();
    1058:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
        LCD_voidDisplayString((u8 *)"1-AC 2-light");
    105c:	8c ec       	ldi	r24, 0xCC	; 204
    105e:	91 e0       	ldi	r25, 0x01	; 1
    1060:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
        LCD_voidSendCommand(Write_SecondLine);
    1064:	80 ec       	ldi	r24, 0xC0	; 192
    1066:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
        LCD_voidDisplayString((u8 *)"3-temp 4-Door");
    106a:	89 ed       	ldi	r24, 0xD9	; 217
    106c:	91 e0       	ldi	r25, 0x01	; 1
    106e:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
        Reset_AllKPDValues();
    1072:	0e 94 1a 08 	call	0x1034	; 0x1034 <Reset_AllKPDValues>

        // busy wait for KPD
        while (Local_copyKPDValue == KPD_Not_Pressed)
    1076:	0c c0       	rjmp	.+24     	; 0x1090 <KPD_Interface_Localuser+0x48>
        {
            if (local_KPDIdleValue == '0')
    1078:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    107c:	80 33       	cpi	r24, 0x30	; 48
    107e:	21 f4       	brne	.+8      	; 0x1088 <KPD_Interface_Localuser+0x40>
            {
                local_KPDIdleValue = KPD_Not_Pressed;
    1080:	8f ef       	ldi	r24, 0xFF	; 255
    1082:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <local_KPDIdleValue>
                break;
    1086:	08 c0       	rjmp	.+16     	; 0x1098 <KPD_Interface_Localuser+0x50>
            }
            else
            {
                KPD_voidGetValue(&Local_copyKPDValue);
    1088:	84 e6       	ldi	r24, 0x64	; 100
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
        LCD_voidSendCommand(Write_SecondLine);
        LCD_voidDisplayString((u8 *)"3-temp 4-Door");
        Reset_AllKPDValues();

        // busy wait for KPD
        while (Local_copyKPDValue == KPD_Not_Pressed)
    1090:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <Local_copyKPDValue>
    1094:	8f 3f       	cpi	r24, 0xFF	; 255
    1096:	81 f3       	breq	.-32     	; 0x1078 <KPD_Interface_Localuser+0x30>
            else
            {
                KPD_voidGetValue(&Local_copyKPDValue);
            }
        }
        TMR0_voidStop();
    1098:	0e 94 bd 11 	call	0x237a	; 0x237a <TMR0_voidStop>
        switch (Local_copyKPDValue)
    109c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <Local_copyKPDValue>
    10a0:	82 33       	cpi	r24, 0x32	; 50
    10a2:	09 f4       	brne	.+2      	; 0x10a6 <KPD_Interface_Localuser+0x5e>
    10a4:	45 c0       	rjmp	.+138    	; 0x1130 <KPD_Interface_Localuser+0xe8>
    10a6:	83 33       	cpi	r24, 0x33	; 51
    10a8:	09 f4       	brne	.+2      	; 0x10ac <KPD_Interface_Localuser+0x64>
    10aa:	06 c3       	rjmp	.+1548   	; 0x16b8 <KPD_Interface_Localuser+0x670>
    10ac:	81 33       	cpi	r24, 0x31	; 49
    10ae:	09 f0       	breq	.+2      	; 0x10b2 <KPD_Interface_Localuser+0x6a>
    10b0:	35 c3       	rjmp	.+1642   	; 0x171c <KPD_Interface_Localuser+0x6d4>
        {
        case ('1'):

            LCD_voidClear();
    10b2:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
            LCD_voidDisplayStringDelay((u8 *)"AC Is On/off 0-H");
    10b6:	80 e8       	ldi	r24, 0x80	; 128
    10b8:	93 e0       	ldi	r25, 0x03	; 3
    10ba:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
            LCD_voidSendCommand(Write_SecondLine);
    10be:	80 ec       	ldi	r24, 0xC0	; 192
    10c0:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
			ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    10c4:	6c eb       	ldi	r22, 0xBC	; 188
    10c6:	73 e0       	ldi	r23, 0x03	; 3
    10c8:	80 e0       	ldi	r24, 0x00	; 0
    10ca:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
            LCD_voidDisplayStringDelay((u8 *)"Room Temp:  c");
    10ce:	81 e9       	ldi	r24, 0x91	; 145
    10d0:	93 e0       	ldi	r25, 0x03	; 3
    10d2:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
			LCD_voidGoTOSpecificPosition(LCD_LINE_TWO, 12);
    10d6:	6c e0       	ldi	r22, 0x0C	; 12
    10d8:	82 e0       	ldi	r24, 0x02	; 2
    10da:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
			LCD_voidDisplayNumber(local_temp);
    10de:	60 91 bc 03 	lds	r22, 0x03BC	; 0x8003bc <__data_end>
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
			while (local_KPDSelectValue == KPD_Not_Pressed)
    10ec:	1c c0       	rjmp	.+56     	; 0x1126 <KPD_Interface_Localuser+0xde>
			{
				KPD_voidGetValue(&local_KPDSelectValue);
    10ee:	80 e6       	ldi	r24, 0x60	; 96
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
				ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    10f6:	6c eb       	ldi	r22, 0xBC	; 188
    10f8:	73 e0       	ldi	r23, 0x03	; 3
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
				LCD_voidGoTOSpecificPosition(LCD_LINE_TWO, 12);
    1100:	6c e0       	ldi	r22, 0x0C	; 12
    1102:	82 e0       	ldi	r24, 0x02	; 2
    1104:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
				LCD_voidDisplayNumber(local_temp);
    1108:	60 91 bc 03 	lds	r22, 0x03BC	; 0x8003bc <__data_end>
    110c:	70 e0       	ldi	r23, 0x00	; 0
    110e:	80 e0       	ldi	r24, 0x00	; 0
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
				if (local_KPDSelectValue == '0')
    1116:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    111a:	80 33       	cpi	r24, 0x30	; 48
    111c:	21 f4       	brne	.+8      	; 0x1126 <KPD_Interface_Localuser+0xde>
				{
					local_KPDSelectValue = KPD_Not_Pressed;
    111e:	8f ef       	ldi	r24, 0xFF	; 255
    1120:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					break;
    1124:	08 95       	ret
            LCD_voidSendCommand(Write_SecondLine);
			ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
            LCD_voidDisplayStringDelay((u8 *)"Room Temp:  c");
			LCD_voidGoTOSpecificPosition(LCD_LINE_TWO, 12);
			LCD_voidDisplayNumber(local_temp);
			while (local_KPDSelectValue == KPD_Not_Pressed)
    1126:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    112a:	8f 3f       	cpi	r24, 0xFF	; 255
    112c:	01 f3       	breq	.-64     	; 0x10ee <KPD_Interface_Localuser+0xa6>
    112e:	08 95       	ret
            break;
			

        case ('2'):

            LCD_voidClear();
    1130:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
            LCD_voidDisplayStringDelay((u8 *)"Choose light to");
    1134:	81 e1       	ldi	r24, 0x11	; 17
    1136:	92 e0       	ldi	r25, 0x02	; 2
    1138:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
            LCD_voidSendCommand(Write_SecondLine);
    113c:	80 ec       	ldi	r24, 0xC0	; 192
    113e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
            LCD_voidDisplayStringDelay((u8 *)"control(1-6)");
    1142:	81 e2       	ldi	r24, 0x21	; 33
    1144:	92 e0       	ldi	r25, 0x02	; 2
    1146:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>

            TMR0_SetCallBackCTC(&Idle_Action);
    114a:	84 ef       	ldi	r24, 0xF4	; 244
    114c:	97 e0       	ldi	r25, 0x07	; 7
    114e:	0e 94 c7 11 	call	0x238e	; 0x238e <TMR0_SetCallBackCTC>
            TMR0_voidStart();
    1152:	0e 94 af 11 	call	0x235e	; 0x235e <TMR0_voidStart>
            // busy wait for KPD
            while (local_lightNum == KPD_Not_Pressed)
    1156:	0c c0       	rjmp	.+24     	; 0x1170 <KPD_Interface_Localuser+0x128>
            {
                KPD_voidGetValue(&local_lightNum);
    1158:	83 e6       	ldi	r24, 0x63	; 99
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                if(local_KPDIdleValue=='0')
    1160:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    1164:	80 33       	cpi	r24, 0x30	; 48
    1166:	21 f4       	brne	.+8      	; 0x1170 <KPD_Interface_Localuser+0x128>
                {
                    local_KPDIdleValue=KPD_Not_Pressed;
    1168:	8f ef       	ldi	r24, 0xFF	; 255
    116a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <local_KPDIdleValue>
                    break;
    116e:	04 c0       	rjmp	.+8      	; 0x1178 <KPD_Interface_Localuser+0x130>
            LCD_voidDisplayStringDelay((u8 *)"control(1-6)");

            TMR0_SetCallBackCTC(&Idle_Action);
            TMR0_voidStart();
            // busy wait for KPD
            while (local_lightNum == KPD_Not_Pressed)
    1170:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <local_lightNum>
    1174:	8f 3f       	cpi	r24, 0xFF	; 255
    1176:	81 f3       	breq	.-32     	; 0x1158 <KPD_Interface_Localuser+0x110>
                {
                    local_KPDIdleValue=KPD_Not_Pressed;
                    break;
                }
            }
            TMR0_voidStop();
    1178:	0e 94 bd 11 	call	0x237a	; 0x237a <TMR0_voidStop>
            switch (local_lightNum)
    117c:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <local_lightNum>
    1180:	83 33       	cpi	r24, 0x33	; 51
    1182:	09 f4       	brne	.+2      	; 0x1186 <KPD_Interface_Localuser+0x13e>
    1184:	a6 c0       	rjmp	.+332    	; 0x12d2 <KPD_Interface_Localuser+0x28a>
    1186:	30 f4       	brcc	.+12     	; 0x1194 <KPD_Interface_Localuser+0x14c>
    1188:	81 33       	cpi	r24, 0x31	; 49
    118a:	69 f0       	breq	.+26     	; 0x11a6 <KPD_Interface_Localuser+0x15e>
    118c:	82 33       	cpi	r24, 0x32	; 50
    118e:	09 f4       	brne	.+2      	; 0x1192 <KPD_Interface_Localuser+0x14a>
    1190:	54 c0       	rjmp	.+168    	; 0x123a <KPD_Interface_Localuser+0x1f2>
    1192:	08 95       	ret
    1194:	85 33       	cpi	r24, 0x35	; 53
    1196:	09 f4       	brne	.+2      	; 0x119a <KPD_Interface_Localuser+0x152>
    1198:	34 c1       	rjmp	.+616    	; 0x1402 <KPD_Interface_Localuser+0x3ba>
    119a:	08 f4       	brcc	.+2      	; 0x119e <KPD_Interface_Localuser+0x156>
    119c:	e6 c0       	rjmp	.+460    	; 0x136a <KPD_Interface_Localuser+0x322>
    119e:	86 33       	cpi	r24, 0x36	; 54
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <KPD_Interface_Localuser+0x15c>
    11a2:	7b c1       	rjmp	.+758    	; 0x149a <KPD_Interface_Localuser+0x452>
    11a4:	08 95       	ret
            {
            case ('1'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN3, &led_status);
    11a6:	4e eb       	ldi	r20, 0xBE	; 190
    11a8:	53 e0       	ldi	r21, 0x03	; 3
    11aa:	63 e0       	ldi	r22, 0x03	; 3
    11ac:	83 e0       	ldi	r24, 0x03	; 3
    11ae:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
                LCD_voidClear();
    11b2:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
                if (led_status == 1)
    11b6:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
    11ba:	81 30       	cpi	r24, 0x01	; 1
    11bc:	f1 f4       	brne	.+60     	; 0x11fa <KPD_Interface_Localuser+0x1b2>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is On");
    11be:	8e e2       	ldi	r24, 0x2E	; 46
    11c0:	92 e0       	ldi	r25, 0x02	; 2
    11c2:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    11c6:	80 ec       	ldi	r24, 0xC0	; 192
    11c8:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    11cc:	8c e3       	ldi	r24, 0x3C	; 60
    11ce:	92 e0       	ldi	r25, 0x02	; 2
    11d0:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    11d4:	04 c0       	rjmp	.+8      	; 0x11de <KPD_Interface_Localuser+0x196>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    11d6:	82 e6       	ldi	r24, 0x62	; 98
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    11de:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    11e2:	8f 3f       	cpi	r24, 0xFF	; 255
    11e4:	c1 f3       	breq	.-16     	; 0x11d6 <KPD_Interface_Localuser+0x18e>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    11e6:	81 33       	cpi	r24, 0x31	; 49
    11e8:	29 f4       	brne	.+10     	; 0x11f4 <KPD_Interface_Localuser+0x1ac>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
    11ea:	41 e0       	ldi	r20, 0x01	; 1
    11ec:	63 e0       	ldi	r22, 0x03	; 3
    11ee:	83 e0       	ldi	r24, 0x03	; 3
    11f0:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
                    }
                    Reset_AllKPDValues();
    11f4:	0e 94 1a 08 	call	0x1034	; 0x1034 <Reset_AllKPDValues>
					break;
    11f8:	08 95       	ret
                }
                else if (led_status == 0)
    11fa:	81 11       	cpse	r24, r1
    11fc:	8f c2       	rjmp	.+1310   	; 0x171c <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is OFF");
    11fe:	8d e4       	ldi	r24, 0x4D	; 77
    1200:	92 e0       	ldi	r25, 0x02	; 2
    1202:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1206:	80 ec       	ldi	r24, 0xC0	; 192
    1208:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    120c:	8c e5       	ldi	r24, 0x5C	; 92
    120e:	92 e0       	ldi	r25, 0x02	; 2
    1210:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1214:	04 c0       	rjmp	.+8      	; 0x121e <KPD_Interface_Localuser+0x1d6>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1216:	82 e6       	ldi	r24, 0x62	; 98
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    121e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1222:	8f 3f       	cpi	r24, 0xFF	; 255
    1224:	c1 f3       	breq	.-16     	; 0x1216 <KPD_Interface_Localuser+0x1ce>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    1226:	81 33       	cpi	r24, 0x31	; 49
    1228:	29 f4       	brne	.+10     	; 0x1234 <KPD_Interface_Localuser+0x1ec>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
    122a:	41 e0       	ldi	r20, 0x01	; 1
    122c:	63 e0       	ldi	r22, 0x03	; 3
    122e:	83 e0       	ldi	r24, 0x03	; 3
    1230:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
                    }
                    Reset_AllKPDValues();
    1234:	0e 94 1a 08 	call	0x1034	; 0x1034 <Reset_AllKPDValues>
    1238:	08 95       	ret
                }
                break;

            case ('2'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN4, &led_status);
    123a:	4e eb       	ldi	r20, 0xBE	; 190
    123c:	53 e0       	ldi	r21, 0x03	; 3
    123e:	64 e0       	ldi	r22, 0x04	; 4
    1240:	83 e0       	ldi	r24, 0x03	; 3
    1242:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
                LCD_voidClear();
    1246:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
                if (led_status == 1)
    124a:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
    124e:	81 30       	cpi	r24, 0x01	; 1
    1250:	f9 f4       	brne	.+62     	; 0x1290 <KPD_Interface_Localuser+0x248>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is On");
    1252:	8c e6       	ldi	r24, 0x6C	; 108
    1254:	92 e0       	ldi	r25, 0x02	; 2
    1256:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    125a:	80 ec       	ldi	r24, 0xC0	; 192
    125c:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1260:	8c e3       	ldi	r24, 0x3C	; 60
    1262:	92 e0       	ldi	r25, 0x02	; 2
    1264:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1268:	04 c0       	rjmp	.+8      	; 0x1272 <KPD_Interface_Localuser+0x22a>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    126a:	82 e6       	ldi	r24, 0x62	; 98
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    1272:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1276:	8f 3f       	cpi	r24, 0xFF	; 255
    1278:	c1 f3       	breq	.-16     	; 0x126a <KPD_Interface_Localuser+0x222>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    127a:	81 33       	cpi	r24, 0x31	; 49
    127c:	29 f4       	brne	.+10     	; 0x1288 <KPD_Interface_Localuser+0x240>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN4, LED_FORWARD_CONNECTION);
    127e:	41 e0       	ldi	r20, 0x01	; 1
    1280:	64 e0       	ldi	r22, 0x04	; 4
    1282:	83 e0       	ldi	r24, 0x03	; 3
    1284:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1288:	8f ef       	ldi	r24, 0xFF	; 255
    128a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    128e:	08 95       	ret
                }
                else if (led_status == 0)
    1290:	81 11       	cpse	r24, r1
    1292:	44 c2       	rjmp	.+1160   	; 0x171c <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is OFF");
    1294:	8a e7       	ldi	r24, 0x7A	; 122
    1296:	92 e0       	ldi	r25, 0x02	; 2
    1298:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    129c:	80 ec       	ldi	r24, 0xC0	; 192
    129e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    12a2:	8c e5       	ldi	r24, 0x5C	; 92
    12a4:	92 e0       	ldi	r25, 0x02	; 2
    12a6:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    12aa:	04 c0       	rjmp	.+8      	; 0x12b4 <KPD_Interface_Localuser+0x26c>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    12ac:	82 e6       	ldi	r24, 0x62	; 98
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    12b4:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    12b8:	8f 3f       	cpi	r24, 0xFF	; 255
    12ba:	c1 f3       	breq	.-16     	; 0x12ac <KPD_Interface_Localuser+0x264>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    12bc:	81 33       	cpi	r24, 0x31	; 49
    12be:	29 f4       	brne	.+10     	; 0x12ca <KPD_Interface_Localuser+0x282>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN4, LED_FORWARD_CONNECTION);
    12c0:	41 e0       	ldi	r20, 0x01	; 1
    12c2:	64 e0       	ldi	r22, 0x04	; 4
    12c4:	83 e0       	ldi	r24, 0x03	; 3
    12c6:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    12ca:	8f ef       	ldi	r24, 0xFF	; 255
    12cc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    12d0:	08 95       	ret
                }
                break;

            case ('3'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN2, &led_status);
    12d2:	4e eb       	ldi	r20, 0xBE	; 190
    12d4:	53 e0       	ldi	r21, 0x03	; 3
    12d6:	62 e0       	ldi	r22, 0x02	; 2
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
                LCD_voidClear();
    12de:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
                if (led_status == 1)
    12e2:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
    12e6:	81 30       	cpi	r24, 0x01	; 1
    12e8:	f9 f4       	brne	.+62     	; 0x1328 <KPD_Interface_Localuser+0x2e0>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is On");
    12ea:	89 e8       	ldi	r24, 0x89	; 137
    12ec:	92 e0       	ldi	r25, 0x02	; 2
    12ee:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    12f2:	80 ec       	ldi	r24, 0xC0	; 192
    12f4:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    12f8:	8c e3       	ldi	r24, 0x3C	; 60
    12fa:	92 e0       	ldi	r25, 0x02	; 2
    12fc:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1300:	04 c0       	rjmp	.+8      	; 0x130a <KPD_Interface_Localuser+0x2c2>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1302:	82 e6       	ldi	r24, 0x62	; 98
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    130a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    130e:	8f 3f       	cpi	r24, 0xFF	; 255
    1310:	c1 f3       	breq	.-16     	; 0x1302 <KPD_Interface_Localuser+0x2ba>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1312:	81 33       	cpi	r24, 0x31	; 49
    1314:	29 f4       	brne	.+10     	; 0x1320 <KPD_Interface_Localuser+0x2d8>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
    1316:	41 e0       	ldi	r20, 0x01	; 1
    1318:	62 e0       	ldi	r22, 0x02	; 2
    131a:	80 e0       	ldi	r24, 0x00	; 0
    131c:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1320:	8f ef       	ldi	r24, 0xFF	; 255
    1322:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1326:	08 95       	ret
                }
                else if (led_status == 0)
    1328:	81 11       	cpse	r24, r1
    132a:	f8 c1       	rjmp	.+1008   	; 0x171c <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is OFF");
    132c:	87 e9       	ldi	r24, 0x97	; 151
    132e:	92 e0       	ldi	r25, 0x02	; 2
    1330:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1334:	80 ec       	ldi	r24, 0xC0	; 192
    1336:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    133a:	8c e5       	ldi	r24, 0x5C	; 92
    133c:	92 e0       	ldi	r25, 0x02	; 2
    133e:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1342:	04 c0       	rjmp	.+8      	; 0x134c <KPD_Interface_Localuser+0x304>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1344:	82 e6       	ldi	r24, 0x62	; 98
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    134c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1350:	8f 3f       	cpi	r24, 0xFF	; 255
    1352:	c1 f3       	breq	.-16     	; 0x1344 <KPD_Interface_Localuser+0x2fc>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1354:	81 33       	cpi	r24, 0x31	; 49
    1356:	29 f4       	brne	.+10     	; 0x1362 <KPD_Interface_Localuser+0x31a>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
    1358:	41 e0       	ldi	r20, 0x01	; 1
    135a:	62 e0       	ldi	r22, 0x02	; 2
    135c:	80 e0       	ldi	r24, 0x00	; 0
    135e:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1362:	8f ef       	ldi	r24, 0xFF	; 255
    1364:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1368:	08 95       	ret
                }
                break;

            case ('4'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN3, &led_status);
    136a:	4e eb       	ldi	r20, 0xBE	; 190
    136c:	53 e0       	ldi	r21, 0x03	; 3
    136e:	63 e0       	ldi	r22, 0x03	; 3
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
                LCD_voidClear();
    1376:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
                if (led_status == 1)
    137a:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
    137e:	81 30       	cpi	r24, 0x01	; 1
    1380:	f9 f4       	brne	.+62     	; 0x13c0 <KPD_Interface_Localuser+0x378>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is On");
    1382:	86 ea       	ldi	r24, 0xA6	; 166
    1384:	92 e0       	ldi	r25, 0x02	; 2
    1386:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    138a:	80 ec       	ldi	r24, 0xC0	; 192
    138c:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1390:	8c e3       	ldi	r24, 0x3C	; 60
    1392:	92 e0       	ldi	r25, 0x02	; 2
    1394:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1398:	04 c0       	rjmp	.+8      	; 0x13a2 <KPD_Interface_Localuser+0x35a>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    139a:	82 e6       	ldi	r24, 0x62	; 98
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    13a2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    13a6:	8f 3f       	cpi	r24, 0xFF	; 255
    13a8:	c1 f3       	breq	.-16     	; 0x139a <KPD_Interface_Localuser+0x352>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    13aa:	81 33       	cpi	r24, 0x31	; 49
    13ac:	29 f4       	brne	.+10     	; 0x13b8 <KPD_Interface_Localuser+0x370>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
    13ae:	41 e0       	ldi	r20, 0x01	; 1
    13b0:	63 e0       	ldi	r22, 0x03	; 3
    13b2:	80 e0       	ldi	r24, 0x00	; 0
    13b4:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    13b8:	8f ef       	ldi	r24, 0xFF	; 255
    13ba:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    13be:	08 95       	ret
                }
                else if (led_status == 0)
    13c0:	81 11       	cpse	r24, r1
    13c2:	ac c1       	rjmp	.+856    	; 0x171c <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is OFF");
    13c4:	84 eb       	ldi	r24, 0xB4	; 180
    13c6:	92 e0       	ldi	r25, 0x02	; 2
    13c8:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    13cc:	80 ec       	ldi	r24, 0xC0	; 192
    13ce:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    13d2:	8c e5       	ldi	r24, 0x5C	; 92
    13d4:	92 e0       	ldi	r25, 0x02	; 2
    13d6:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    13da:	04 c0       	rjmp	.+8      	; 0x13e4 <KPD_Interface_Localuser+0x39c>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    13dc:	82 e6       	ldi	r24, 0x62	; 98
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    13e4:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    13e8:	8f 3f       	cpi	r24, 0xFF	; 255
    13ea:	c1 f3       	breq	.-16     	; 0x13dc <KPD_Interface_Localuser+0x394>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    13ec:	81 33       	cpi	r24, 0x31	; 49
    13ee:	29 f4       	brne	.+10     	; 0x13fa <KPD_Interface_Localuser+0x3b2>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
    13f0:	41 e0       	ldi	r20, 0x01	; 1
    13f2:	63 e0       	ldi	r22, 0x03	; 3
    13f4:	80 e0       	ldi	r24, 0x00	; 0
    13f6:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    13fa:	8f ef       	ldi	r24, 0xFF	; 255
    13fc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1400:	08 95       	ret
                }
                break;

            case ('5'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN2, &led_status);
    1402:	4e eb       	ldi	r20, 0xBE	; 190
    1404:	53 e0       	ldi	r21, 0x03	; 3
    1406:	62 e0       	ldi	r22, 0x02	; 2
    1408:	83 e0       	ldi	r24, 0x03	; 3
    140a:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
                LCD_voidClear();
    140e:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
                if (led_status == 1)
    1412:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
    1416:	81 30       	cpi	r24, 0x01	; 1
    1418:	f9 f4       	brne	.+62     	; 0x1458 <KPD_Interface_Localuser+0x410>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is On");
    141a:	83 ec       	ldi	r24, 0xC3	; 195
    141c:	92 e0       	ldi	r25, 0x02	; 2
    141e:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1422:	80 ec       	ldi	r24, 0xC0	; 192
    1424:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1428:	8c e3       	ldi	r24, 0x3C	; 60
    142a:	92 e0       	ldi	r25, 0x02	; 2
    142c:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1430:	04 c0       	rjmp	.+8      	; 0x143a <KPD_Interface_Localuser+0x3f2>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1432:	82 e6       	ldi	r24, 0x62	; 98
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    143a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    143e:	8f 3f       	cpi	r24, 0xFF	; 255
    1440:	c1 f3       	breq	.-16     	; 0x1432 <KPD_Interface_Localuser+0x3ea>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1442:	81 33       	cpi	r24, 0x31	; 49
    1444:	29 f4       	brne	.+10     	; 0x1450 <KPD_Interface_Localuser+0x408>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
    1446:	41 e0       	ldi	r20, 0x01	; 1
    1448:	62 e0       	ldi	r22, 0x02	; 2
    144a:	83 e0       	ldi	r24, 0x03	; 3
    144c:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1450:	8f ef       	ldi	r24, 0xFF	; 255
    1452:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1456:	08 95       	ret
                }
                else if (led_status == 0)
    1458:	81 11       	cpse	r24, r1
    145a:	60 c1       	rjmp	.+704    	; 0x171c <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is OFF");
    145c:	81 ed       	ldi	r24, 0xD1	; 209
    145e:	92 e0       	ldi	r25, 0x02	; 2
    1460:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1464:	80 ec       	ldi	r24, 0xC0	; 192
    1466:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    146a:	8c e5       	ldi	r24, 0x5C	; 92
    146c:	92 e0       	ldi	r25, 0x02	; 2
    146e:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1472:	04 c0       	rjmp	.+8      	; 0x147c <KPD_Interface_Localuser+0x434>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1474:	82 e6       	ldi	r24, 0x62	; 98
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    147c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1480:	8f 3f       	cpi	r24, 0xFF	; 255
    1482:	c1 f3       	breq	.-16     	; 0x1474 <KPD_Interface_Localuser+0x42c>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1484:	81 33       	cpi	r24, 0x31	; 49
    1486:	29 f4       	brne	.+10     	; 0x1492 <KPD_Interface_Localuser+0x44a>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
    1488:	41 e0       	ldi	r20, 0x01	; 1
    148a:	62 e0       	ldi	r22, 0x02	; 2
    148c:	83 e0       	ldi	r24, 0x03	; 3
    148e:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1492:	8f ef       	ldi	r24, 0xFF	; 255
    1494:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1498:	08 95       	ret
                
			// if the user choose light 6 (DIMMER LED)

            case ('6'):

                LCD_voidClear();
    149a:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
				
                if (dimmer_brightness > 0)
    149e:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
    14a2:	88 23       	and	r24, r24
    14a4:	09 f4       	brne	.+2      	; 0x14a8 <KPD_Interface_Localuser+0x460>
    14a6:	82 c0       	rjmp	.+260    	; 0x15ac <KPD_Interface_Localuser+0x564>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 6 is On");
    14a8:	80 ee       	ldi	r24, 0xE0	; 224
    14aa:	92 e0       	ldi	r25, 0x02	; 2
    14ac:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
    14b0:	2f ef       	ldi	r18, 0xFF	; 255
    14b2:	83 ed       	ldi	r24, 0xD3	; 211
    14b4:	90 e3       	ldi	r25, 0x30	; 48
    14b6:	21 50       	subi	r18, 0x01	; 1
    14b8:	80 40       	sbci	r24, 0x00	; 0
    14ba:	90 40       	sbci	r25, 0x00	; 0
    14bc:	e1 f7       	brne	.-8      	; 0x14b6 <KPD_Interface_Localuser+0x46e>
    14be:	00 c0       	rjmp	.+0      	; 0x14c0 <KPD_Interface_Localuser+0x478>
    14c0:	00 00       	nop
					_delay_ms(1000);
					LCD_voidClear();
    14c2:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
					LCD_voidDisplayString("Brightness:  %");
    14c6:	8f e9       	ldi	r24, 0x9F	; 159
    14c8:	93 e0       	ldi	r25, 0x03	; 3
    14ca:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    14ce:	6d e0       	ldi	r22, 0x0D	; 13
    14d0:	81 e0       	ldi	r24, 0x01	; 1
    14d2:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
					LCD_voidDisplayNumber(dimmer_brightness);
    14d6:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
                    LCD_voidSendCommand(Write_SecondLine);
    14e4:	80 ec       	ldi	r24, 0xC0	; 192
    14e6:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
    14ea:	8e ef       	ldi	r24, 0xFE	; 254
    14ec:	92 e0       	ldi	r25, 0x02	; 2
    14ee:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
					while (local_lightStatus == KPD_Not_Pressed)
    14f2:	56 c0       	rjmp	.+172    	; 0x15a0 <KPD_Interface_Localuser+0x558>
					{
						KPD_voidGetValue(&local_lightStatus);
    14f4:	82 e6       	ldi	r24, 0x62	; 98
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
						if (local_lightStatus == '1')
    14fc:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1500:	81 33       	cpi	r24, 0x31	; 49
    1502:	59 f5       	brne	.+86     	; 0x155a <KPD_Interface_Localuser+0x512>
						{
							dimmer_brightness += 10;
    1504:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    1508:	66 5f       	subi	r22, 0xF6	; 246
    150a:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    150e:	70 e0       	ldi	r23, 0x00	; 0
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
    1518:	ab 01       	movw	r20, r22
    151a:	bc 01       	movw	r22, r24
    151c:	88 ee       	ldi	r24, 0xE8	; 232
    151e:	93 e0       	ldi	r25, 0x03	; 3
    1520:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1524:	6d e0       	ldi	r22, 0x0D	; 13
    1526:	81 e0       	ldi	r24, 0x01	; 1
    1528:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    152c:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	80 e0       	ldi	r24, 0x00	; 0
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
							if (dimmer_brightness > 100)
    153a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
    153e:	85 36       	cpi	r24, 0x65	; 101
    1540:	78 f1       	brcs	.+94     	; 0x15a0 <KPD_Interface_Localuser+0x558>
							{
								dimmer_brightness = 100;
    1542:	84 e6       	ldi	r24, 0x64	; 100
    1544:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1548:	40 e0       	ldi	r20, 0x00	; 0
    154a:	50 e0       	ldi	r21, 0x00	; 0
    154c:	68 ec       	ldi	r22, 0xC8	; 200
    154e:	72 e4       	ldi	r23, 0x42	; 66
    1550:	88 ee       	ldi	r24, 0xE8	; 232
    1552:	93 e0       	ldi	r25, 0x03	; 3
    1554:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
    1558:	23 c0       	rjmp	.+70     	; 0x15a0 <KPD_Interface_Localuser+0x558>
							}
						
							
						}
						else if (local_lightStatus == '2')
    155a:	82 33       	cpi	r24, 0x32	; 50
    155c:	e1 f4       	brne	.+56     	; 0x1596 <KPD_Interface_Localuser+0x54e>
						{
							dimmer_brightness -= 10;
    155e:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    1562:	6a 50       	subi	r22, 0x0A	; 10
    1564:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1568:	70 e0       	ldi	r23, 0x00	; 0
    156a:	80 e0       	ldi	r24, 0x00	; 0
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
    1572:	ab 01       	movw	r20, r22
    1574:	bc 01       	movw	r22, r24
    1576:	88 ee       	ldi	r24, 0xE8	; 232
    1578:	93 e0       	ldi	r25, 0x03	; 3
    157a:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    157e:	6d e0       	ldi	r22, 0x0D	; 13
    1580:	81 e0       	ldi	r24, 0x01	; 1
    1582:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1586:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    158a:	70 e0       	ldi	r23, 0x00	; 0
    158c:	80 e0       	ldi	r24, 0x00	; 0
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
    1594:	05 c0       	rjmp	.+10     	; 0x15a0 <KPD_Interface_Localuser+0x558>
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
						}
						else if (local_lightStatus == '0')
    1596:	80 33       	cpi	r24, 0x30	; 48
    1598:	19 f4       	brne	.+6      	; 0x15a0 <KPD_Interface_Localuser+0x558>
						{
							LCD_voidClear();
    159a:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
							break;
    159e:	08 95       	ret
					LCD_voidDisplayString("Brightness:  %");
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
					LCD_voidDisplayNumber(dimmer_brightness);
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
					while (local_lightStatus == KPD_Not_Pressed)
    15a0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    15a4:	8f 3f       	cpi	r24, 0xFF	; 255
    15a6:	09 f4       	brne	.+2      	; 0x15aa <KPD_Interface_Localuser+0x562>
    15a8:	a5 cf       	rjmp	.-182    	; 0x14f4 <KPD_Interface_Localuser+0x4ac>
    15aa:	08 95       	ret
						}						
						
					}
					
                }
                else if (led_status == 0)
    15ac:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <led_status>
    15b0:	81 11       	cpse	r24, r1
    15b2:	b4 c0       	rjmp	.+360    	; 0x171c <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 6 is OFF");
    15b4:	8e e0       	ldi	r24, 0x0E	; 14
    15b6:	93 e0       	ldi	r25, 0x03	; 3
    15b8:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
    15bc:	2f ef       	ldi	r18, 0xFF	; 255
    15be:	83 ed       	ldi	r24, 0xD3	; 211
    15c0:	90 e3       	ldi	r25, 0x30	; 48
    15c2:	21 50       	subi	r18, 0x01	; 1
    15c4:	80 40       	sbci	r24, 0x00	; 0
    15c6:	90 40       	sbci	r25, 0x00	; 0
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <KPD_Interface_Localuser+0x57a>
    15ca:	00 c0       	rjmp	.+0      	; 0x15cc <KPD_Interface_Localuser+0x584>
    15cc:	00 00       	nop
					_delay_ms(1000);
                    LCD_voidClear();
    15ce:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
					LCD_voidDisplayString("Brightness:  %");
    15d2:	8f e9       	ldi	r24, 0x9F	; 159
    15d4:	93 e0       	ldi	r25, 0x03	; 3
    15d6:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    15da:	6d e0       	ldi	r22, 0x0D	; 13
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
					LCD_voidDisplayNumber(dimmer_brightness);
    15e2:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    15e6:	70 e0       	ldi	r23, 0x00	; 0
    15e8:	80 e0       	ldi	r24, 0x00	; 0
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
                    LCD_voidSendCommand(Write_SecondLine);
    15f0:	80 ec       	ldi	r24, 0xC0	; 192
    15f2:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
    15f6:	8e ef       	ldi	r24, 0xFE	; 254
    15f8:	92 e0       	ldi	r25, 0x02	; 2
    15fa:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
					while (local_lightStatus == KPD_Not_Pressed)
    15fe:	56 c0       	rjmp	.+172    	; 0x16ac <KPD_Interface_Localuser+0x664>
					{
						KPD_voidGetValue(&local_lightStatus);
    1600:	82 e6       	ldi	r24, 0x62	; 98
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
						if (local_lightStatus == '1')
    1608:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    160c:	81 33       	cpi	r24, 0x31	; 49
    160e:	59 f5       	brne	.+86     	; 0x1666 <KPD_Interface_Localuser+0x61e>
						{
							dimmer_brightness += 10;
    1610:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    1614:	66 5f       	subi	r22, 0xF6	; 246
    1616:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    161a:	70 e0       	ldi	r23, 0x00	; 0
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
    1624:	ab 01       	movw	r20, r22
    1626:	bc 01       	movw	r22, r24
    1628:	88 ee       	ldi	r24, 0xE8	; 232
    162a:	93 e0       	ldi	r25, 0x03	; 3
    162c:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1630:	6d e0       	ldi	r22, 0x0D	; 13
    1632:	81 e0       	ldi	r24, 0x01	; 1
    1634:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1638:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    163c:	70 e0       	ldi	r23, 0x00	; 0
    163e:	80 e0       	ldi	r24, 0x00	; 0
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
							if (dimmer_brightness > 100)
    1646:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <dimmer_brightness>
    164a:	85 36       	cpi	r24, 0x65	; 101
    164c:	78 f1       	brcs	.+94     	; 0x16ac <KPD_Interface_Localuser+0x664>
							{
								dimmer_brightness = 100;
    164e:	84 e6       	ldi	r24, 0x64	; 100
    1650:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1654:	40 e0       	ldi	r20, 0x00	; 0
    1656:	50 e0       	ldi	r21, 0x00	; 0
    1658:	68 ec       	ldi	r22, 0xC8	; 200
    165a:	72 e4       	ldi	r23, 0x42	; 66
    165c:	88 ee       	ldi	r24, 0xE8	; 232
    165e:	93 e0       	ldi	r25, 0x03	; 3
    1660:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
    1664:	23 c0       	rjmp	.+70     	; 0x16ac <KPD_Interface_Localuser+0x664>
							}
						
							
						}
						else if (local_lightStatus == '2')
    1666:	82 33       	cpi	r24, 0x32	; 50
    1668:	e1 f4       	brne	.+56     	; 0x16a2 <KPD_Interface_Localuser+0x65a>
						{
							dimmer_brightness -= 10;
    166a:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    166e:	6a 50       	subi	r22, 0x0A	; 10
    1670:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
    167e:	ab 01       	movw	r20, r22
    1680:	bc 01       	movw	r22, r24
    1682:	88 ee       	ldi	r24, 0xE8	; 232
    1684:	93 e0       	ldi	r25, 0x03	; 3
    1686:	0e 94 05 11 	call	0x220a	; 0x220a <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    168a:	6d e0       	ldi	r22, 0x0D	; 13
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1692:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <dimmer_brightness>
    1696:	70 e0       	ldi	r23, 0x00	; 0
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
    16a0:	05 c0       	rjmp	.+10     	; 0x16ac <KPD_Interface_Localuser+0x664>
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
						}
						else if (local_lightStatus == '0')
    16a2:	80 33       	cpi	r24, 0x30	; 48
    16a4:	19 f4       	brne	.+6      	; 0x16ac <KPD_Interface_Localuser+0x664>
						{
							LCD_voidClear();
    16a6:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
							break;
    16aa:	08 95       	ret
					LCD_voidDisplayString("Brightness:  %");
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
					LCD_voidDisplayNumber(dimmer_brightness);
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
					while (local_lightStatus == KPD_Not_Pressed)
    16ac:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    16b0:	8f 3f       	cpi	r24, 0xFF	; 255
    16b2:	09 f4       	brne	.+2      	; 0x16b6 <KPD_Interface_Localuser+0x66e>
    16b4:	a5 cf       	rjmp	.-182    	; 0x1600 <KPD_Interface_Localuser+0x5b8>
    16b6:	08 95       	ret
            }
			break;

			case ('3'):
			
				LCD_voidClear();
    16b8:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
				ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    16bc:	6c eb       	ldi	r22, 0xBC	; 188
    16be:	73 e0       	ldi	r23, 0x03	; 3
    16c0:	80 e0       	ldi	r24, 0x00	; 0
    16c2:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ADC_voidGetDigitalValue>
				LCD_voidSendCommand(Write_FirstLine);
    16c6:	80 e8       	ldi	r24, 0x80	; 128
    16c8:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
				LCD_voidDisplayString((u8 *)"Room Temp:  c");
    16cc:	81 e9       	ldi	r24, 0x91	; 145
    16ce:	93 e0       	ldi	r25, 0x03	; 3
    16d0:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
				LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,11);
    16d4:	6b e0       	ldi	r22, 0x0B	; 11
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <LCD_voidGoTOSpecificPosition>
				LCD_voidDisplayNumber(local_temp);
    16dc:	60 91 bc 03 	lds	r22, 0x03BC	; 0x8003bc <__data_end>
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	80 e0       	ldi	r24, 0x00	; 0
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <LCD_voidDisplayNumber>
				LCD_voidDisplayChar('c');
    16ea:	83 e6       	ldi	r24, 0x63	; 99
    16ec:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <LCD_voidDisplayChar>
				LCD_voidSendCommand(Write_SecondLine);
    16f0:	80 ec       	ldi	r24, 0xC0	; 192
    16f2:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
				LCD_voidDisplayStringDelay((u8 *)"0-go to home");
    16f6:	84 e0       	ldi	r24, 0x04	; 4
    16f8:	92 e0       	ldi	r25, 0x02	; 2
    16fa:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <LCD_voidDisplayStringDelay>
				while(local_KPDIdleValue==KPD_Not_Pressed)
    16fe:	06 c0       	rjmp	.+12     	; 0x170c <KPD_Interface_Localuser+0x6c4>
				{
					KPD_voidGetValue(&local_KPDIdleValue);
    1700:	81 e6       	ldi	r24, 0x61	; 97
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 3d 0c 	call	0x187a	; 0x187a <KPD_voidGetValue>
					Display_temp();
    1708:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <Display_temp>
				LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,11);
				LCD_voidDisplayNumber(local_temp);
				LCD_voidDisplayChar('c');
				LCD_voidSendCommand(Write_SecondLine);
				LCD_voidDisplayStringDelay((u8 *)"0-go to home");
				while(local_KPDIdleValue==KPD_Not_Pressed)
    170c:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    1710:	8f 3f       	cpi	r24, 0xFF	; 255
    1712:	b1 f3       	breq	.-20     	; 0x1700 <KPD_Interface_Localuser+0x6b8>
				{
					KPD_voidGetValue(&local_KPDIdleValue);
					Display_temp();
				}	
				if (local_KPDIdleValue=='0')
    1714:	80 33       	cpi	r24, 0x30	; 48
    1716:	11 f4       	brne	.+4      	; 0x171c <KPD_Interface_Localuser+0x6d4>
				{
					LCD_voidClear();
    1718:	0e 94 77 0e 	call	0x1cee	; 0x1cee <LCD_voidClear>
    171c:	08 95       	ret

0000171e <BL_voidInit>:



void BL_voidInit(void)
{
	UART_voidInit();
    171e:	0e 94 d6 12 	call	0x25ac	; 0x25ac <UART_voidInit>
    1722:	08 95       	ret

00001724 <BL_voidTxChar>:
}


void BL_voidTxChar(u8 copy_u8BlTxData)
{
	UART_voidTxChar(copy_u8BlTxData);
    1724:	0e 94 e7 12 	call	0x25ce	; 0x25ce <UART_voidTxChar>
    1728:	08 95       	ret

0000172a <BL_voidRxChar>:



void BL_voidRxChar(u8* copy_pu8BlRxData)
{
	UART_voidRxChar(copy_pu8BlRxData);
    172a:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <UART_voidRxChar>
    172e:	08 95       	ret

00001730 <BL_voidTxString>:
}


void BL_voidTxString(u8* copy_pu8BlTxString)
{
	UART_voidTxString(copy_pu8BlTxString);
    1730:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <UART_voidTxString>
    1734:	08 95       	ret

00001736 <EEPROM_voidInit>:
	{
		//error
	}
	
	
}
    1736:	0e 94 4b 12 	call	0x2496	; 0x2496 <TWI_voidInitMaster>
    173a:	08 95       	ret

0000173c <EEPROM_voidWritePage>:
    173c:	0f 93       	push	r16
    173e:	1f 93       	push	r17
    1740:	cf 93       	push	r28
    1742:	df 93       	push	r29
    1744:	61 15       	cp	r22, r1
    1746:	71 05       	cpc	r23, r1
    1748:	f9 f0       	breq	.+62     	; 0x1788 <EEPROM_voidWritePage+0x4c>
    174a:	8b 01       	movw	r16, r22
    174c:	d8 2f       	mov	r29, r24
    174e:	c9 2f       	mov	r28, r25
    1750:	c0 65       	ori	r28, 0x50	; 80
    1752:	0e 94 57 12 	call	0x24ae	; 0x24ae <TWI_voidSendStartCondition>
    1756:	8c 2f       	mov	r24, r28
    1758:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <TWI_voidSendSlaveAddWithWrite>
    175c:	8d 2f       	mov	r24, r29
    175e:	0e 94 a4 12 	call	0x2548	; 0x2548 <TWI_voidTransmitMasterDataByte>
    1762:	c0 e0       	ldi	r28, 0x00	; 0
    1764:	07 c0       	rjmp	.+14     	; 0x1774 <EEPROM_voidWritePage+0x38>
    1766:	f8 01       	movw	r30, r16
    1768:	ec 0f       	add	r30, r28
    176a:	f1 1d       	adc	r31, r1
    176c:	80 81       	ld	r24, Z
    176e:	0e 94 a4 12 	call	0x2548	; 0x2548 <TWI_voidTransmitMasterDataByte>
    1772:	cf 5f       	subi	r28, 0xFF	; 255
    1774:	c8 30       	cpi	r28, 0x08	; 8
    1776:	b8 f3       	brcs	.-18     	; 0x1766 <EEPROM_voidWritePage+0x2a>
    1778:	0e 94 73 12 	call	0x24e6	; 0x24e6 <TWI_voidSendStopCondition>
    177c:	8f e1       	ldi	r24, 0x1F	; 31
    177e:	9e e4       	ldi	r25, 0x4E	; 78
    1780:	01 97       	sbiw	r24, 0x01	; 1
    1782:	f1 f7       	brne	.-4      	; 0x1780 <EEPROM_voidWritePage+0x44>
    1784:	00 c0       	rjmp	.+0      	; 0x1786 <EEPROM_voidWritePage+0x4a>
    1786:	00 00       	nop
    1788:	df 91       	pop	r29
    178a:	cf 91       	pop	r28
    178c:	1f 91       	pop	r17
    178e:	0f 91       	pop	r16
    1790:	08 95       	ret

00001792 <EEPROM_voidSequentialRead>:

void EEPROM_voidSequentialRead(u16 copy_u16WordAdress,u16 copy_u18NumOfDataBytes,u8* copy_pu8RxData)
{
    1792:	ef 92       	push	r14
    1794:	ff 92       	push	r15
    1796:	0f 93       	push	r16
    1798:	1f 93       	push	r17
    179a:	cf 93       	push	r28
    179c:	df 93       	push	r29
	if((copy_pu8RxData !=NULL)&&copy_u18NumOfDataBytes<512)
    179e:	41 15       	cp	r20, r1
    17a0:	51 05       	cpc	r21, r1
    17a2:	81 f1       	breq	.+96     	; 0x1804 <EEPROM_voidSequentialRead+0x72>
    17a4:	61 15       	cp	r22, r1
    17a6:	22 e0       	ldi	r18, 0x02	; 2
    17a8:	72 07       	cpc	r23, r18
    17aa:	60 f5       	brcc	.+88     	; 0x1804 <EEPROM_voidSequentialRead+0x72>
    17ac:	8a 01       	movw	r16, r20
    17ae:	7b 01       	movw	r14, r22
    17b0:	d8 2f       	mov	r29, r24
	{
		u8 Local_u8DeviceAddress = ( copy_u16WordAdress>>8)|EEPROM_FIXED_ADDRESS;
    17b2:	c9 2f       	mov	r28, r25
    17b4:	c0 65       	ori	r28, 0x50	; 80
		u16 Local_u16BytesCounter;
		TWI_voidSendStartCondition();
    17b6:	0e 94 57 12 	call	0x24ae	; 0x24ae <TWI_voidSendStartCondition>
		TWI_voidSendSlaveAddWithWrite(Local_u8DeviceAddress);
    17ba:	8c 2f       	mov	r24, r28
    17bc:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <TWI_voidSendSlaveAddWithWrite>
		TWI_voidTransmitMasterDataByte((u8)copy_u16WordAdress);
    17c0:	8d 2f       	mov	r24, r29
    17c2:	0e 94 a4 12 	call	0x2548	; 0x2548 <TWI_voidTransmitMasterDataByte>
		TWI_voidSendRepeatedStartCondition();
    17c6:	0e 94 65 12 	call	0x24ca	; 0x24ca <TWI_voidSendRepeatedStartCondition>
		TWI_voidSendSlaveAddWithRead(Local_u8DeviceAddress);
    17ca:	8c 2f       	mov	r24, r28
    17cc:	0e 94 8f 12 	call	0x251e	; 0x251e <TWI_voidSendSlaveAddWithRead>
		
		for(Local_u16BytesCounter=0;Local_u16BytesCounter<copy_u18NumOfDataBytes-1;Local_u16BytesCounter++)
    17d0:	c0 e0       	ldi	r28, 0x00	; 0
    17d2:	d0 e0       	ldi	r29, 0x00	; 0
    17d4:	06 c0       	rjmp	.+12     	; 0x17e2 <EEPROM_voidSequentialRead+0x50>
		{
			TWI_voidRecieveMasterDataByteWithAch(&copy_pu8RxData[Local_u16BytesCounter]);
    17d6:	c8 01       	movw	r24, r16
    17d8:	8c 0f       	add	r24, r28
    17da:	9d 1f       	adc	r25, r29
    17dc:	0e 94 b0 12 	call	0x2560	; 0x2560 <TWI_voidRecieveMasterDataByteWithAch>
		TWI_voidSendSlaveAddWithWrite(Local_u8DeviceAddress);
		TWI_voidTransmitMasterDataByte((u8)copy_u16WordAdress);
		TWI_voidSendRepeatedStartCondition();
		TWI_voidSendSlaveAddWithRead(Local_u8DeviceAddress);
		
		for(Local_u16BytesCounter=0;Local_u16BytesCounter<copy_u18NumOfDataBytes-1;Local_u16BytesCounter++)
    17e0:	21 96       	adiw	r28, 0x01	; 1
    17e2:	c7 01       	movw	r24, r14
    17e4:	01 97       	sbiw	r24, 0x01	; 1
    17e6:	c8 17       	cp	r28, r24
    17e8:	d9 07       	cpc	r29, r25
    17ea:	a8 f3       	brcs	.-22     	; 0x17d6 <EEPROM_voidSequentialRead+0x44>
		{
			TWI_voidRecieveMasterDataByteWithAch(&copy_pu8RxData[Local_u16BytesCounter]);
			
		}
		
		TWI_voidRecieveMasterDataByteWithNAch(&copy_pu8RxData[copy_u18NumOfDataBytes-1]);
    17ec:	80 0f       	add	r24, r16
    17ee:	91 1f       	adc	r25, r17
    17f0:	0e 94 c6 12 	call	0x258c	; 0x258c <TWI_voidRecieveMasterDataByteWithNAch>
		TWI_voidSendStopCondition();
    17f4:	0e 94 73 12 	call	0x24e6	; 0x24e6 <TWI_voidSendStopCondition>
    17f8:	8f e1       	ldi	r24, 0x1F	; 31
    17fa:	9e e4       	ldi	r25, 0x4E	; 78
    17fc:	01 97       	sbiw	r24, 0x01	; 1
    17fe:	f1 f7       	brne	.-4      	; 0x17fc <EEPROM_voidSequentialRead+0x6a>
    1800:	00 c0       	rjmp	.+0      	; 0x1802 <EEPROM_voidSequentialRead+0x70>
    1802:	00 00       	nop
	{
		//error state
	}


    1804:	df 91       	pop	r29
    1806:	cf 91       	pop	r28
    1808:	1f 91       	pop	r17
    180a:	0f 91       	pop	r16
    180c:	ff 90       	pop	r15
    180e:	ef 90       	pop	r14
    1810:	08 95       	ret

00001812 <KPD_voidInit>:


void	KPD_voidInit(void)
{
	//Setting Columns to output
	DIO_voidSetPinDirection(KPD_C0_Port,KPD_C0_Pin,DIO_PIN_OUTPUT);
    1812:	41 e0       	ldi	r20, 0x01	; 1
    1814:	64 e0       	ldi	r22, 0x04	; 4
    1816:	81 e0       	ldi	r24, 0x01	; 1
    1818:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_C1_Port,KPD_C1_Pin,DIO_PIN_OUTPUT);
    181c:	41 e0       	ldi	r20, 0x01	; 1
    181e:	65 e0       	ldi	r22, 0x05	; 5
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_C2_Port,KPD_C2_Pin,DIO_PIN_OUTPUT);
    1826:	41 e0       	ldi	r20, 0x01	; 1
    1828:	66 e0       	ldi	r22, 0x06	; 6
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	// DIO_voidSetPinDirection(KPD_C3_Port,KPD_C3_Pin,DIO_PIN_OUTPUT);
	
	
	//Setting Rows To Input
	DIO_voidSetPinDirection(KPD_R0_Port,KPD_R0_Pin,DIO_PIN_INPUT);
    1830:	40 e0       	ldi	r20, 0x00	; 0
    1832:	63 e0       	ldi	r22, 0x03	; 3
    1834:	82 e0       	ldi	r24, 0x02	; 2
    1836:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_R1_Port,KPD_R1_Pin,DIO_PIN_INPUT);
    183a:	40 e0       	ldi	r20, 0x00	; 0
    183c:	64 e0       	ldi	r22, 0x04	; 4
    183e:	82 e0       	ldi	r24, 0x02	; 2
    1840:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_R2_Port,KPD_R2_Pin,DIO_PIN_INPUT);
    1844:	40 e0       	ldi	r20, 0x00	; 0
    1846:	65 e0       	ldi	r22, 0x05	; 5
    1848:	82 e0       	ldi	r24, 0x02	; 2
    184a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_R3_Port,KPD_R3_Pin,DIO_PIN_INPUT);
    184e:	40 e0       	ldi	r20, 0x00	; 0
    1850:	66 e0       	ldi	r22, 0x06	; 6
    1852:	82 e0       	ldi	r24, 0x02	; 2
    1854:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	
	//Setting Rows For Pull UP
	DIO_voidActivePinInPullUpResistance(KPD_R0_Port,KPD_R0_Pin);
    1858:	63 e0       	ldi	r22, 0x03	; 3
    185a:	82 e0       	ldi	r24, 0x02	; 2
    185c:	0e 94 a3 10 	call	0x2146	; 0x2146 <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_R1_Port,KPD_R1_Pin);
    1860:	64 e0       	ldi	r22, 0x04	; 4
    1862:	82 e0       	ldi	r24, 0x02	; 2
    1864:	0e 94 a3 10 	call	0x2146	; 0x2146 <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_R2_Port,KPD_R2_Pin);
    1868:	65 e0       	ldi	r22, 0x05	; 5
    186a:	82 e0       	ldi	r24, 0x02	; 2
    186c:	0e 94 a3 10 	call	0x2146	; 0x2146 <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_R3_Port,KPD_R3_Pin);
    1870:	66 e0       	ldi	r22, 0x06	; 6
    1872:	82 e0       	ldi	r24, 0x02	; 2
    1874:	0e 94 a3 10 	call	0x2146	; 0x2146 <DIO_voidActivePinInPullUpResistance>
    1878:	08 95       	ret

0000187a <KPD_voidGetValue>:
}


void	KPD_voidGetValue(u8* copy_pu8value)
{
    187a:	6f 92       	push	r6
    187c:	7f 92       	push	r7
    187e:	8f 92       	push	r8
    1880:	9f 92       	push	r9
    1882:	af 92       	push	r10
    1884:	bf 92       	push	r11
    1886:	cf 92       	push	r12
    1888:	df 92       	push	r13
    188a:	ef 92       	push	r14
    188c:	ff 92       	push	r15
    188e:	0f 93       	push	r16
    1890:	1f 93       	push	r17
    1892:	cf 93       	push	r28
    1894:	df 93       	push	r29
    1896:	cd b7       	in	r28, 0x3d	; 61
    1898:	de b7       	in	r29, 0x3e	; 62
    189a:	6b 97       	sbiw	r28, 0x1b	; 27
    189c:	0f b6       	in	r0, 0x3f	; 63
    189e:	f8 94       	cli
    18a0:	de bf       	out	0x3e, r29	; 62
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	cd bf       	out	0x3d, r28	; 61
	if (copy_pu8value != NULL)
    18a6:	00 97       	sbiw	r24, 0x00	; 0
    18a8:	09 f4       	brne	.+2      	; 0x18ac <KPD_voidGetValue+0x32>
    18aa:	7e c0       	rjmp	.+252    	; 0x19a8 <KPD_voidGetValue+0x12e>
    18ac:	5c 01       	movw	r10, r24
	{
		u8	Local_u8ColsPort[3]={KPD_C0_Port,KPD_C1_Port,KPD_C2_Port};
    18ae:	81 e0       	ldi	r24, 0x01	; 1
    18b0:	88 8f       	std	Y+24, r24	; 0x18
    18b2:	89 8f       	std	Y+25, r24	; 0x19
    18b4:	8a 8f       	std	Y+26, r24	; 0x1a
		u8	Local_u8ColsPins[3]={KPD_C0_Pin,KPD_C1_Pin,KPD_C2_Pin};
    18b6:	34 e0       	ldi	r19, 0x04	; 4
    18b8:	3d 8b       	std	Y+21, r19	; 0x15
    18ba:	25 e0       	ldi	r18, 0x05	; 5
    18bc:	2e 8b       	std	Y+22, r18	; 0x16
    18be:	96 e0       	ldi	r25, 0x06	; 6
    18c0:	9f 8b       	std	Y+23, r25	; 0x17
									 
		u8	Local_u8RowsPort[4]={KPD_R0_Port,KPD_R1_Port,KPD_R2_Port,KPD_R3_Port};
    18c2:	82 e0       	ldi	r24, 0x02	; 2
    18c4:	89 8b       	std	Y+17, r24	; 0x11
    18c6:	8a 8b       	std	Y+18, r24	; 0x12
    18c8:	8b 8b       	std	Y+19, r24	; 0x13
    18ca:	8c 8b       	std	Y+20, r24	; 0x14
		u8	Local_u8RowsPins[4]={KPD_R0_Pin,KPD_R1_Pin,KPD_R2_Pin,KPD_R3_Pin};
    18cc:	83 e0       	ldi	r24, 0x03	; 3
    18ce:	8d 87       	std	Y+13, r24	; 0x0d
    18d0:	3e 87       	std	Y+14, r19	; 0x0e
    18d2:	2f 87       	std	Y+15, r18	; 0x0f
    18d4:	98 8b       	std	Y+16, r25	; 0x10
		u8	Local_Keys[4][3]   =KPD_Keys;
    18d6:	8c e0       	ldi	r24, 0x0C	; 12
    18d8:	e7 e6       	ldi	r30, 0x67	; 103
    18da:	f0 e0       	ldi	r31, 0x00	; 0
    18dc:	de 01       	movw	r26, r28
    18de:	11 96       	adiw	r26, 0x01	; 1
    18e0:	01 90       	ld	r0, Z+
    18e2:	0d 92       	st	X+, r0
    18e4:	8a 95       	dec	r24
    18e6:	e1 f7       	brne	.-8      	; 0x18e0 <KPD_voidGetValue+0x66>
		
		u8	Local_u8ColsCounter,Local_u8RowsCounter;
		u8	Local_u8RowValue;
		
		*copy_pu8value = KPD_Not_Pressed;
    18e8:	8f ef       	ldi	r24, 0xFF	; 255
    18ea:	f5 01       	movw	r30, r10
    18ec:	80 83       	st	Z, r24
		//LOOP Columns
		for (Local_u8ColsCounter=0 ; Local_u8ColsCounter<3 ; Local_u8ColsCounter++)
    18ee:	81 2c       	mov	r8, r1
    18f0:	57 c0       	rjmp	.+174    	; 0x19a0 <KPD_voidGetValue+0x126>
		{
			//Activate Each Column
			DIO_voidSetPinValue(Local_u8ColsPort[Local_u8ColsCounter] , Local_u8ColsPins[Local_u8ColsCounter],DIO_PIN_LOW);
    18f2:	c8 2c       	mov	r12, r8
    18f4:	d1 2c       	mov	r13, r1
    18f6:	e5 e1       	ldi	r30, 0x15	; 21
    18f8:	f0 e0       	ldi	r31, 0x00	; 0
    18fa:	ec 0f       	add	r30, r28
    18fc:	fd 1f       	adc	r31, r29
    18fe:	ec 0d       	add	r30, r12
    1900:	fd 1d       	adc	r31, r13
    1902:	60 80       	ld	r6, Z
    1904:	e8 e1       	ldi	r30, 0x18	; 24
    1906:	f0 e0       	ldi	r31, 0x00	; 0
    1908:	ec 0f       	add	r30, r28
    190a:	fd 1f       	adc	r31, r29
    190c:	ec 0d       	add	r30, r12
    190e:	fd 1d       	adc	r31, r13
    1910:	70 80       	ld	r7, Z
    1912:	40 e0       	ldi	r20, 0x00	; 0
    1914:	66 2d       	mov	r22, r6
    1916:	87 2d       	mov	r24, r7
    1918:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
			
			//LOOP Rows
			for(Local_u8RowsCounter=0 ; Local_u8RowsCounter<4 ; Local_u8RowsCounter++)
    191c:	10 e0       	ldi	r17, 0x00	; 0
    191e:	38 c0       	rjmp	.+112    	; 0x1990 <KPD_voidGetValue+0x116>
			{
				//Get Row Pin Value
				DIO_voidGetPinValue(Local_u8RowsPort[Local_u8RowsCounter] ,Local_u8RowsPins[Local_u8RowsCounter], &Local_u8RowValue );
    1920:	e1 2e       	mov	r14, r17
    1922:	f1 2c       	mov	r15, r1
    1924:	ed e0       	ldi	r30, 0x0D	; 13
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	ec 0f       	add	r30, r28
    192a:	fd 1f       	adc	r31, r29
    192c:	ee 0d       	add	r30, r14
    192e:	ff 1d       	adc	r31, r15
    1930:	00 81       	ld	r16, Z
    1932:	e1 e1       	ldi	r30, 0x11	; 17
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	ec 0f       	add	r30, r28
    1938:	fd 1f       	adc	r31, r29
    193a:	ee 0d       	add	r30, r14
    193c:	ff 1d       	adc	r31, r15
    193e:	90 80       	ld	r9, Z
    1940:	ae 01       	movw	r20, r28
    1942:	45 5e       	subi	r20, 0xE5	; 229
    1944:	5f 4f       	sbci	r21, 0xFF	; 255
    1946:	60 2f       	mov	r22, r16
    1948:	89 2d       	mov	r24, r9
    194a:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
				
				// Is Pressed ?
				if (0==Local_u8RowValue)
    194e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1950:	81 11       	cpse	r24, r1
    1952:	1d c0       	rjmp	.+58     	; 0x198e <KPD_voidGetValue+0x114>
    1954:	07 c0       	rjmp	.+14     	; 0x1964 <KPD_voidGetValue+0xea>
				{
					//Busy wait for button release
					while(0==Local_u8RowValue)
					{
						DIO_voidGetPinValue(Local_u8RowsPort[Local_u8RowsCounter] ,Local_u8RowsPins[Local_u8RowsCounter], &Local_u8RowValue );
    1956:	ae 01       	movw	r20, r28
    1958:	45 5e       	subi	r20, 0xE5	; 229
    195a:	5f 4f       	sbci	r21, 0xFF	; 255
    195c:	60 2f       	mov	r22, r16
    195e:	89 2d       	mov	r24, r9
    1960:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_voidGetPinValue>
				
				// Is Pressed ?
				if (0==Local_u8RowValue)
				{
					//Busy wait for button release
					while(0==Local_u8RowValue)
    1964:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1966:	88 23       	and	r24, r24
    1968:	b1 f3       	breq	.-20     	; 0x1956 <KPD_voidGetValue+0xdc>
					{
						DIO_voidGetPinValue(Local_u8RowsPort[Local_u8RowsCounter] ,Local_u8RowsPins[Local_u8RowsCounter], &Local_u8RowValue );
					}
					//return value
					*copy_pu8value = Local_Keys[Local_u8RowsCounter][Local_u8ColsCounter];
    196a:	c7 01       	movw	r24, r14
    196c:	88 0f       	add	r24, r24
    196e:	99 1f       	adc	r25, r25
    1970:	e8 0e       	add	r14, r24
    1972:	f9 1e       	adc	r15, r25
    1974:	81 e0       	ldi	r24, 0x01	; 1
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	8c 0f       	add	r24, r28
    197a:	9d 1f       	adc	r25, r29
    197c:	e8 0e       	add	r14, r24
    197e:	f9 1e       	adc	r15, r25
    1980:	f7 01       	movw	r30, r14
    1982:	ec 0d       	add	r30, r12
    1984:	fd 1d       	adc	r31, r13
    1986:	80 81       	ld	r24, Z
    1988:	f5 01       	movw	r30, r10
    198a:	80 83       	st	Z, r24
    198c:	0d c0       	rjmp	.+26     	; 0x19a8 <KPD_voidGetValue+0x12e>
		{
			//Activate Each Column
			DIO_voidSetPinValue(Local_u8ColsPort[Local_u8ColsCounter] , Local_u8ColsPins[Local_u8ColsCounter],DIO_PIN_LOW);
			
			//LOOP Rows
			for(Local_u8RowsCounter=0 ; Local_u8RowsCounter<4 ; Local_u8RowsCounter++)
    198e:	1f 5f       	subi	r17, 0xFF	; 255
    1990:	14 30       	cpi	r17, 0x04	; 4
    1992:	30 f2       	brcs	.-116    	; 0x1920 <KPD_voidGetValue+0xa6>
					//return value
					*copy_pu8value = Local_Keys[Local_u8RowsCounter][Local_u8ColsCounter];
					return;
				}
			}
			DIO_voidSetPinValue(Local_u8ColsPort[Local_u8ColsCounter],Local_u8ColsPins[Local_u8ColsCounter],DIO_PIN_HIGH);
    1994:	41 e0       	ldi	r20, 0x01	; 1
    1996:	66 2d       	mov	r22, r6
    1998:	87 2d       	mov	r24, r7
    199a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
		u8	Local_u8ColsCounter,Local_u8RowsCounter;
		u8	Local_u8RowValue;
		
		*copy_pu8value = KPD_Not_Pressed;
		//LOOP Columns
		for (Local_u8ColsCounter=0 ; Local_u8ColsCounter<3 ; Local_u8ColsCounter++)
    199e:	83 94       	inc	r8
    19a0:	f2 e0       	ldi	r31, 0x02	; 2
    19a2:	f8 15       	cp	r31, r8
    19a4:	08 f0       	brcs	.+2      	; 0x19a8 <KPD_voidGetValue+0x12e>
    19a6:	a5 cf       	rjmp	.-182    	; 0x18f2 <KPD_voidGetValue+0x78>
	}
	else
	{
		
	}
}
    19a8:	6b 96       	adiw	r28, 0x1b	; 27
    19aa:	0f b6       	in	r0, 0x3f	; 63
    19ac:	f8 94       	cli
    19ae:	de bf       	out	0x3e, r29	; 62
    19b0:	0f be       	out	0x3f, r0	; 63
    19b2:	cd bf       	out	0x3d, r28	; 61
    19b4:	df 91       	pop	r29
    19b6:	cf 91       	pop	r28
    19b8:	1f 91       	pop	r17
    19ba:	0f 91       	pop	r16
    19bc:	ff 90       	pop	r15
    19be:	ef 90       	pop	r14
    19c0:	df 90       	pop	r13
    19c2:	cf 90       	pop	r12
    19c4:	bf 90       	pop	r11
    19c6:	af 90       	pop	r10
    19c8:	9f 90       	pop	r9
    19ca:	8f 90       	pop	r8
    19cc:	7f 90       	pop	r7
    19ce:	6f 90       	pop	r6
    19d0:	08 95       	ret

000019d2 <PRV_voidWriteHalfPort>:
		
		/* Enable Pulse *//* H => L */
		DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,DIO_PIN_HIGH);
		_delay_ms(1);
		DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,DIO_PIN_LOW);
}
    19d2:	cf 93       	push	r28
    19d4:	c8 2f       	mov	r28, r24
    19d6:	80 ff       	sbrs	r24, 0
    19d8:	06 c0       	rjmp	.+12     	; 0x19e6 <PRV_voidWriteHalfPort+0x14>
    19da:	41 e0       	ldi	r20, 0x01	; 1
    19dc:	64 e0       	ldi	r22, 0x04	; 4
    19de:	80 e0       	ldi	r24, 0x00	; 0
    19e0:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    19e4:	05 c0       	rjmp	.+10     	; 0x19f0 <PRV_voidWriteHalfPort+0x1e>
    19e6:	40 e0       	ldi	r20, 0x00	; 0
    19e8:	64 e0       	ldi	r22, 0x04	; 4
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    19f0:	c1 ff       	sbrs	r28, 1
    19f2:	06 c0       	rjmp	.+12     	; 0x1a00 <PRV_voidWriteHalfPort+0x2e>
    19f4:	41 e0       	ldi	r20, 0x01	; 1
    19f6:	65 e0       	ldi	r22, 0x05	; 5
    19f8:	80 e0       	ldi	r24, 0x00	; 0
    19fa:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    19fe:	05 c0       	rjmp	.+10     	; 0x1a0a <PRV_voidWriteHalfPort+0x38>
    1a00:	40 e0       	ldi	r20, 0x00	; 0
    1a02:	65 e0       	ldi	r22, 0x05	; 5
    1a04:	80 e0       	ldi	r24, 0x00	; 0
    1a06:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a0a:	c2 ff       	sbrs	r28, 2
    1a0c:	06 c0       	rjmp	.+12     	; 0x1a1a <PRV_voidWriteHalfPort+0x48>
    1a0e:	41 e0       	ldi	r20, 0x01	; 1
    1a10:	66 e0       	ldi	r22, 0x06	; 6
    1a12:	80 e0       	ldi	r24, 0x00	; 0
    1a14:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a18:	05 c0       	rjmp	.+10     	; 0x1a24 <PRV_voidWriteHalfPort+0x52>
    1a1a:	40 e0       	ldi	r20, 0x00	; 0
    1a1c:	66 e0       	ldi	r22, 0x06	; 6
    1a1e:	80 e0       	ldi	r24, 0x00	; 0
    1a20:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a24:	c3 ff       	sbrs	r28, 3
    1a26:	06 c0       	rjmp	.+12     	; 0x1a34 <PRV_voidWriteHalfPort+0x62>
    1a28:	41 e0       	ldi	r20, 0x01	; 1
    1a2a:	67 e0       	ldi	r22, 0x07	; 7
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a32:	05 c0       	rjmp	.+10     	; 0x1a3e <PRV_voidWriteHalfPort+0x6c>
    1a34:	40 e0       	ldi	r20, 0x00	; 0
    1a36:	67 e0       	ldi	r22, 0x07	; 7
    1a38:	80 e0       	ldi	r24, 0x00	; 0
    1a3a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a3e:	cf 91       	pop	r28
    1a40:	08 95       	ret

00001a42 <LCD_voidSendCommand>:
    1a42:	cf 93       	push	r28
    1a44:	c8 2f       	mov	r28, r24
    1a46:	40 e0       	ldi	r20, 0x00	; 0
    1a48:	61 e0       	ldi	r22, 0x01	; 1
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a50:	40 e0       	ldi	r20, 0x00	; 0
    1a52:	62 e0       	ldi	r22, 0x02	; 2
    1a54:	81 e0       	ldi	r24, 0x01	; 1
    1a56:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a5a:	8c 2f       	mov	r24, r28
    1a5c:	82 95       	swap	r24
    1a5e:	8f 70       	andi	r24, 0x0F	; 15
    1a60:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1a64:	41 e0       	ldi	r20, 0x01	; 1
    1a66:	63 e0       	ldi	r22, 0x03	; 3
    1a68:	81 e0       	ldi	r24, 0x01	; 1
    1a6a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a6e:	8f e9       	ldi	r24, 0x9F	; 159
    1a70:	9f e0       	ldi	r25, 0x0F	; 15
    1a72:	01 97       	sbiw	r24, 0x01	; 1
    1a74:	f1 f7       	brne	.-4      	; 0x1a72 <LCD_voidSendCommand+0x30>
    1a76:	00 c0       	rjmp	.+0      	; 0x1a78 <LCD_voidSendCommand+0x36>
    1a78:	00 00       	nop
    1a7a:	40 e0       	ldi	r20, 0x00	; 0
    1a7c:	63 e0       	ldi	r22, 0x03	; 3
    1a7e:	81 e0       	ldi	r24, 0x01	; 1
    1a80:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a84:	8c 2f       	mov	r24, r28
    1a86:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1a8a:	41 e0       	ldi	r20, 0x01	; 1
    1a8c:	63 e0       	ldi	r22, 0x03	; 3
    1a8e:	81 e0       	ldi	r24, 0x01	; 1
    1a90:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1a94:	8f e9       	ldi	r24, 0x9F	; 159
    1a96:	9f e0       	ldi	r25, 0x0F	; 15
    1a98:	01 97       	sbiw	r24, 0x01	; 1
    1a9a:	f1 f7       	brne	.-4      	; 0x1a98 <LCD_voidSendCommand+0x56>
    1a9c:	00 c0       	rjmp	.+0      	; 0x1a9e <LCD_voidSendCommand+0x5c>
    1a9e:	00 00       	nop
    1aa0:	40 e0       	ldi	r20, 0x00	; 0
    1aa2:	63 e0       	ldi	r22, 0x03	; 3
    1aa4:	81 e0       	ldi	r24, 0x01	; 1
    1aa6:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1aaa:	cf 91       	pop	r28
    1aac:	08 95       	ret

00001aae <LCD_voidInit>:
    1aae:	41 e0       	ldi	r20, 0x01	; 1
    1ab0:	61 e0       	ldi	r22, 0x01	; 1
    1ab2:	81 e0       	ldi	r24, 0x01	; 1
    1ab4:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1ab8:	41 e0       	ldi	r20, 0x01	; 1
    1aba:	62 e0       	ldi	r22, 0x02	; 2
    1abc:	81 e0       	ldi	r24, 0x01	; 1
    1abe:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1ac2:	41 e0       	ldi	r20, 0x01	; 1
    1ac4:	63 e0       	ldi	r22, 0x03	; 3
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1acc:	41 e0       	ldi	r20, 0x01	; 1
    1ace:	64 e0       	ldi	r22, 0x04	; 4
    1ad0:	80 e0       	ldi	r24, 0x00	; 0
    1ad2:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1ad6:	41 e0       	ldi	r20, 0x01	; 1
    1ad8:	65 e0       	ldi	r22, 0x05	; 5
    1ada:	80 e0       	ldi	r24, 0x00	; 0
    1adc:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1ae0:	41 e0       	ldi	r20, 0x01	; 1
    1ae2:	66 e0       	ldi	r22, 0x06	; 6
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1aea:	41 e0       	ldi	r20, 0x01	; 1
    1aec:	67 e0       	ldi	r22, 0x07	; 7
    1aee:	80 e0       	ldi	r24, 0x00	; 0
    1af0:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1af4:	2f e7       	ldi	r18, 0x7F	; 127
    1af6:	85 eb       	ldi	r24, 0xB5	; 181
    1af8:	91 e0       	ldi	r25, 0x01	; 1
    1afa:	21 50       	subi	r18, 0x01	; 1
    1afc:	80 40       	sbci	r24, 0x00	; 0
    1afe:	90 40       	sbci	r25, 0x00	; 0
    1b00:	e1 f7       	brne	.-8      	; 0x1afa <LCD_voidInit+0x4c>
    1b02:	00 c0       	rjmp	.+0      	; 0x1b04 <LCD_voidInit+0x56>
    1b04:	00 00       	nop
    1b06:	40 e0       	ldi	r20, 0x00	; 0
    1b08:	61 e0       	ldi	r22, 0x01	; 1
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b10:	40 e0       	ldi	r20, 0x00	; 0
    1b12:	62 e0       	ldi	r22, 0x02	; 2
    1b14:	81 e0       	ldi	r24, 0x01	; 1
    1b16:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b1a:	82 e0       	ldi	r24, 0x02	; 2
    1b1c:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1b20:	41 e0       	ldi	r20, 0x01	; 1
    1b22:	63 e0       	ldi	r22, 0x03	; 3
    1b24:	81 e0       	ldi	r24, 0x01	; 1
    1b26:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b2a:	8f e9       	ldi	r24, 0x9F	; 159
    1b2c:	9f e0       	ldi	r25, 0x0F	; 15
    1b2e:	01 97       	sbiw	r24, 0x01	; 1
    1b30:	f1 f7       	brne	.-4      	; 0x1b2e <LCD_voidInit+0x80>
    1b32:	00 c0       	rjmp	.+0      	; 0x1b34 <LCD_voidInit+0x86>
    1b34:	00 00       	nop
    1b36:	40 e0       	ldi	r20, 0x00	; 0
    1b38:	63 e0       	ldi	r22, 0x03	; 3
    1b3a:	81 e0       	ldi	r24, 0x01	; 1
    1b3c:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b40:	88 e2       	ldi	r24, 0x28	; 40
    1b42:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
    1b46:	90 ef       	ldi	r25, 0xF0	; 240
    1b48:	9a 95       	dec	r25
    1b4a:	f1 f7       	brne	.-4      	; 0x1b48 <LCD_voidInit+0x9a>
    1b4c:	8c e0       	ldi	r24, 0x0C	; 12
    1b4e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
    1b52:	20 ef       	ldi	r18, 0xF0	; 240
    1b54:	2a 95       	dec	r18
    1b56:	f1 f7       	brne	.-4      	; 0x1b54 <LCD_voidInit+0xa6>
    1b58:	81 e0       	ldi	r24, 0x01	; 1
    1b5a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
    1b5e:	8f e3       	ldi	r24, 0x3F	; 63
    1b60:	9f e1       	ldi	r25, 0x1F	; 31
    1b62:	01 97       	sbiw	r24, 0x01	; 1
    1b64:	f1 f7       	brne	.-4      	; 0x1b62 <LCD_voidInit+0xb4>
    1b66:	00 c0       	rjmp	.+0      	; 0x1b68 <LCD_voidInit+0xba>
    1b68:	00 00       	nop
    1b6a:	86 e0       	ldi	r24, 0x06	; 6
    1b6c:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
    1b70:	08 95       	ret

00001b72 <LCD_voidDisplayChar>:
    1b72:	cf 93       	push	r28
    1b74:	c8 2f       	mov	r28, r24
    1b76:	41 e0       	ldi	r20, 0x01	; 1
    1b78:	61 e0       	ldi	r22, 0x01	; 1
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b80:	40 e0       	ldi	r20, 0x00	; 0
    1b82:	62 e0       	ldi	r22, 0x02	; 2
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b8a:	8c 2f       	mov	r24, r28
    1b8c:	82 95       	swap	r24
    1b8e:	8f 70       	andi	r24, 0x0F	; 15
    1b90:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1b94:	41 e0       	ldi	r20, 0x01	; 1
    1b96:	63 e0       	ldi	r22, 0x03	; 3
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1b9e:	8f e9       	ldi	r24, 0x9F	; 159
    1ba0:	9f e0       	ldi	r25, 0x0F	; 15
    1ba2:	01 97       	sbiw	r24, 0x01	; 1
    1ba4:	f1 f7       	brne	.-4      	; 0x1ba2 <LCD_voidDisplayChar+0x30>
    1ba6:	00 c0       	rjmp	.+0      	; 0x1ba8 <LCD_voidDisplayChar+0x36>
    1ba8:	00 00       	nop
    1baa:	40 e0       	ldi	r20, 0x00	; 0
    1bac:	63 e0       	ldi	r22, 0x03	; 3
    1bae:	81 e0       	ldi	r24, 0x01	; 1
    1bb0:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1bb4:	8c 2f       	mov	r24, r28
    1bb6:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1bba:	41 e0       	ldi	r20, 0x01	; 1
    1bbc:	63 e0       	ldi	r22, 0x03	; 3
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1bc4:	8f e9       	ldi	r24, 0x9F	; 159
    1bc6:	9f e0       	ldi	r25, 0x0F	; 15
    1bc8:	01 97       	sbiw	r24, 0x01	; 1
    1bca:	f1 f7       	brne	.-4      	; 0x1bc8 <LCD_voidDisplayChar+0x56>
    1bcc:	00 c0       	rjmp	.+0      	; 0x1bce <LCD_voidDisplayChar+0x5c>
    1bce:	00 00       	nop
    1bd0:	40 e0       	ldi	r20, 0x00	; 0
    1bd2:	63 e0       	ldi	r22, 0x03	; 3
    1bd4:	81 e0       	ldi	r24, 0x01	; 1
    1bd6:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1bda:	cf 91       	pop	r28
    1bdc:	08 95       	ret

00001bde <LCD_voidDisplayString>:
    1bde:	0f 93       	push	r16
    1be0:	1f 93       	push	r17
    1be2:	cf 93       	push	r28
    1be4:	00 97       	sbiw	r24, 0x00	; 0
    1be6:	29 f4       	brne	.+10     	; 0x1bf2 <LCD_voidDisplayString+0x14>
    1be8:	0c c0       	rjmp	.+24     	; 0x1c02 <LCD_voidDisplayString+0x24>
    1bea:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <LCD_voidDisplayChar>
    1bee:	cf 5f       	subi	r28, 0xFF	; 255
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <LCD_voidDisplayString+0x18>
    1bf2:	8c 01       	movw	r16, r24
    1bf4:	c0 e0       	ldi	r28, 0x00	; 0
    1bf6:	f8 01       	movw	r30, r16
    1bf8:	ec 0f       	add	r30, r28
    1bfa:	f1 1d       	adc	r31, r1
    1bfc:	80 81       	ld	r24, Z
    1bfe:	81 11       	cpse	r24, r1
    1c00:	f4 cf       	rjmp	.-24     	; 0x1bea <LCD_voidDisplayString+0xc>
    1c02:	cf 91       	pop	r28
    1c04:	1f 91       	pop	r17
    1c06:	0f 91       	pop	r16
    1c08:	08 95       	ret

00001c0a <LCD_voidDisplayStringDelay>:
    1c0a:	0f 93       	push	r16
    1c0c:	1f 93       	push	r17
    1c0e:	cf 93       	push	r28
    1c10:	00 97       	sbiw	r24, 0x00	; 0
    1c12:	71 f4       	brne	.+28     	; 0x1c30 <LCD_voidDisplayStringDelay+0x26>
    1c14:	15 c0       	rjmp	.+42     	; 0x1c40 <LCD_voidDisplayStringDelay+0x36>
    1c16:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <LCD_voidDisplayChar>
    1c1a:	cf 5f       	subi	r28, 0xFF	; 255
    1c1c:	2f ef       	ldi	r18, 0xFF	; 255
    1c1e:	80 e7       	ldi	r24, 0x70	; 112
    1c20:	92 e0       	ldi	r25, 0x02	; 2
    1c22:	21 50       	subi	r18, 0x01	; 1
    1c24:	80 40       	sbci	r24, 0x00	; 0
    1c26:	90 40       	sbci	r25, 0x00	; 0
    1c28:	e1 f7       	brne	.-8      	; 0x1c22 <LCD_voidDisplayStringDelay+0x18>
    1c2a:	00 c0       	rjmp	.+0      	; 0x1c2c <LCD_voidDisplayStringDelay+0x22>
    1c2c:	00 00       	nop
    1c2e:	02 c0       	rjmp	.+4      	; 0x1c34 <LCD_voidDisplayStringDelay+0x2a>
    1c30:	8c 01       	movw	r16, r24
    1c32:	c0 e0       	ldi	r28, 0x00	; 0
    1c34:	f8 01       	movw	r30, r16
    1c36:	ec 0f       	add	r30, r28
    1c38:	f1 1d       	adc	r31, r1
    1c3a:	80 81       	ld	r24, Z
    1c3c:	81 11       	cpse	r24, r1
    1c3e:	eb cf       	rjmp	.-42     	; 0x1c16 <LCD_voidDisplayStringDelay+0xc>
    1c40:	cf 91       	pop	r28
    1c42:	1f 91       	pop	r17
    1c44:	0f 91       	pop	r16
    1c46:	08 95       	ret

00001c48 <LCD_voidDisplayNumber>:
    1c48:	0f 93       	push	r16
    1c4a:	1f 93       	push	r17
    1c4c:	cf 93       	push	r28
    1c4e:	df 93       	push	r29
    1c50:	00 d0       	rcall	.+0      	; 0x1c52 <LCD_voidDisplayNumber+0xa>
    1c52:	00 d0       	rcall	.+0      	; 0x1c54 <LCD_voidDisplayNumber+0xc>
    1c54:	1f 92       	push	r1
    1c56:	cd b7       	in	r28, 0x3d	; 61
    1c58:	de b7       	in	r29, 0x3e	; 62
    1c5a:	26 2f       	mov	r18, r22
    1c5c:	10 e0       	ldi	r17, 0x00	; 0
    1c5e:	08 c0       	rjmp	.+16     	; 0x1c70 <LCD_voidDisplayNumber+0x28>
    1c60:	1f 5f       	subi	r17, 0xFF	; 255
    1c62:	ed ec       	ldi	r30, 0xCD	; 205
    1c64:	6e 9f       	mul	r22, r30
    1c66:	61 2d       	mov	r22, r1
    1c68:	11 24       	eor	r1, r1
    1c6a:	66 95       	lsr	r22
    1c6c:	66 95       	lsr	r22
    1c6e:	66 95       	lsr	r22
    1c70:	61 11       	cpse	r22, r1
    1c72:	f6 cf       	rjmp	.-20     	; 0x1c60 <LCD_voidDisplayNumber+0x18>
    1c74:	00 e0       	ldi	r16, 0x00	; 0
    1c76:	1a c0       	rjmp	.+52     	; 0x1cac <LCD_voidDisplayNumber+0x64>
    1c78:	62 2f       	mov	r22, r18
    1c7a:	2a e0       	ldi	r18, 0x0A	; 10
    1c7c:	30 e0       	ldi	r19, 0x00	; 0
    1c7e:	40 e0       	ldi	r20, 0x00	; 0
    1c80:	50 e0       	ldi	r21, 0x00	; 0
    1c82:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <__udivmodsi4>
    1c86:	73 2f       	mov	r23, r19
    1c88:	84 2f       	mov	r24, r20
    1c8a:	95 2f       	mov	r25, r21
    1c8c:	a0 2f       	mov	r26, r16
    1c8e:	b0 e0       	ldi	r27, 0x00	; 0
    1c90:	11 96       	adiw	r26, 0x01	; 1
    1c92:	e1 2f       	mov	r30, r17
    1c94:	f0 e0       	ldi	r31, 0x00	; 0
    1c96:	ea 1b       	sub	r30, r26
    1c98:	fb 0b       	sbc	r31, r27
    1c9a:	41 e0       	ldi	r20, 0x01	; 1
    1c9c:	50 e0       	ldi	r21, 0x00	; 0
    1c9e:	4c 0f       	add	r20, r28
    1ca0:	5d 1f       	adc	r21, r29
    1ca2:	e4 0f       	add	r30, r20
    1ca4:	f5 1f       	adc	r31, r21
    1ca6:	60 5d       	subi	r22, 0xD0	; 208
    1ca8:	60 83       	st	Z, r22
    1caa:	0f 5f       	subi	r16, 0xFF	; 255
    1cac:	01 17       	cp	r16, r17
    1cae:	20 f3       	brcs	.-56     	; 0x1c78 <LCD_voidDisplayNumber+0x30>
    1cb0:	e1 e0       	ldi	r30, 0x01	; 1
    1cb2:	f0 e0       	ldi	r31, 0x00	; 0
    1cb4:	ec 0f       	add	r30, r28
    1cb6:	fd 1f       	adc	r31, r29
    1cb8:	e1 0f       	add	r30, r17
    1cba:	f1 1d       	adc	r31, r1
    1cbc:	10 82       	st	Z, r1
    1cbe:	10 e0       	ldi	r17, 0x00	; 0
    1cc0:	03 c0       	rjmp	.+6      	; 0x1cc8 <LCD_voidDisplayNumber+0x80>
    1cc2:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <LCD_voidDisplayChar>
    1cc6:	1f 5f       	subi	r17, 0xFF	; 255
    1cc8:	e1 e0       	ldi	r30, 0x01	; 1
    1cca:	f0 e0       	ldi	r31, 0x00	; 0
    1ccc:	ec 0f       	add	r30, r28
    1cce:	fd 1f       	adc	r31, r29
    1cd0:	e1 0f       	add	r30, r17
    1cd2:	f1 1d       	adc	r31, r1
    1cd4:	80 81       	ld	r24, Z
    1cd6:	81 11       	cpse	r24, r1
    1cd8:	f4 cf       	rjmp	.-24     	; 0x1cc2 <LCD_voidDisplayNumber+0x7a>
    1cda:	0f 90       	pop	r0
    1cdc:	0f 90       	pop	r0
    1cde:	0f 90       	pop	r0
    1ce0:	0f 90       	pop	r0
    1ce2:	0f 90       	pop	r0
    1ce4:	df 91       	pop	r29
    1ce6:	cf 91       	pop	r28
    1ce8:	1f 91       	pop	r17
    1cea:	0f 91       	pop	r16
    1cec:	08 95       	ret

00001cee <LCD_voidClear>:
    1cee:	40 e0       	ldi	r20, 0x00	; 0
    1cf0:	61 e0       	ldi	r22, 0x01	; 1
    1cf2:	81 e0       	ldi	r24, 0x01	; 1
    1cf4:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1cf8:	40 e0       	ldi	r20, 0x00	; 0
    1cfa:	62 e0       	ldi	r22, 0x02	; 2
    1cfc:	81 e0       	ldi	r24, 0x01	; 1
    1cfe:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1d02:	80 e0       	ldi	r24, 0x00	; 0
    1d04:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1d08:	41 e0       	ldi	r20, 0x01	; 1
    1d0a:	63 e0       	ldi	r22, 0x03	; 3
    1d0c:	81 e0       	ldi	r24, 0x01	; 1
    1d0e:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1d12:	8f e9       	ldi	r24, 0x9F	; 159
    1d14:	9f e0       	ldi	r25, 0x0F	; 15
    1d16:	01 97       	sbiw	r24, 0x01	; 1
    1d18:	f1 f7       	brne	.-4      	; 0x1d16 <LCD_voidClear+0x28>
    1d1a:	00 c0       	rjmp	.+0      	; 0x1d1c <LCD_voidClear+0x2e>
    1d1c:	00 00       	nop
    1d1e:	40 e0       	ldi	r20, 0x00	; 0
    1d20:	63 e0       	ldi	r22, 0x03	; 3
    1d22:	81 e0       	ldi	r24, 0x01	; 1
    1d24:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1d28:	81 e0       	ldi	r24, 0x01	; 1
    1d2a:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <PRV_voidWriteHalfPort>
    1d2e:	41 e0       	ldi	r20, 0x01	; 1
    1d30:	63 e0       	ldi	r22, 0x03	; 3
    1d32:	81 e0       	ldi	r24, 0x01	; 1
    1d34:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1d38:	8f e9       	ldi	r24, 0x9F	; 159
    1d3a:	9f e0       	ldi	r25, 0x0F	; 15
    1d3c:	01 97       	sbiw	r24, 0x01	; 1
    1d3e:	f1 f7       	brne	.-4      	; 0x1d3c <LCD_voidClear+0x4e>
    1d40:	00 c0       	rjmp	.+0      	; 0x1d42 <LCD_voidClear+0x54>
    1d42:	00 00       	nop
    1d44:	40 e0       	ldi	r20, 0x00	; 0
    1d46:	63 e0       	ldi	r22, 0x03	; 3
    1d48:	81 e0       	ldi	r24, 0x01	; 1
    1d4a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1d4e:	08 95       	ret

00001d50 <LCD_voidGoTOSpecificPosition>:


void LCD_voidGoTOSpecificPosition(u8 copy_u8LineNumber,u8 copy_u8Position)
{
    1d50:	cf 93       	push	r28
    1d52:	df 93       	push	r29
	if(copy_u8Position<40)
    1d54:	68 32       	cpi	r22, 0x28	; 40
    1d56:	a0 f4       	brcc	.+40     	; 0x1d80 <LCD_voidGoTOSpecificPosition+0x30>
    1d58:	c6 2f       	mov	r28, r22
    1d5a:	d8 2f       	mov	r29, r24
	{
		//cmnd to return cursor to home position
		LCD_voidSendCommand(0b00000010);
    1d5c:	82 e0       	ldi	r24, 0x02	; 2
    1d5e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
		
		switch(copy_u8LineNumber)
    1d62:	d1 30       	cpi	r29, 0x01	; 1
    1d64:	19 f0       	breq	.+6      	; 0x1d6c <LCD_voidGoTOSpecificPosition+0x1c>
    1d66:	d2 30       	cpi	r29, 0x02	; 2
    1d68:	31 f0       	breq	.+12     	; 0x1d76 <LCD_voidGoTOSpecificPosition+0x26>
    1d6a:	0a c0       	rjmp	.+20     	; 0x1d80 <LCD_voidGoTOSpecificPosition+0x30>
		{
			case LCD_LINE_ONE:
			
			LCD_voidSendCommand(0b10000000|copy_u8Position);
    1d6c:	8c 2f       	mov	r24, r28
    1d6e:	80 68       	ori	r24, 0x80	; 128
    1d70:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
		
			
			break;
    1d74:	05 c0       	rjmp	.+10     	; 0x1d80 <LCD_voidGoTOSpecificPosition+0x30>
			
			case LCD_LINE_TWO:

			LCD_voidSendCommand(0b10000000|(copy_u8Position+0x40));
    1d76:	80 e4       	ldi	r24, 0x40	; 64
    1d78:	8c 0f       	add	r24, r28
    1d7a:	80 68       	ori	r24, 0x80	; 128
    1d7c:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <LCD_voidSendCommand>
		//error state
	}
	
	
	
}
    1d80:	df 91       	pop	r29
    1d82:	cf 91       	pop	r28
    1d84:	08 95       	ret

00001d86 <LED_voidInit>:
#include"BIT_MATH.h"
#include"STD_TYPES.h"

void LED_voidInit	(u8 copy_u8LedPortId,u8 copy_u8LedPinId)
{
	DIO_voidSetPinDirection( copy_u8LedPortId,  copy_u8LedPinId, DIO_PIN_OUTPUT);
    1d86:	41 e0       	ldi	r20, 0x01	; 1
    1d88:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
    1d8c:	08 95       	ret

00001d8e <LED_voidOn>:
}


void LED_voidOn		(u8 copy_u8LedPortId,u8 copy_u8LedPinId,u8 copy_u8LedConnectionType)
{
	switch(copy_u8LedConnectionType)
    1d8e:	41 30       	cpi	r20, 0x01	; 1
    1d90:	19 f0       	breq	.+6      	; 0x1d98 <LED_voidOn+0xa>
    1d92:	42 30       	cpi	r20, 0x02	; 2
    1d94:	29 f0       	breq	.+10     	; 0x1da0 <LED_voidOn+0x12>
    1d96:	08 95       	ret
	{
	case LED_FORWARD_CONNECTION:
		DIO_voidSetPinValue    ( copy_u8LedPortId,  copy_u8LedPinId, DIO_PIN_HIGH);
    1d98:	41 e0       	ldi	r20, 0x01	; 1
    1d9a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
		break;
    1d9e:	08 95       	ret
	
	case LED_REVERSE_CONNECTION:
		DIO_voidSetPinValue    ( copy_u8LedPortId,  copy_u8LedPinId, DIO_PIN_LOW);
    1da0:	40 e0       	ldi	r20, 0x00	; 0
    1da2:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1da6:	08 95       	ret

00001da8 <LED_voidOff>:
		break;
	}
}
void LED_voidOff	(u8 copy_u8LedPortId,u8 copy_u8LedPinId,u8 copy_u8LedConnectionType)
{
	switch(copy_u8LedConnectionType)
    1da8:	41 30       	cpi	r20, 0x01	; 1
    1daa:	19 f0       	breq	.+6      	; 0x1db2 <LED_voidOff+0xa>
    1dac:	42 30       	cpi	r20, 0x02	; 2
    1dae:	29 f0       	breq	.+10     	; 0x1dba <LED_voidOff+0x12>
    1db0:	08 95       	ret
	{
	case LED_FORWARD_CONNECTION	:
		DIO_voidSetPinValue    ( copy_u8LedPortId,  copy_u8LedPinId, DIO_PIN_LOW);
    1db2:	40 e0       	ldi	r20, 0x00	; 0
    1db4:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
		break;
    1db8:	08 95       	ret
	
	case LED_REVERSE_CONNECTION	:
		DIO_voidSetPinValue    ( copy_u8LedPortId,  copy_u8LedPinId, DIO_PIN_HIGH);
    1dba:	41 e0       	ldi	r20, 0x01	; 1
    1dbc:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <DIO_voidSetPinValue>
    1dc0:	08 95       	ret

00001dc2 <SERVO_voidInit>:
 
 
void SERVO_voidInit(u8 copy_u8PWMPortId,u8 copy_u8PWMPinId)
{
	//Init pin as an outputpin
	DIO_voidSetPinDirection(copy_u8PWMPortId,copy_u8PWMPinId,DIO_PIN_OUTPUT);
    1dc2:	41 e0       	ldi	r20, 0x01	; 1
    1dc4:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPinDirection>
	
	//init PWM(channel1A)
	PWM_voidInitChannel_1A();
    1dc8:	0e 94 df 10 	call	0x21be	; 0x21be <PWM_voidInitChannel_1A>
    1dcc:	08 95       	ret

00001dce <SERVO_voidStartByAngle>:
{
	
	f32 Local_f32Dutycycle;
	
	//calculate servo duty
	Local_f32Dutycycle=((2.5*copy_f32ServoAngle)+675)/90;
    1dce:	20 e0       	ldi	r18, 0x00	; 0
    1dd0:	30 e0       	ldi	r19, 0x00	; 0
    1dd2:	40 e2       	ldi	r20, 0x20	; 32
    1dd4:	50 e4       	ldi	r21, 0x40	; 64
    1dd6:	0e 94 ce 14 	call	0x299c	; 0x299c <__mulsf3>
    1dda:	20 e0       	ldi	r18, 0x00	; 0
    1ddc:	30 ec       	ldi	r19, 0xC0	; 192
    1dde:	48 e2       	ldi	r20, 0x28	; 40
    1de0:	54 e4       	ldi	r21, 0x44	; 68
    1de2:	0e 94 0a 13 	call	0x2614	; 0x2614 <__addsf3>
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	44 eb       	ldi	r20, 0xB4	; 180
    1dec:	52 e4       	ldi	r21, 0x42	; 66
    1dee:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__divsf3>
    1df2:	ab 01       	movw	r20, r22
    1df4:	bc 01       	movw	r22, r24
	
	PWM_voidGenerateChannel_1B(SERVO_FREQUENCY_HZ,Local_f32Dutycycle);
    1df6:	82 e3       	ldi	r24, 0x32	; 50
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	0e 94 51 11 	call	0x22a2	; 0x22a2 <PWM_voidGenerateChannel_1B>
    1dfe:	08 95       	ret

00001e00 <main>:
u8 user_type =HOME_REMOTE_USER;

int main()
{
	u8 suc;
	APP_init();
    1e00:	0e 94 24 07 	call	0xe48	; 0xe48 <APP_init>
		//}
		
		
		
		// HOME_voidChangeUserNameAndPass();
		if (global_accessType ==accessPermited)
    1e04:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <global_accessType>
    1e08:	81 30       	cpi	r24, 0x01	; 1
    1e0a:	71 f4       	brne	.+28     	; 0x1e28 <main+0x28>
		{
			if (user_type == HOME_REMOTE_ADMIN)
    1e0c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <user_type>
    1e10:	83 30       	cpi	r24, 0x03	; 3
    1e12:	19 f4       	brne	.+6      	; 0x1e1a <main+0x1a>
			{
				KPD_Interface_RemoteAdmin();
    1e14:	0e 94 55 03 	call	0x6aa	; 0x6aa <KPD_Interface_RemoteAdmin>
    1e18:	f5 cf       	rjmp	.-22     	; 0x1e04 <main+0x4>
			}
			else if (user_type == HOME_REMOTE_USER)
    1e1a:	84 30       	cpi	r24, 0x04	; 4
    1e1c:	99 f3       	breq	.-26     	; 0x1e04 <main+0x4>
			{
				/* code */
			}

			else if (user_type == HOME_LOCAL_USER)
    1e1e:	82 30       	cpi	r24, 0x02	; 2
    1e20:	89 f7       	brne	.-30     	; 0x1e04 <main+0x4>
			{
				KPD_Interface_Localuser();
    1e22:	0e 94 24 08 	call	0x1048	; 0x1048 <KPD_Interface_Localuser>
    1e26:	ee cf       	rjmp	.-36     	; 0x1e04 <main+0x4>
			}

			
		}
		else if (global_accessType ==accessDenied)
    1e28:	81 11       	cpse	r24, r1
    1e2a:	ec cf       	rjmp	.-40     	; 0x1e04 <main+0x4>
		{
			LCD_voidDisplayString((u8*)"Access Denied");
    1e2c:	8e ea       	ldi	r24, 0xAE	; 174
    1e2e:	93 e0       	ldi	r25, 0x03	; 3
    1e30:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <LCD_voidDisplayString>
		}
		
		
		
	}
}
    1e34:	80 e0       	ldi	r24, 0x00	; 0
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	08 95       	ret

00001e3a <ADC_voidInit>:


void ADC_voidInit(u8 copy_u8ReferenceVoltage)
{
	//Select the voltage source
	switch(copy_u8ReferenceVoltage)
    1e3a:	82 30       	cpi	r24, 0x02	; 2
    1e3c:	59 f0       	breq	.+22     	; 0x1e54 <ADC_voidInit+0x1a>
    1e3e:	83 30       	cpi	r24, 0x03	; 3
    1e40:	81 f0       	breq	.+32     	; 0x1e62 <ADC_voidInit+0x28>
    1e42:	81 30       	cpi	r24, 0x01	; 1
    1e44:	a1 f4       	brne	.+40     	; 0x1e6e <ADC_voidInit+0x34>
	{
		case ADC_REFERENCE_AVCC:
		SET_BIT(ADMUX_REG,REFS0);
    1e46:	87 b1       	in	r24, 0x07	; 7
    1e48:	80 64       	ori	r24, 0x40	; 64
    1e4a:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADMUX_REG,REFS1);
    1e4c:	87 b1       	in	r24, 0x07	; 7
    1e4e:	8f 77       	andi	r24, 0x7F	; 127
    1e50:	87 b9       	out	0x07, r24	; 7
		break;
    1e52:	0d c0       	rjmp	.+26     	; 0x1e6e <ADC_voidInit+0x34>
		
		case ADC_REFERENCE_AREF:
		CLR_BIT(ADMUX_REG,REFS0);
    1e54:	87 b1       	in	r24, 0x07	; 7
    1e56:	8f 7b       	andi	r24, 0xBF	; 191
    1e58:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADMUX_REG,REFS1);
    1e5a:	87 b1       	in	r24, 0x07	; 7
    1e5c:	8f 77       	andi	r24, 0x7F	; 127
    1e5e:	87 b9       	out	0x07, r24	; 7
		break;
    1e60:	06 c0       	rjmp	.+12     	; 0x1e6e <ADC_voidInit+0x34>
		
		// Vref = 2.56V internal
		case ADC_REFERENCE_INTRNAL:
		SET_BIT(ADMUX_REG,REFS0);
    1e62:	87 b1       	in	r24, 0x07	; 7
    1e64:	80 64       	ori	r24, 0x40	; 64
    1e66:	87 b9       	out	0x07, r24	; 7
		SET_BIT(ADMUX_REG,REFS1);
    1e68:	87 b1       	in	r24, 0x07	; 7
    1e6a:	80 68       	ori	r24, 0x80	; 128
    1e6c:	87 b9       	out	0x07, r24	; 7
		break;
	}
	
	//Select Right Adjustment
	CLR_BIT(ADMUX_REG,ADLAR);
    1e6e:	87 b1       	in	r24, 0x07	; 7
    1e70:	8f 7d       	andi	r24, 0xDF	; 223
    1e72:	87 b9       	out	0x07, r24	; 7
	
	//Clear the auto trigger bit - Single Conversation Mode
	CLR_BIT(ADCSRA_REG,ADATE);
    1e74:	86 b1       	in	r24, 0x06	; 6
    1e76:	8f 7d       	andi	r24, 0xDF	; 223
    1e78:	86 b9       	out	0x06, r24	; 6
	
	//Disable ADC Interrupt
	CLR_BIT(ADCSRA_REG,ADIE);
    1e7a:	86 b1       	in	r24, 0x06	; 6
    1e7c:	87 7f       	andi	r24, 0xF7	; 247
    1e7e:	86 b9       	out	0x06, r24	; 6
	
	//Prescaler 128 For 16MHZ (125 KHZ)
	SET_BIT(ADCSRA_REG,ADPS2);
    1e80:	86 b1       	in	r24, 0x06	; 6
    1e82:	84 60       	ori	r24, 0x04	; 4
    1e84:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA_REG,ADPS1);
    1e86:	86 b1       	in	r24, 0x06	; 6
    1e88:	82 60       	ori	r24, 0x02	; 2
    1e8a:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA_REG,ADPS0);
    1e8c:	86 b1       	in	r24, 0x06	; 6
    1e8e:	81 60       	ori	r24, 0x01	; 1
    1e90:	86 b9       	out	0x06, r24	; 6
	
	//ADC Enable (make the enable the last step)
	SET_BIT(ADCSRA_REG,ADEN);
    1e92:	86 b1       	in	r24, 0x06	; 6
    1e94:	80 68       	ori	r24, 0x80	; 128
    1e96:	86 b9       	out	0x06, r24	; 6
    1e98:	08 95       	ret

00001e9a <ADC_voidGetDigitalValue>:
}


void ADC_voidGetDigitalValue(u8 copy_u8ChannelNumber, u16* copy_pu16DigitalValue)
{
	if(copy_pu16DigitalValue!=NULL)
    1e9a:	61 15       	cp	r22, r1
    1e9c:	71 05       	cpc	r23, r1
    1e9e:	b9 f0       	breq	.+46     	; 0x1ece <ADC_voidGetDigitalValue+0x34>
	{
		//1. Select channel
		ADMUX_REG &= 0xE0; //0b11100000
    1ea0:	97 b1       	in	r25, 0x07	; 7
    1ea2:	90 7e       	andi	r25, 0xE0	; 224
    1ea4:	97 b9       	out	0x07, r25	; 7
		// Select Channel Number 
		ADMUX_REG |= copy_u8ChannelNumber;
    1ea6:	97 b1       	in	r25, 0x07	; 7
    1ea8:	89 2b       	or	r24, r25
    1eaa:	87 b9       	out	0x07, r24	; 7
		
		//2. Start Conversition
	    SET_BIT(ADCSRA_REG,ADSC);
    1eac:	86 b1       	in	r24, 0x06	; 6
    1eae:	80 64       	ori	r24, 0x40	; 64
    1eb0:	86 b9       	out	0x06, r24	; 6
		// Busy Wait for ADC Flag 
		while(0 == GET_BIT(ADCSRA_REG,ADIF));
    1eb2:	34 9b       	sbis	0x06, 4	; 6
    1eb4:	fe cf       	rjmp	.-4      	; 0x1eb2 <ADC_voidGetDigitalValue+0x18>
		u16 temp = ADC_u16_REG;
    1eb6:	84 b1       	in	r24, 0x04	; 4
    1eb8:	95 b1       	in	r25, 0x05	; 5
		*copy_pu16DigitalValue = temp/4;
    1eba:	96 95       	lsr	r25
    1ebc:	87 95       	ror	r24
    1ebe:	96 95       	lsr	r25
    1ec0:	87 95       	ror	r24
    1ec2:	fb 01       	movw	r30, r22
    1ec4:	91 83       	std	Z+1, r25	; 0x01
    1ec6:	80 83       	st	Z, r24
		
		//Clear Flag(write one to clear)

		SET_BIT(ADCSRA_REG,ADIF);
    1ec8:	86 b1       	in	r24, 0x06	; 6
    1eca:	80 61       	ori	r24, 0x10	; 16
    1ecc:	86 b9       	out	0x06, r24	; 6
    1ece:	08 95       	ret

00001ed0 <DIO_voidSetPinDirection>:
			case DIO_PORTC:
			TOG_BIT(PORTC_REG,copy_u8PinId);
			break;
			
			case DIO_PORTD:
			TOG_BIT(PORTD_REG,copy_u8PinId);
    1ed0:	84 30       	cpi	r24, 0x04	; 4
    1ed2:	08 f0       	brcs	.+2      	; 0x1ed6 <DIO_voidSetPinDirection+0x6>
    1ed4:	7c c0       	rjmp	.+248    	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1ed6:	68 30       	cpi	r22, 0x08	; 8
    1ed8:	08 f0       	brcs	.+2      	; 0x1edc <DIO_voidSetPinDirection+0xc>
    1eda:	79 c0       	rjmp	.+242    	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1edc:	42 30       	cpi	r20, 0x02	; 2
    1ede:	08 f0       	brcs	.+2      	; 0x1ee2 <DIO_voidSetPinDirection+0x12>
    1ee0:	76 c0       	rjmp	.+236    	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1ee2:	81 30       	cpi	r24, 0x01	; 1
    1ee4:	19 f1       	breq	.+70     	; 0x1f2c <DIO_voidSetPinDirection+0x5c>
    1ee6:	30 f0       	brcs	.+12     	; 0x1ef4 <DIO_voidSetPinDirection+0x24>
    1ee8:	82 30       	cpi	r24, 0x02	; 2
    1eea:	e1 f1       	breq	.+120    	; 0x1f64 <DIO_voidSetPinDirection+0x94>
    1eec:	83 30       	cpi	r24, 0x03	; 3
    1eee:	09 f4       	brne	.+2      	; 0x1ef2 <DIO_voidSetPinDirection+0x22>
    1ef0:	54 c0       	rjmp	.+168    	; 0x1f9a <DIO_voidSetPinDirection+0xca>
    1ef2:	08 95       	ret
    1ef4:	44 23       	and	r20, r20
    1ef6:	71 f0       	breq	.+28     	; 0x1f14 <DIO_voidSetPinDirection+0x44>
    1ef8:	41 30       	cpi	r20, 0x01	; 1
    1efa:	09 f0       	breq	.+2      	; 0x1efe <DIO_voidSetPinDirection+0x2e>
    1efc:	68 c0       	rjmp	.+208    	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1efe:	2a b3       	in	r18, 0x1a	; 26
    1f00:	81 e0       	ldi	r24, 0x01	; 1
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	02 c0       	rjmp	.+4      	; 0x1f0a <DIO_voidSetPinDirection+0x3a>
    1f06:	88 0f       	add	r24, r24
    1f08:	99 1f       	adc	r25, r25
    1f0a:	6a 95       	dec	r22
    1f0c:	e2 f7       	brpl	.-8      	; 0x1f06 <DIO_voidSetPinDirection+0x36>
    1f0e:	82 2b       	or	r24, r18
    1f10:	8a bb       	out	0x1a, r24	; 26
    1f12:	08 95       	ret
    1f14:	2a b3       	in	r18, 0x1a	; 26
    1f16:	81 e0       	ldi	r24, 0x01	; 1
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	02 c0       	rjmp	.+4      	; 0x1f20 <DIO_voidSetPinDirection+0x50>
    1f1c:	88 0f       	add	r24, r24
    1f1e:	99 1f       	adc	r25, r25
    1f20:	6a 95       	dec	r22
    1f22:	e2 f7       	brpl	.-8      	; 0x1f1c <DIO_voidSetPinDirection+0x4c>
    1f24:	80 95       	com	r24
    1f26:	82 23       	and	r24, r18
    1f28:	8a bb       	out	0x1a, r24	; 26
    1f2a:	08 95       	ret
    1f2c:	44 23       	and	r20, r20
    1f2e:	71 f0       	breq	.+28     	; 0x1f4c <DIO_voidSetPinDirection+0x7c>
    1f30:	41 30       	cpi	r20, 0x01	; 1
    1f32:	09 f0       	breq	.+2      	; 0x1f36 <DIO_voidSetPinDirection+0x66>
    1f34:	4c c0       	rjmp	.+152    	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1f36:	27 b3       	in	r18, 0x17	; 23
    1f38:	81 e0       	ldi	r24, 0x01	; 1
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	02 c0       	rjmp	.+4      	; 0x1f42 <DIO_voidSetPinDirection+0x72>
    1f3e:	88 0f       	add	r24, r24
    1f40:	99 1f       	adc	r25, r25
    1f42:	6a 95       	dec	r22
    1f44:	e2 f7       	brpl	.-8      	; 0x1f3e <DIO_voidSetPinDirection+0x6e>
    1f46:	82 2b       	or	r24, r18
    1f48:	87 bb       	out	0x17, r24	; 23
    1f4a:	08 95       	ret
    1f4c:	27 b3       	in	r18, 0x17	; 23
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	02 c0       	rjmp	.+4      	; 0x1f58 <DIO_voidSetPinDirection+0x88>
    1f54:	88 0f       	add	r24, r24
    1f56:	99 1f       	adc	r25, r25
    1f58:	6a 95       	dec	r22
    1f5a:	e2 f7       	brpl	.-8      	; 0x1f54 <DIO_voidSetPinDirection+0x84>
    1f5c:	80 95       	com	r24
    1f5e:	82 23       	and	r24, r18
    1f60:	87 bb       	out	0x17, r24	; 23
    1f62:	08 95       	ret
    1f64:	44 23       	and	r20, r20
    1f66:	69 f0       	breq	.+26     	; 0x1f82 <DIO_voidSetPinDirection+0xb2>
    1f68:	41 30       	cpi	r20, 0x01	; 1
    1f6a:	89 f5       	brne	.+98     	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1f6c:	24 b3       	in	r18, 0x14	; 20
    1f6e:	81 e0       	ldi	r24, 0x01	; 1
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	02 c0       	rjmp	.+4      	; 0x1f78 <DIO_voidSetPinDirection+0xa8>
    1f74:	88 0f       	add	r24, r24
    1f76:	99 1f       	adc	r25, r25
    1f78:	6a 95       	dec	r22
    1f7a:	e2 f7       	brpl	.-8      	; 0x1f74 <DIO_voidSetPinDirection+0xa4>
    1f7c:	82 2b       	or	r24, r18
    1f7e:	84 bb       	out	0x14, r24	; 20
    1f80:	08 95       	ret
    1f82:	24 b3       	in	r18, 0x14	; 20
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	90 e0       	ldi	r25, 0x00	; 0
    1f88:	02 c0       	rjmp	.+4      	; 0x1f8e <DIO_voidSetPinDirection+0xbe>
    1f8a:	88 0f       	add	r24, r24
    1f8c:	99 1f       	adc	r25, r25
    1f8e:	6a 95       	dec	r22
    1f90:	e2 f7       	brpl	.-8      	; 0x1f8a <DIO_voidSetPinDirection+0xba>
    1f92:	80 95       	com	r24
    1f94:	82 23       	and	r24, r18
    1f96:	84 bb       	out	0x14, r24	; 20
    1f98:	08 95       	ret
    1f9a:	44 23       	and	r20, r20
    1f9c:	69 f0       	breq	.+26     	; 0x1fb8 <DIO_voidSetPinDirection+0xe8>
    1f9e:	41 30       	cpi	r20, 0x01	; 1
    1fa0:	b1 f4       	brne	.+44     	; 0x1fce <DIO_voidSetPinDirection+0xfe>
    1fa2:	21 b3       	in	r18, 0x11	; 17
    1fa4:	81 e0       	ldi	r24, 0x01	; 1
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	02 c0       	rjmp	.+4      	; 0x1fae <DIO_voidSetPinDirection+0xde>
    1faa:	88 0f       	add	r24, r24
    1fac:	99 1f       	adc	r25, r25
    1fae:	6a 95       	dec	r22
    1fb0:	e2 f7       	brpl	.-8      	; 0x1faa <DIO_voidSetPinDirection+0xda>
    1fb2:	82 2b       	or	r24, r18
    1fb4:	81 bb       	out	0x11, r24	; 17
    1fb6:	08 95       	ret
    1fb8:	21 b3       	in	r18, 0x11	; 17
    1fba:	81 e0       	ldi	r24, 0x01	; 1
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	02 c0       	rjmp	.+4      	; 0x1fc4 <DIO_voidSetPinDirection+0xf4>
    1fc0:	88 0f       	add	r24, r24
    1fc2:	99 1f       	adc	r25, r25
    1fc4:	6a 95       	dec	r22
    1fc6:	e2 f7       	brpl	.-8      	; 0x1fc0 <DIO_voidSetPinDirection+0xf0>
    1fc8:	80 95       	com	r24
    1fca:	82 23       	and	r24, r18
    1fcc:	81 bb       	out	0x11, r24	; 17
    1fce:	08 95       	ret

00001fd0 <DIO_voidSetPinValue>:
    1fd0:	84 30       	cpi	r24, 0x04	; 4
    1fd2:	08 f0       	brcs	.+2      	; 0x1fd6 <DIO_voidSetPinValue+0x6>
    1fd4:	7c c0       	rjmp	.+248    	; 0x20ce <DIO_voidSetPinValue+0xfe>
    1fd6:	68 30       	cpi	r22, 0x08	; 8
    1fd8:	08 f0       	brcs	.+2      	; 0x1fdc <DIO_voidSetPinValue+0xc>
    1fda:	79 c0       	rjmp	.+242    	; 0x20ce <DIO_voidSetPinValue+0xfe>
    1fdc:	42 30       	cpi	r20, 0x02	; 2
    1fde:	08 f0       	brcs	.+2      	; 0x1fe2 <DIO_voidSetPinValue+0x12>
    1fe0:	76 c0       	rjmp	.+236    	; 0x20ce <DIO_voidSetPinValue+0xfe>
    1fe2:	81 30       	cpi	r24, 0x01	; 1
    1fe4:	19 f1       	breq	.+70     	; 0x202c <DIO_voidSetPinValue+0x5c>
    1fe6:	30 f0       	brcs	.+12     	; 0x1ff4 <DIO_voidSetPinValue+0x24>
    1fe8:	82 30       	cpi	r24, 0x02	; 2
    1fea:	e1 f1       	breq	.+120    	; 0x2064 <DIO_voidSetPinValue+0x94>
    1fec:	83 30       	cpi	r24, 0x03	; 3
    1fee:	09 f4       	brne	.+2      	; 0x1ff2 <DIO_voidSetPinValue+0x22>
    1ff0:	54 c0       	rjmp	.+168    	; 0x209a <DIO_voidSetPinValue+0xca>
    1ff2:	08 95       	ret
    1ff4:	44 23       	and	r20, r20
    1ff6:	71 f0       	breq	.+28     	; 0x2014 <DIO_voidSetPinValue+0x44>
    1ff8:	41 30       	cpi	r20, 0x01	; 1
    1ffa:	09 f0       	breq	.+2      	; 0x1ffe <DIO_voidSetPinValue+0x2e>
    1ffc:	68 c0       	rjmp	.+208    	; 0x20ce <DIO_voidSetPinValue+0xfe>
    1ffe:	2b b3       	in	r18, 0x1b	; 27
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	02 c0       	rjmp	.+4      	; 0x200a <DIO_voidSetPinValue+0x3a>
    2006:	88 0f       	add	r24, r24
    2008:	99 1f       	adc	r25, r25
    200a:	6a 95       	dec	r22
    200c:	e2 f7       	brpl	.-8      	; 0x2006 <DIO_voidSetPinValue+0x36>
    200e:	82 2b       	or	r24, r18
    2010:	8b bb       	out	0x1b, r24	; 27
    2012:	08 95       	ret
    2014:	2b b3       	in	r18, 0x1b	; 27
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	02 c0       	rjmp	.+4      	; 0x2020 <DIO_voidSetPinValue+0x50>
    201c:	88 0f       	add	r24, r24
    201e:	99 1f       	adc	r25, r25
    2020:	6a 95       	dec	r22
    2022:	e2 f7       	brpl	.-8      	; 0x201c <DIO_voidSetPinValue+0x4c>
    2024:	80 95       	com	r24
    2026:	82 23       	and	r24, r18
    2028:	8b bb       	out	0x1b, r24	; 27
    202a:	08 95       	ret
    202c:	44 23       	and	r20, r20
    202e:	71 f0       	breq	.+28     	; 0x204c <DIO_voidSetPinValue+0x7c>
    2030:	41 30       	cpi	r20, 0x01	; 1
    2032:	09 f0       	breq	.+2      	; 0x2036 <DIO_voidSetPinValue+0x66>
    2034:	4c c0       	rjmp	.+152    	; 0x20ce <DIO_voidSetPinValue+0xfe>
    2036:	28 b3       	in	r18, 0x18	; 24
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	02 c0       	rjmp	.+4      	; 0x2042 <DIO_voidSetPinValue+0x72>
    203e:	88 0f       	add	r24, r24
    2040:	99 1f       	adc	r25, r25
    2042:	6a 95       	dec	r22
    2044:	e2 f7       	brpl	.-8      	; 0x203e <DIO_voidSetPinValue+0x6e>
    2046:	82 2b       	or	r24, r18
    2048:	88 bb       	out	0x18, r24	; 24
    204a:	08 95       	ret
    204c:	28 b3       	in	r18, 0x18	; 24
    204e:	81 e0       	ldi	r24, 0x01	; 1
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	02 c0       	rjmp	.+4      	; 0x2058 <DIO_voidSetPinValue+0x88>
    2054:	88 0f       	add	r24, r24
    2056:	99 1f       	adc	r25, r25
    2058:	6a 95       	dec	r22
    205a:	e2 f7       	brpl	.-8      	; 0x2054 <DIO_voidSetPinValue+0x84>
    205c:	80 95       	com	r24
    205e:	82 23       	and	r24, r18
    2060:	88 bb       	out	0x18, r24	; 24
    2062:	08 95       	ret
    2064:	44 23       	and	r20, r20
    2066:	69 f0       	breq	.+26     	; 0x2082 <DIO_voidSetPinValue+0xb2>
    2068:	41 30       	cpi	r20, 0x01	; 1
    206a:	89 f5       	brne	.+98     	; 0x20ce <DIO_voidSetPinValue+0xfe>
    206c:	25 b3       	in	r18, 0x15	; 21
    206e:	81 e0       	ldi	r24, 0x01	; 1
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	02 c0       	rjmp	.+4      	; 0x2078 <DIO_voidSetPinValue+0xa8>
    2074:	88 0f       	add	r24, r24
    2076:	99 1f       	adc	r25, r25
    2078:	6a 95       	dec	r22
    207a:	e2 f7       	brpl	.-8      	; 0x2074 <DIO_voidSetPinValue+0xa4>
    207c:	82 2b       	or	r24, r18
    207e:	85 bb       	out	0x15, r24	; 21
    2080:	08 95       	ret
    2082:	25 b3       	in	r18, 0x15	; 21
    2084:	81 e0       	ldi	r24, 0x01	; 1
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	02 c0       	rjmp	.+4      	; 0x208e <DIO_voidSetPinValue+0xbe>
    208a:	88 0f       	add	r24, r24
    208c:	99 1f       	adc	r25, r25
    208e:	6a 95       	dec	r22
    2090:	e2 f7       	brpl	.-8      	; 0x208a <DIO_voidSetPinValue+0xba>
    2092:	80 95       	com	r24
    2094:	82 23       	and	r24, r18
    2096:	85 bb       	out	0x15, r24	; 21
    2098:	08 95       	ret
    209a:	44 23       	and	r20, r20
    209c:	69 f0       	breq	.+26     	; 0x20b8 <DIO_voidSetPinValue+0xe8>
    209e:	41 30       	cpi	r20, 0x01	; 1
    20a0:	b1 f4       	brne	.+44     	; 0x20ce <DIO_voidSetPinValue+0xfe>
    20a2:	22 b3       	in	r18, 0x12	; 18
    20a4:	81 e0       	ldi	r24, 0x01	; 1
    20a6:	90 e0       	ldi	r25, 0x00	; 0
    20a8:	02 c0       	rjmp	.+4      	; 0x20ae <DIO_voidSetPinValue+0xde>
    20aa:	88 0f       	add	r24, r24
    20ac:	99 1f       	adc	r25, r25
    20ae:	6a 95       	dec	r22
    20b0:	e2 f7       	brpl	.-8      	; 0x20aa <DIO_voidSetPinValue+0xda>
    20b2:	82 2b       	or	r24, r18
    20b4:	82 bb       	out	0x12, r24	; 18
    20b6:	08 95       	ret
    20b8:	22 b3       	in	r18, 0x12	; 18
    20ba:	81 e0       	ldi	r24, 0x01	; 1
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	02 c0       	rjmp	.+4      	; 0x20c4 <DIO_voidSetPinValue+0xf4>
    20c0:	88 0f       	add	r24, r24
    20c2:	99 1f       	adc	r25, r25
    20c4:	6a 95       	dec	r22
    20c6:	e2 f7       	brpl	.-8      	; 0x20c0 <DIO_voidSetPinValue+0xf0>
    20c8:	80 95       	com	r24
    20ca:	82 23       	and	r24, r18
    20cc:	82 bb       	out	0x12, r24	; 18
    20ce:	08 95       	ret

000020d0 <DIO_voidGetPinValue>:
    20d0:	84 30       	cpi	r24, 0x04	; 4
    20d2:	c0 f5       	brcc	.+112    	; 0x2144 <DIO_voidGetPinValue+0x74>
    20d4:	68 30       	cpi	r22, 0x08	; 8
    20d6:	b0 f5       	brcc	.+108    	; 0x2144 <DIO_voidGetPinValue+0x74>
    20d8:	41 15       	cp	r20, r1
    20da:	51 05       	cpc	r21, r1
    20dc:	99 f1       	breq	.+102    	; 0x2144 <DIO_voidGetPinValue+0x74>
    20de:	81 30       	cpi	r24, 0x01	; 1
    20e0:	89 f0       	breq	.+34     	; 0x2104 <DIO_voidGetPinValue+0x34>
    20e2:	28 f0       	brcs	.+10     	; 0x20ee <DIO_voidGetPinValue+0x1e>
    20e4:	82 30       	cpi	r24, 0x02	; 2
    20e6:	c9 f0       	breq	.+50     	; 0x211a <DIO_voidGetPinValue+0x4a>
    20e8:	83 30       	cpi	r24, 0x03	; 3
    20ea:	11 f1       	breq	.+68     	; 0x2130 <DIO_voidGetPinValue+0x60>
    20ec:	08 95       	ret
    20ee:	89 b3       	in	r24, 0x19	; 25
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	02 c0       	rjmp	.+4      	; 0x20f8 <DIO_voidGetPinValue+0x28>
    20f4:	95 95       	asr	r25
    20f6:	87 95       	ror	r24
    20f8:	6a 95       	dec	r22
    20fa:	e2 f7       	brpl	.-8      	; 0x20f4 <DIO_voidGetPinValue+0x24>
    20fc:	81 70       	andi	r24, 0x01	; 1
    20fe:	fa 01       	movw	r30, r20
    2100:	80 83       	st	Z, r24
    2102:	08 95       	ret
    2104:	86 b3       	in	r24, 0x16	; 22
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	02 c0       	rjmp	.+4      	; 0x210e <DIO_voidGetPinValue+0x3e>
    210a:	95 95       	asr	r25
    210c:	87 95       	ror	r24
    210e:	6a 95       	dec	r22
    2110:	e2 f7       	brpl	.-8      	; 0x210a <DIO_voidGetPinValue+0x3a>
    2112:	81 70       	andi	r24, 0x01	; 1
    2114:	fa 01       	movw	r30, r20
    2116:	80 83       	st	Z, r24
    2118:	08 95       	ret
    211a:	83 b3       	in	r24, 0x13	; 19
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	02 c0       	rjmp	.+4      	; 0x2124 <DIO_voidGetPinValue+0x54>
    2120:	95 95       	asr	r25
    2122:	87 95       	ror	r24
    2124:	6a 95       	dec	r22
    2126:	e2 f7       	brpl	.-8      	; 0x2120 <DIO_voidGetPinValue+0x50>
    2128:	81 70       	andi	r24, 0x01	; 1
    212a:	fa 01       	movw	r30, r20
    212c:	80 83       	st	Z, r24
    212e:	08 95       	ret
    2130:	80 b3       	in	r24, 0x10	; 16
    2132:	90 e0       	ldi	r25, 0x00	; 0
    2134:	02 c0       	rjmp	.+4      	; 0x213a <DIO_voidGetPinValue+0x6a>
    2136:	95 95       	asr	r25
    2138:	87 95       	ror	r24
    213a:	6a 95       	dec	r22
    213c:	e2 f7       	brpl	.-8      	; 0x2136 <DIO_voidGetPinValue+0x66>
    213e:	81 70       	andi	r24, 0x01	; 1
    2140:	fa 01       	movw	r30, r20
    2142:	80 83       	st	Z, r24
    2144:	08 95       	ret

00002146 <DIO_voidActivePinInPullUpResistance>:
}


void DIO_voidActivePinInPullUpResistance(u8 copy_u8PortId, u8 copy_u8PinId)
{
	if((copy_u8PortId<4)&&(copy_u8PinId<8))
    2146:	84 30       	cpi	r24, 0x04	; 4
    2148:	a8 f5       	brcc	.+106    	; 0x21b4 <DIO_voidActivePinInPullUpResistance+0x6e>
    214a:	68 30       	cpi	r22, 0x08	; 8
    214c:	98 f5       	brcc	.+102    	; 0x21b4 <DIO_voidActivePinInPullUpResistance+0x6e>
	{
		switch(copy_u8PortId)
    214e:	81 30       	cpi	r24, 0x01	; 1
    2150:	89 f0       	breq	.+34     	; 0x2174 <DIO_voidActivePinInPullUpResistance+0x2e>
    2152:	28 f0       	brcs	.+10     	; 0x215e <DIO_voidActivePinInPullUpResistance+0x18>
    2154:	82 30       	cpi	r24, 0x02	; 2
    2156:	c9 f0       	breq	.+50     	; 0x218a <DIO_voidActivePinInPullUpResistance+0x44>
    2158:	83 30       	cpi	r24, 0x03	; 3
    215a:	11 f1       	breq	.+68     	; 0x21a0 <DIO_voidActivePinInPullUpResistance+0x5a>
    215c:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(PORTA_REG,copy_u8PinId);
    215e:	2b b3       	in	r18, 0x1b	; 27
    2160:	81 e0       	ldi	r24, 0x01	; 1
    2162:	90 e0       	ldi	r25, 0x00	; 0
    2164:	02 c0       	rjmp	.+4      	; 0x216a <DIO_voidActivePinInPullUpResistance+0x24>
    2166:	88 0f       	add	r24, r24
    2168:	99 1f       	adc	r25, r25
    216a:	6a 95       	dec	r22
    216c:	e2 f7       	brpl	.-8      	; 0x2166 <DIO_voidActivePinInPullUpResistance+0x20>
    216e:	82 2b       	or	r24, r18
    2170:	8b bb       	out	0x1b, r24	; 27
			break;
    2172:	08 95       	ret
			
			case DIO_PORTB:
			SET_BIT(PORTB_REG,copy_u8PinId);
    2174:	28 b3       	in	r18, 0x18	; 24
    2176:	81 e0       	ldi	r24, 0x01	; 1
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	02 c0       	rjmp	.+4      	; 0x2180 <DIO_voidActivePinInPullUpResistance+0x3a>
    217c:	88 0f       	add	r24, r24
    217e:	99 1f       	adc	r25, r25
    2180:	6a 95       	dec	r22
    2182:	e2 f7       	brpl	.-8      	; 0x217c <DIO_voidActivePinInPullUpResistance+0x36>
    2184:	82 2b       	or	r24, r18
    2186:	88 bb       	out	0x18, r24	; 24
			break;
    2188:	08 95       	ret
			
			case DIO_PORTC:
			SET_BIT(PORTC_REG,copy_u8PinId);
    218a:	25 b3       	in	r18, 0x15	; 21
    218c:	81 e0       	ldi	r24, 0x01	; 1
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	02 c0       	rjmp	.+4      	; 0x2196 <DIO_voidActivePinInPullUpResistance+0x50>
    2192:	88 0f       	add	r24, r24
    2194:	99 1f       	adc	r25, r25
    2196:	6a 95       	dec	r22
    2198:	e2 f7       	brpl	.-8      	; 0x2192 <DIO_voidActivePinInPullUpResistance+0x4c>
    219a:	82 2b       	or	r24, r18
    219c:	85 bb       	out	0x15, r24	; 21
			break;
    219e:	08 95       	ret
			
			case DIO_PORTD:
			SET_BIT(PORTD_REG,copy_u8PinId);
    21a0:	22 b3       	in	r18, 0x12	; 18
    21a2:	81 e0       	ldi	r24, 0x01	; 1
    21a4:	90 e0       	ldi	r25, 0x00	; 0
    21a6:	02 c0       	rjmp	.+4      	; 0x21ac <DIO_voidActivePinInPullUpResistance+0x66>
    21a8:	88 0f       	add	r24, r24
    21aa:	99 1f       	adc	r25, r25
    21ac:	6a 95       	dec	r22
    21ae:	e2 f7       	brpl	.-8      	; 0x21a8 <DIO_voidActivePinInPullUpResistance+0x62>
    21b0:	82 2b       	or	r24, r18
    21b2:	82 bb       	out	0x12, r24	; 18
    21b4:	08 95       	ret

000021b6 <GI_voidEnable>:
#include"GI_register.h"


void GI_voidEnable(void)
{
	SET_BIT(SREG_REG,I);
    21b6:	8f b7       	in	r24, 0x3f	; 63
    21b8:	80 68       	ori	r24, 0x80	; 128
    21ba:	8f bf       	out	0x3f, r24	; 63
    21bc:	08 95       	ret

000021be <PWM_voidInitChannel_1A>:


void PWM_voidInitChannel_1A(void)
{
	/*Waveform Generation Mode>>Fast PWM(channel A)*/
	SET_BIT(TCCR1B_REG, WGM13);
    21be:	8e b5       	in	r24, 0x2e	; 46
    21c0:	80 61       	ori	r24, 0x10	; 16
    21c2:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B_REG, WGM12);
    21c4:	8e b5       	in	r24, 0x2e	; 46
    21c6:	88 60       	ori	r24, 0x08	; 8
    21c8:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1A_REG, WGM11);
    21ca:	8f b5       	in	r24, 0x2f	; 47
    21cc:	82 60       	ori	r24, 0x02	; 2
    21ce:	8f bd       	out	0x2f, r24	; 47
	CLR_BIT(TCCR1A_REG, WGM10);
    21d0:	8f b5       	in	r24, 0x2f	; 47
    21d2:	8e 7f       	andi	r24, 0xFE	; 254
    21d4:	8f bd       	out	0x2f, r24	; 47
	
	/*Compare Match Output Mode>>Clear OC1A/OC1B on compare match*/
	SET_BIT(TCCR1A_REG,COM1A1);
    21d6:	8f b5       	in	r24, 0x2f	; 47
    21d8:	80 68       	ori	r24, 0x80	; 128
    21da:	8f bd       	out	0x2f, r24	; 47
	CLR_BIT(TCCR1A_REG,COM1A0);
    21dc:	8f b5       	in	r24, 0x2f	; 47
    21de:	8f 7b       	andi	r24, 0xBF	; 191
    21e0:	8f bd       	out	0x2f, r24	; 47
    21e2:	08 95       	ret

000021e4 <PWM_voidInitChannel_1B>:
}

void PWM_voidInitChannel_1B(void)
{
	/*Waveform Generation Mode>>Fast PWM(channel B)*/
	SET_BIT(TCCR1B_REG, WGM13);
    21e4:	8e b5       	in	r24, 0x2e	; 46
    21e6:	80 61       	ori	r24, 0x10	; 16
    21e8:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B_REG, WGM12);
    21ea:	8e b5       	in	r24, 0x2e	; 46
    21ec:	88 60       	ori	r24, 0x08	; 8
    21ee:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1A_REG, WGM11);
    21f0:	8f b5       	in	r24, 0x2f	; 47
    21f2:	82 60       	ori	r24, 0x02	; 2
    21f4:	8f bd       	out	0x2f, r24	; 47
	CLR_BIT(TCCR1A_REG, WGM10);
    21f6:	8f b5       	in	r24, 0x2f	; 47
    21f8:	8e 7f       	andi	r24, 0xFE	; 254
    21fa:	8f bd       	out	0x2f, r24	; 47
	
	/*Compare Match Output Mode>>Clear OC1A/OC1B on compare match*/
	SET_BIT(TCCR1A_REG,COM1B1);
    21fc:	8f b5       	in	r24, 0x2f	; 47
    21fe:	80 62       	ori	r24, 0x20	; 32
    2200:	8f bd       	out	0x2f, r24	; 47
	CLR_BIT(TCCR1A_REG,COM1B0);
    2202:	8f b5       	in	r24, 0x2f	; 47
    2204:	8f 7e       	andi	r24, 0xEF	; 239
    2206:	8f bd       	out	0x2f, r24	; 47
    2208:	08 95       	ret

0000220a <PWM_voidGenerateChannel_1A>:
}


void PWM_voidGenerateChannel_1A(u16 copy_u16Frequency_hz,f32 copy_f32DutyCycle)
{
    220a:	cf 92       	push	r12
    220c:	df 92       	push	r13
    220e:	ef 92       	push	r14
    2210:	ff 92       	push	r15
    2212:	cf 93       	push	r28
    2214:	df 93       	push	r29
    2216:	ec 01       	movw	r28, r24
    2218:	6a 01       	movw	r12, r20
    221a:	7b 01       	movw	r14, r22
	if(copy_f32DutyCycle<=100)
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	48 ec       	ldi	r20, 0xC8	; 200
    2222:	52 e4       	ldi	r21, 0x42	; 66
    2224:	c7 01       	movw	r24, r14
    2226:	b6 01       	movw	r22, r12
    2228:	0e 94 76 13 	call	0x26ec	; 0x26ec <__cmpsf2>
    222c:	18 16       	cp	r1, r24
    222e:	94 f1       	brlt	.+100    	; 0x2294 <PWM_voidGenerateChannel_1A+0x8a>
	{
		/*Set freq by clkI/O/64 (From prescaler)*/
		ICR1_REG=((1000000UL/copy_u16Frequency_hz)/4)-1;
    2230:	9e 01       	movw	r18, r28
    2232:	40 e0       	ldi	r20, 0x00	; 0
    2234:	50 e0       	ldi	r21, 0x00	; 0
    2236:	60 e9       	ldi	r22, 0x90	; 144
    2238:	70 ed       	ldi	r23, 0xD0	; 208
    223a:	83 e0       	ldi	r24, 0x03	; 3
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <__udivmodsi4>
    2242:	21 50       	subi	r18, 0x01	; 1
    2244:	31 09       	sbc	r19, r1
    2246:	37 bd       	out	0x27, r19	; 39
    2248:	26 bd       	out	0x26, r18	; 38
		
		/*Calculating Duty for non inverting*/
		OCR1A_REG=((copy_f32DutyCycle*(ICR1_REG+1))/100)-1;
    224a:	66 b5       	in	r22, 0x26	; 38
    224c:	77 b5       	in	r23, 0x27	; 39
    224e:	6f 5f       	subi	r22, 0xFF	; 255
    2250:	7f 4f       	sbci	r23, 0xFF	; 255
    2252:	80 e0       	ldi	r24, 0x00	; 0
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
    225a:	a7 01       	movw	r20, r14
    225c:	96 01       	movw	r18, r12
    225e:	0e 94 ce 14 	call	0x299c	; 0x299c <__mulsf3>
    2262:	20 e0       	ldi	r18, 0x00	; 0
    2264:	30 e0       	ldi	r19, 0x00	; 0
    2266:	48 ec       	ldi	r20, 0xC8	; 200
    2268:	52 e4       	ldi	r21, 0x42	; 66
    226a:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__divsf3>
    226e:	20 e0       	ldi	r18, 0x00	; 0
    2270:	30 e0       	ldi	r19, 0x00	; 0
    2272:	40 e8       	ldi	r20, 0x80	; 128
    2274:	5f e3       	ldi	r21, 0x3F	; 63
    2276:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    227a:	0e 94 ed 13 	call	0x27da	; 0x27da <__fixunssfsi>
    227e:	7b bd       	out	0x2b, r23	; 43
    2280:	6a bd       	out	0x2a, r22	; 42
		
		/*Clock Select>>clk/64(From prescaler)*/
		SET_BIT(TCCR1B_REG,CS10);
    2282:	8e b5       	in	r24, 0x2e	; 46
    2284:	81 60       	ori	r24, 0x01	; 1
    2286:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TCCR1B_REG,CS11);
    2288:	8e b5       	in	r24, 0x2e	; 46
    228a:	82 60       	ori	r24, 0x02	; 2
    228c:	8e bd       	out	0x2e, r24	; 46
		CLR_BIT(TCCR1B_REG,CS12);
    228e:	8e b5       	in	r24, 0x2e	; 46
    2290:	8b 7f       	andi	r24, 0xFB	; 251
    2292:	8e bd       	out	0x2e, r24	; 46
	else
	{
		//error 
	}
	
}
    2294:	df 91       	pop	r29
    2296:	cf 91       	pop	r28
    2298:	ff 90       	pop	r15
    229a:	ef 90       	pop	r14
    229c:	df 90       	pop	r13
    229e:	cf 90       	pop	r12
    22a0:	08 95       	ret

000022a2 <PWM_voidGenerateChannel_1B>:



void PWM_voidGenerateChannel_1B(u16 copy_u16Frequency_hz,f32 copy_f32DutyCycle)
{
    22a2:	cf 92       	push	r12
    22a4:	df 92       	push	r13
    22a6:	ef 92       	push	r14
    22a8:	ff 92       	push	r15
    22aa:	cf 93       	push	r28
    22ac:	df 93       	push	r29
    22ae:	ec 01       	movw	r28, r24
    22b0:	6a 01       	movw	r12, r20
    22b2:	7b 01       	movw	r14, r22
	if(copy_f32DutyCycle<=100)
    22b4:	20 e0       	ldi	r18, 0x00	; 0
    22b6:	30 e0       	ldi	r19, 0x00	; 0
    22b8:	48 ec       	ldi	r20, 0xC8	; 200
    22ba:	52 e4       	ldi	r21, 0x42	; 66
    22bc:	c7 01       	movw	r24, r14
    22be:	b6 01       	movw	r22, r12
    22c0:	0e 94 76 13 	call	0x26ec	; 0x26ec <__cmpsf2>
    22c4:	18 16       	cp	r1, r24
    22c6:	94 f1       	brlt	.+100    	; 0x232c <PWM_voidGenerateChannel_1B+0x8a>
	{
		/*Set freq by clkI/O/64 (From prescaler)*/
		ICR1_REG=((1000000UL/copy_u16Frequency_hz)/4)-1;
    22c8:	9e 01       	movw	r18, r28
    22ca:	40 e0       	ldi	r20, 0x00	; 0
    22cc:	50 e0       	ldi	r21, 0x00	; 0
    22ce:	60 e9       	ldi	r22, 0x90	; 144
    22d0:	70 ed       	ldi	r23, 0xD0	; 208
    22d2:	83 e0       	ldi	r24, 0x03	; 3
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <__udivmodsi4>
    22da:	21 50       	subi	r18, 0x01	; 1
    22dc:	31 09       	sbc	r19, r1
    22de:	37 bd       	out	0x27, r19	; 39
    22e0:	26 bd       	out	0x26, r18	; 38
		
		/*Calculating Duty for non inverting*/
		OCR1B_REG=((copy_f32DutyCycle*(ICR1_REG+1))/100)-1;
    22e2:	66 b5       	in	r22, 0x26	; 38
    22e4:	77 b5       	in	r23, 0x27	; 39
    22e6:	6f 5f       	subi	r22, 0xFF	; 255
    22e8:	7f 4f       	sbci	r23, 0xFF	; 255
    22ea:	80 e0       	ldi	r24, 0x00	; 0
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	0e 94 1c 14 	call	0x2838	; 0x2838 <__floatunsisf>
    22f2:	a7 01       	movw	r20, r14
    22f4:	96 01       	movw	r18, r12
    22f6:	0e 94 ce 14 	call	0x299c	; 0x299c <__mulsf3>
    22fa:	20 e0       	ldi	r18, 0x00	; 0
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	48 ec       	ldi	r20, 0xC8	; 200
    2300:	52 e4       	ldi	r21, 0x42	; 66
    2302:	0e 94 7b 13 	call	0x26f6	; 0x26f6 <__divsf3>
    2306:	20 e0       	ldi	r18, 0x00	; 0
    2308:	30 e0       	ldi	r19, 0x00	; 0
    230a:	40 e8       	ldi	r20, 0x80	; 128
    230c:	5f e3       	ldi	r21, 0x3F	; 63
    230e:	0e 94 09 13 	call	0x2612	; 0x2612 <__subsf3>
    2312:	0e 94 ed 13 	call	0x27da	; 0x27da <__fixunssfsi>
    2316:	79 bd       	out	0x29, r23	; 41
    2318:	68 bd       	out	0x28, r22	; 40
		
		/*Clock Select>>clk/64(From prescaler)*/
		SET_BIT(TCCR1B_REG,CS10);
    231a:	8e b5       	in	r24, 0x2e	; 46
    231c:	81 60       	ori	r24, 0x01	; 1
    231e:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TCCR1B_REG,CS11);
    2320:	8e b5       	in	r24, 0x2e	; 46
    2322:	82 60       	ori	r24, 0x02	; 2
    2324:	8e bd       	out	0x2e, r24	; 46
		CLR_BIT(TCCR1B_REG,CS12);
    2326:	8e b5       	in	r24, 0x2e	; 46
    2328:	8b 7f       	andi	r24, 0xFB	; 251
    232a:	8e bd       	out	0x2e, r24	; 46
	else
	{
		//error 
	}
	
    232c:	df 91       	pop	r29
    232e:	cf 91       	pop	r28
    2330:	ff 90       	pop	r15
    2332:	ef 90       	pop	r14
    2334:	df 90       	pop	r13
    2336:	cf 90       	pop	r12
    2338:	08 95       	ret

0000233a <TMR0_voidInit>:
void TMR0_SetCallBackOVF(void (*copy_pFunAction)(void))
{
	if(copy_pFunAction != NULL)
	{
		
		PRV_pFunCallBackOVF=copy_pFunAction;
    233a:	83 b7       	in	r24, 0x33	; 51
    233c:	8f 7b       	andi	r24, 0xBF	; 191
    233e:	83 bf       	out	0x33, r24	; 51
    2340:	83 b7       	in	r24, 0x33	; 51
    2342:	88 60       	ori	r24, 0x08	; 8
    2344:	83 bf       	out	0x33, r24	; 51
    2346:	83 b7       	in	r24, 0x33	; 51
    2348:	8f 7e       	andi	r24, 0xEF	; 239
    234a:	83 bf       	out	0x33, r24	; 51
    234c:	83 b7       	in	r24, 0x33	; 51
    234e:	8f 7d       	andi	r24, 0xDF	; 223
    2350:	83 bf       	out	0x33, r24	; 51
    2352:	89 b7       	in	r24, 0x39	; 57
    2354:	82 60       	ori	r24, 0x02	; 2
    2356:	89 bf       	out	0x39, r24	; 57
    2358:	89 ef       	ldi	r24, 0xF9	; 249
    235a:	8c bf       	out	0x3c, r24	; 60
    235c:	08 95       	ret

0000235e <TMR0_voidStart>:
    235e:	83 b7       	in	r24, 0x33	; 51
    2360:	81 60       	ori	r24, 0x01	; 1
    2362:	83 bf       	out	0x33, r24	; 51
    2364:	83 b7       	in	r24, 0x33	; 51
    2366:	82 60       	ori	r24, 0x02	; 2
    2368:	83 bf       	out	0x33, r24	; 51
    236a:	83 b7       	in	r24, 0x33	; 51
    236c:	8b 7f       	andi	r24, 0xFB	; 251
    236e:	83 bf       	out	0x33, r24	; 51
    2370:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <local_u16Counter+0x1>
    2374:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <local_u16Counter>
    2378:	08 95       	ret

0000237a <TMR0_voidStop>:
    237a:	83 b7       	in	r24, 0x33	; 51
    237c:	8e 7f       	andi	r24, 0xFE	; 254
    237e:	83 bf       	out	0x33, r24	; 51
    2380:	83 b7       	in	r24, 0x33	; 51
    2382:	8d 7f       	andi	r24, 0xFD	; 253
    2384:	83 bf       	out	0x33, r24	; 51
    2386:	83 b7       	in	r24, 0x33	; 51
    2388:	8b 7f       	andi	r24, 0xFB	; 251
    238a:	83 bf       	out	0x33, r24	; 51
    238c:	08 95       	ret

0000238e <TMR0_SetCallBackCTC>:
	}
}

void TMR0_SetCallBackCTC(void (*copy_pFunAction)(void))
{
	if(copy_pFunAction != NULL)
    238e:	00 97       	sbiw	r24, 0x00	; 0
    2390:	21 f0       	breq	.+8      	; 0x239a <TMR0_SetCallBackCTC+0xc>
	{
		
		PRV_pFunCallBackCTC=copy_pFunAction;
    2392:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <PRV_pFunCallBackCTC+0x1>
    2396:	80 93 c1 03 	sts	0x03C1, r24	; 0x8003c1 <PRV_pFunCallBackCTC>
    239a:	08 95       	ret

0000239c <TMR0clear_flag>:
}

void TMR0clear_flag(void)
{
	// SET_BIT(TIFR_REG,OCF0);
	TIFR_REG |= (1 << OCF0); 
    239c:	88 b7       	in	r24, 0x38	; 56
    239e:	82 60       	ori	r24, 0x02	; 2
    23a0:	88 bf       	out	0x38, r24	; 56
	SET_BIT(TIFR_REG,TOV0);
    23a2:	88 b7       	in	r24, 0x38	; 56
    23a4:	81 60       	ori	r24, 0x01	; 1
    23a6:	88 bf       	out	0x38, r24	; 56
    23a8:	08 95       	ret

000023aa <__vector_11>:



void __vector_11(void)__attribute__((signal));
void __vector_11(void)
{
    23aa:	1f 92       	push	r1
    23ac:	0f 92       	push	r0
    23ae:	0f b6       	in	r0, 0x3f	; 63
    23b0:	0f 92       	push	r0
    23b2:	11 24       	eor	r1, r1
    23b4:	2f 93       	push	r18
    23b6:	3f 93       	push	r19
    23b8:	4f 93       	push	r20
    23ba:	5f 93       	push	r21
    23bc:	6f 93       	push	r22
    23be:	7f 93       	push	r23
    23c0:	8f 93       	push	r24
    23c2:	9f 93       	push	r25
    23c4:	af 93       	push	r26
    23c6:	bf 93       	push	r27
    23c8:	ef 93       	push	r30
    23ca:	ff 93       	push	r31
	
	
	local_u16Counter++;
    23cc:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <local_u16Counter>
    23d0:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <local_u16Counter+0x1>
    23d4:	01 96       	adiw	r24, 0x01	; 1
    23d6:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <local_u16Counter+0x1>
    23da:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <local_u16Counter>
	
	if(local_u16Counter==TMR0_OVERFLOW_COUNTER)
    23de:	88 3e       	cpi	r24, 0xE8	; 232
    23e0:	93 40       	sbci	r25, 0x03	; 3
    23e2:	69 f4       	brne	.+26     	; 0x23fe <__vector_11+0x54>
	{
		/*put preload value in timer register*/
		TCNT0_REG=TMR0_PRELOAD_VALUE;
    23e4:	81 e7       	ldi	r24, 0x71	; 113
    23e6:	82 bf       	out	0x32, r24	; 50
		
		/*CLR counter*/
		local_u16Counter=0;
    23e8:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <local_u16Counter+0x1>
    23ec:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <local_u16Counter>
		
		if(PRV_pFunCallBackOVF != NULL)
    23f0:	e0 91 c3 03 	lds	r30, 0x03C3	; 0x8003c3 <PRV_pFunCallBackOVF>
    23f4:	f0 91 c4 03 	lds	r31, 0x03C4	; 0x8003c4 <PRV_pFunCallBackOVF+0x1>
    23f8:	30 97       	sbiw	r30, 0x00	; 0
    23fa:	09 f0       	breq	.+2      	; 0x23fe <__vector_11+0x54>
		{
			/*execute action*/
			PRV_pFunCallBackOVF();
    23fc:	09 95       	icall
		else
		{
				//error state
		}
	}
}
    23fe:	ff 91       	pop	r31
    2400:	ef 91       	pop	r30
    2402:	bf 91       	pop	r27
    2404:	af 91       	pop	r26
    2406:	9f 91       	pop	r25
    2408:	8f 91       	pop	r24
    240a:	7f 91       	pop	r23
    240c:	6f 91       	pop	r22
    240e:	5f 91       	pop	r21
    2410:	4f 91       	pop	r20
    2412:	3f 91       	pop	r19
    2414:	2f 91       	pop	r18
    2416:	0f 90       	pop	r0
    2418:	0f be       	out	0x3f, r0	; 63
    241a:	0f 90       	pop	r0
    241c:	1f 90       	pop	r1
    241e:	18 95       	reti

00002420 <__vector_10>:

void __vector_10(void)__attribute__((signal));
void __vector_10(void)
{
    2420:	1f 92       	push	r1
    2422:	0f 92       	push	r0
    2424:	0f b6       	in	r0, 0x3f	; 63
    2426:	0f 92       	push	r0
    2428:	11 24       	eor	r1, r1
    242a:	2f 93       	push	r18
    242c:	3f 93       	push	r19
    242e:	4f 93       	push	r20
    2430:	5f 93       	push	r21
    2432:	6f 93       	push	r22
    2434:	7f 93       	push	r23
    2436:	8f 93       	push	r24
    2438:	9f 93       	push	r25
    243a:	af 93       	push	r26
    243c:	bf 93       	push	r27
    243e:	ef 93       	push	r30
    2440:	ff 93       	push	r31
	

	
	local_u16Counter++;
    2442:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <local_u16Counter>
    2446:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <local_u16Counter+0x1>
    244a:	01 96       	adiw	r24, 0x01	; 1
    244c:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <local_u16Counter+0x1>
    2450:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <local_u16Counter>
	
	if(local_u16Counter==TMR0_CTC_COUNTER)
    2454:	88 38       	cpi	r24, 0x88	; 136
    2456:	93 41       	sbci	r25, 0x13	; 19
    2458:	69 f4       	brne	.+26     	; 0x2474 <__vector_10+0x54>
	{
		
		/*CLR counter*/
		local_u16Counter=0;
    245a:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <local_u16Counter+0x1>
    245e:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <local_u16Counter>
		
		if(PRV_pFunCallBackCTC != NULL)
    2462:	e0 91 c1 03 	lds	r30, 0x03C1	; 0x8003c1 <PRV_pFunCallBackCTC>
    2466:	f0 91 c2 03 	lds	r31, 0x03C2	; 0x8003c2 <PRV_pFunCallBackCTC+0x1>
    246a:	30 97       	sbiw	r30, 0x00	; 0
    246c:	19 f0       	breq	.+6      	; 0x2474 <__vector_10+0x54>
		{
			/*execute action*/
			PRV_pFunCallBackCTC();
    246e:	09 95       	icall
			TMR0clear_flag();
    2470:	0e 94 ce 11 	call	0x239c	; 0x239c <TMR0clear_flag>
		{
				//error state
		}
	}
	
    2474:	ff 91       	pop	r31
    2476:	ef 91       	pop	r30
    2478:	bf 91       	pop	r27
    247a:	af 91       	pop	r26
    247c:	9f 91       	pop	r25
    247e:	8f 91       	pop	r24
    2480:	7f 91       	pop	r23
    2482:	6f 91       	pop	r22
    2484:	5f 91       	pop	r21
    2486:	4f 91       	pop	r20
    2488:	3f 91       	pop	r19
    248a:	2f 91       	pop	r18
    248c:	0f 90       	pop	r0
    248e:	0f be       	out	0x3f, r0	; 63
    2490:	0f 90       	pop	r0
    2492:	1f 90       	pop	r1
    2494:	18 95       	reti

00002496 <TWI_voidInitMaster>:



void TWI_voidInitMaster(void)
{
	TWBR_REG=12;
    2496:	8c e0       	ldi	r24, 0x0C	; 12
    2498:	80 b9       	out	0x00, r24	; 0
	CLR_BIT(TWSR_REG,TWPS1);
    249a:	81 b1       	in	r24, 0x01	; 1
    249c:	8d 7f       	andi	r24, 0xFD	; 253
    249e:	81 b9       	out	0x01, r24	; 1
	CLR_BIT(TWSR_REG,TWPS0);
    24a0:	81 b1       	in	r24, 0x01	; 1
    24a2:	8e 7f       	andi	r24, 0xFE	; 254
    24a4:	81 b9       	out	0x01, r24	; 1
	
	SET_BIT(TWCR_REG,TWEN);
    24a6:	86 b7       	in	r24, 0x36	; 54
    24a8:	84 60       	ori	r24, 0x04	; 4
    24aa:	86 bf       	out	0x36, r24	; 54
    24ac:	08 95       	ret

000024ae <TWI_voidSendStartCondition>:



void TWI_voidSendStartCondition(void)
{
	SET_BIT(TWCR_REG,TWSTA);
    24ae:	86 b7       	in	r24, 0x36	; 54
    24b0:	80 62       	ori	r24, 0x20	; 32
    24b2:	86 bf       	out	0x36, r24	; 54
	
	SET_BIT(TWCR_REG,TWINT);
    24b4:	86 b7       	in	r24, 0x36	; 54
    24b6:	80 68       	ori	r24, 0x80	; 128
    24b8:	86 bf       	out	0x36, r24	; 54
	
	while(0==GET_BIT(TWCR_REG,TWINT));
    24ba:	06 b6       	in	r0, 0x36	; 54
    24bc:	07 fe       	sbrs	r0, 7
    24be:	fd cf       	rjmp	.-6      	; 0x24ba <TWI_voidSendStartCondition+0xc>
	
	while(TWI_STATUS_VALUE != TWI_START_CONDITION_ACK);
    24c0:	81 b1       	in	r24, 0x01	; 1
    24c2:	88 7f       	andi	r24, 0xF8	; 248
    24c4:	88 30       	cpi	r24, 0x08	; 8
    24c6:	e1 f7       	brne	.-8      	; 0x24c0 <TWI_voidSendStartCondition+0x12>
}
    24c8:	08 95       	ret

000024ca <TWI_voidSendRepeatedStartCondition>:



void TWI_voidSendRepeatedStartCondition(void)
{
	SET_BIT(TWCR_REG,TWSTA);
    24ca:	86 b7       	in	r24, 0x36	; 54
    24cc:	80 62       	ori	r24, 0x20	; 32
    24ce:	86 bf       	out	0x36, r24	; 54
	
	SET_BIT(TWCR_REG,TWINT);
    24d0:	86 b7       	in	r24, 0x36	; 54
    24d2:	80 68       	ori	r24, 0x80	; 128
    24d4:	86 bf       	out	0x36, r24	; 54
	
	while(0==GET_BIT(TWCR_REG,TWINT));
    24d6:	06 b6       	in	r0, 0x36	; 54
    24d8:	07 fe       	sbrs	r0, 7
    24da:	fd cf       	rjmp	.-6      	; 0x24d6 <TWI_voidSendRepeatedStartCondition+0xc>
	
	while(TWI_STATUS_VALUE != TWI_REP_START_CONDITION_ACK);
    24dc:	81 b1       	in	r24, 0x01	; 1
    24de:	88 7f       	andi	r24, 0xF8	; 248
    24e0:	80 31       	cpi	r24, 0x10	; 16
    24e2:	e1 f7       	brne	.-8      	; 0x24dc <TWI_voidSendRepeatedStartCondition+0x12>
}
    24e4:	08 95       	ret

000024e6 <TWI_voidSendStopCondition>:



void TWI_voidSendStopCondition(void)
{
	SET_BIT(TWCR_REG, TWSTO);
    24e6:	86 b7       	in	r24, 0x36	; 54
    24e8:	80 61       	ori	r24, 0x10	; 16
    24ea:	86 bf       	out	0x36, r24	; 54
	
	SET_BIT(TWCR_REG,TWINT);
    24ec:	86 b7       	in	r24, 0x36	; 54
    24ee:	80 68       	ori	r24, 0x80	; 128
    24f0:	86 bf       	out	0x36, r24	; 54
    24f2:	08 95       	ret

000024f4 <TWI_voidSendSlaveAddWithWrite>:



void TWI_voidSendSlaveAddWithWrite(u8 copy_u8SlaveAdd)
{
	if(copy_u8SlaveAdd<128)
    24f4:	88 23       	and	r24, r24
    24f6:	94 f0       	brlt	.+36     	; 0x251c <TWI_voidSendSlaveAddWithWrite+0x28>
	{
		TWDR_REG=(copy_u8SlaveAdd<<1);
    24f8:	88 0f       	add	r24, r24
    24fa:	83 b9       	out	0x03, r24	; 3
		CLR_BIT(TWDR_REG,TWD0);
    24fc:	83 b1       	in	r24, 0x03	; 3
    24fe:	8e 7f       	andi	r24, 0xFE	; 254
    2500:	83 b9       	out	0x03, r24	; 3
		
		CLR_BIT(TWCR_REG,TWSTA);
    2502:	86 b7       	in	r24, 0x36	; 54
    2504:	8f 7d       	andi	r24, 0xDF	; 223
    2506:	86 bf       	out	0x36, r24	; 54
		
		/*clr flag*/
		SET_BIT(TWCR_REG,TWINT);
    2508:	86 b7       	in	r24, 0x36	; 54
    250a:	80 68       	ori	r24, 0x80	; 128
    250c:	86 bf       	out	0x36, r24	; 54
		
		while(0==GET_BIT(TWCR_REG,TWINT));
    250e:	06 b6       	in	r0, 0x36	; 54
    2510:	07 fe       	sbrs	r0, 7
    2512:	fd cf       	rjmp	.-6      	; 0x250e <TWI_voidSendSlaveAddWithWrite+0x1a>
		
		while(TWI_STATUS_VALUE != TWI_SLAVE_ADDRESS_WRITE_ACK);
    2514:	81 b1       	in	r24, 0x01	; 1
    2516:	88 7f       	andi	r24, 0xF8	; 248
    2518:	88 31       	cpi	r24, 0x18	; 24
    251a:	e1 f7       	brne	.-8      	; 0x2514 <TWI_voidSendSlaveAddWithWrite+0x20>
    251c:	08 95       	ret

0000251e <TWI_voidSendSlaveAddWithRead>:
	}
}

void TWI_voidSendSlaveAddWithRead(u8 copy_u8SlaveAdd)
{
	if(copy_u8SlaveAdd<128)
    251e:	88 23       	and	r24, r24
    2520:	94 f0       	brlt	.+36     	; 0x2546 <TWI_voidSendSlaveAddWithRead+0x28>
	{
		TWDR_REG=(copy_u8SlaveAdd<<1);
    2522:	88 0f       	add	r24, r24
    2524:	83 b9       	out	0x03, r24	; 3
		SET_BIT(TWDR_REG,TWD0);
    2526:	83 b1       	in	r24, 0x03	; 3
    2528:	81 60       	ori	r24, 0x01	; 1
    252a:	83 b9       	out	0x03, r24	; 3
		
		CLR_BIT(TWCR_REG,TWSTA);
    252c:	86 b7       	in	r24, 0x36	; 54
    252e:	8f 7d       	andi	r24, 0xDF	; 223
    2530:	86 bf       	out	0x36, r24	; 54
		
		/*clr flag*/
		SET_BIT(TWCR_REG,TWINT);
    2532:	86 b7       	in	r24, 0x36	; 54
    2534:	80 68       	ori	r24, 0x80	; 128
    2536:	86 bf       	out	0x36, r24	; 54
		
		while(0==GET_BIT(TWCR_REG,TWINT));
    2538:	06 b6       	in	r0, 0x36	; 54
    253a:	07 fe       	sbrs	r0, 7
    253c:	fd cf       	rjmp	.-6      	; 0x2538 <TWI_voidSendSlaveAddWithRead+0x1a>
		
		while(TWI_STATUS_VALUE != TWI_SLAVE_ADDRESS_READ_ACK);
    253e:	81 b1       	in	r24, 0x01	; 1
    2540:	88 7f       	andi	r24, 0xF8	; 248
    2542:	80 34       	cpi	r24, 0x40	; 64
    2544:	e1 f7       	brne	.-8      	; 0x253e <TWI_voidSendSlaveAddWithRead+0x20>
    2546:	08 95       	ret

00002548 <TWI_voidTransmitMasterDataByte>:



void TWI_voidTransmitMasterDataByte(u8 copy_u8TxData)
{
	TWDR_REG=copy_u8TxData;
    2548:	83 b9       	out	0x03, r24	; 3
	
	/*clr flag*/
	SET_BIT(TWCR_REG,TWINT);
    254a:	86 b7       	in	r24, 0x36	; 54
    254c:	80 68       	ori	r24, 0x80	; 128
    254e:	86 bf       	out	0x36, r24	; 54
	
	while(0==GET_BIT(TWCR_REG,TWINT));
    2550:	06 b6       	in	r0, 0x36	; 54
    2552:	07 fe       	sbrs	r0, 7
    2554:	fd cf       	rjmp	.-6      	; 0x2550 <TWI_voidTransmitMasterDataByte+0x8>
		
	while(TWI_STATUS_VALUE != TWI_MATER_DATA_TRANSMIT_ACK);
    2556:	81 b1       	in	r24, 0x01	; 1
    2558:	88 7f       	andi	r24, 0xF8	; 248
    255a:	88 32       	cpi	r24, 0x28	; 40
    255c:	e1 f7       	brne	.-8      	; 0x2556 <TWI_voidTransmitMasterDataByte+0xe>
}
    255e:	08 95       	ret

00002560 <TWI_voidRecieveMasterDataByteWithAch>:




void TWI_voidRecieveMasterDataByteWithAch(u8* copy_pu8RxData)
{
    2560:	fc 01       	movw	r30, r24
	if(copy_pu8RxData!=NULL)
    2562:	89 2b       	or	r24, r25
    2564:	91 f0       	breq	.+36     	; 0x258a <TWI_voidRecieveMasterDataByteWithAch+0x2a>
	{
		SET_BIT(TWCR_REG,TWEA);
    2566:	96 b7       	in	r25, 0x36	; 54
    2568:	90 64       	ori	r25, 0x40	; 64
    256a:	96 bf       	out	0x36, r25	; 54
		
		/*clr flag*/
		SET_BIT(TWCR_REG,TWINT);
    256c:	96 b7       	in	r25, 0x36	; 54
    256e:	90 68       	ori	r25, 0x80	; 128
    2570:	96 bf       	out	0x36, r25	; 54
		
		while(0==GET_BIT(TWCR_REG,TWINT));
    2572:	06 b6       	in	r0, 0x36	; 54
    2574:	07 fe       	sbrs	r0, 7
    2576:	fd cf       	rjmp	.-6      	; 0x2572 <TWI_voidRecieveMasterDataByteWithAch+0x12>
		
		while(TWI_STATUS_VALUE != TWI_MATER_DATA_RECIEVE_ACK);
    2578:	91 b1       	in	r25, 0x01	; 1
    257a:	98 7f       	andi	r25, 0xF8	; 248
    257c:	90 35       	cpi	r25, 0x50	; 80
    257e:	e1 f7       	brne	.-8      	; 0x2578 <TWI_voidRecieveMasterDataByteWithAch+0x18>
		
		*copy_pu8RxData=TWDR_REG;
    2580:	83 b1       	in	r24, 0x03	; 3
    2582:	80 83       	st	Z, r24
		
		CLR_BIT(TWCR_REG,TWEA);
    2584:	86 b7       	in	r24, 0x36	; 54
    2586:	8f 7b       	andi	r24, 0xBF	; 191
    2588:	86 bf       	out	0x36, r24	; 54
    258a:	08 95       	ret

0000258c <TWI_voidRecieveMasterDataByteWithNAch>:




void TWI_voidRecieveMasterDataByteWithNAch(u8* copy_pu8RxData)
{
    258c:	fc 01       	movw	r30, r24
	if(copy_pu8RxData!=NULL)
    258e:	89 2b       	or	r24, r25
    2590:	61 f0       	breq	.+24     	; 0x25aa <TWI_voidRecieveMasterDataByteWithNAch+0x1e>
	{
		
		
		
		/*clr flag*/
		SET_BIT(TWCR_REG,TWINT);
    2592:	96 b7       	in	r25, 0x36	; 54
    2594:	90 68       	ori	r25, 0x80	; 128
    2596:	96 bf       	out	0x36, r25	; 54
		
		while(0==GET_BIT(TWCR_REG,TWINT));
    2598:	06 b6       	in	r0, 0x36	; 54
    259a:	07 fe       	sbrs	r0, 7
    259c:	fd cf       	rjmp	.-6      	; 0x2598 <TWI_voidRecieveMasterDataByteWithNAch+0xc>
		
		while(TWI_STATUS_VALUE != TWI_MATER_DATA_RECIEVE_NACK);
    259e:	91 b1       	in	r25, 0x01	; 1
    25a0:	98 7f       	andi	r25, 0xF8	; 248
    25a2:	98 35       	cpi	r25, 0x58	; 88
    25a4:	e1 f7       	brne	.-8      	; 0x259e <TWI_voidRecieveMasterDataByteWithNAch+0x12>
		
		*copy_pu8RxData=TWDR_REG;
    25a6:	83 b1       	in	r24, 0x03	; 3
    25a8:	80 83       	st	Z, r24
    25aa:	08 95       	ret

000025ac <UART_voidInit>:


void UART_voidInit(void)
{
	/*Double the USART Transmission Speed>>Disable*/
	CLR_BIT(UCSRA_REG,U2X);
    25ac:	8b b1       	in	r24, 0x0b	; 11
    25ae:	8d 7f       	andi	r24, 0xFD	; 253
    25b0:	8b b9       	out	0x0b, r24	; 11
	
	/*USART Baud Rate Register>> set buadrate to 9600 when using 16UL clock & dis double speed*/
	UBRRL_REG=103;
    25b2:	87 e6       	ldi	r24, 0x67	; 103
    25b4:	89 b9       	out	0x09, r24	; 9
	
	/*Stop Bit Select>>1-bit*/
	CLR_BIT(Local_u8InitVar,USBS);
	
	/*Character Size(Data size)>>8-bit*/
	CLR_BIT(UCSRB_REG,UCSZ2);
    25b6:	8a b1       	in	r24, 0x0a	; 10
    25b8:	8b 7f       	andi	r24, 0xFB	; 251
    25ba:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(Local_u8InitVar,UCSZ0);
	
	/*Clock Polarity>>Disable*/
	CLR_BIT(Local_u8InitVar,UCPOL);
	
	UCSRC_REG=Local_u8InitVar;
    25bc:	86 e8       	ldi	r24, 0x86	; 134
    25be:	80 bd       	out	0x20, r24	; 32
	
	/*Receiver Enable>>Enable*/
	SET_BIT(UCSRB_REG,RXEN);
    25c0:	8a b1       	in	r24, 0x0a	; 10
    25c2:	80 61       	ori	r24, 0x10	; 16
    25c4:	8a b9       	out	0x0a, r24	; 10
	
	/*Transmitter Enable>>Enable*/
	SET_BIT(UCSRB_REG,TXEN);
    25c6:	8a b1       	in	r24, 0x0a	; 10
    25c8:	88 60       	ori	r24, 0x08	; 8
    25ca:	8a b9       	out	0x0a, r24	; 10
    25cc:	08 95       	ret

000025ce <UART_voidTxChar>:


void UART_voidTxChar(u8 copy_u8TxData)
{
	/*write data to data register*/
	UDR_REG=copy_u8TxData;
    25ce:	8c b9       	out	0x0c, r24	; 12
	
	/*busy wait for data moved from data register to shift register*/
	while(0==GET_BIT(UCSRA_REG,UDRE));
    25d0:	5d 9b       	sbis	0x0b, 5	; 11
    25d2:	fe cf       	rjmp	.-4      	; 0x25d0 <UART_voidTxChar+0x2>
	
}
    25d4:	08 95       	ret

000025d6 <UART_voidRxChar>:



void UART_voidRxChar(u8* copy_pu8RxData)
{
	if(copy_pu8RxData!=NULL)
    25d6:	00 97       	sbiw	r24, 0x00	; 0
    25d8:	29 f0       	breq	.+10     	; 0x25e4 <UART_voidRxChar+0xe>
	{
		/*busy wait for unread data in data register*/
		while(0==GET_BIT(UCSRA_REG,RXC));
    25da:	5f 9b       	sbis	0x0b, 7	; 11
    25dc:	fe cf       	rjmp	.-4      	; 0x25da <UART_voidRxChar+0x4>
		
		/*Read data to data register*/
		*copy_pu8RxData=UDR_REG;
    25de:	2c b1       	in	r18, 0x0c	; 12
    25e0:	fc 01       	movw	r30, r24
    25e2:	20 83       	st	Z, r18
    25e4:	08 95       	ret

000025e6 <UART_voidTxString>:
		//error state
	}
}

void UART_voidTxString	(u8* copy_pu8TxString)
{
    25e6:	0f 93       	push	r16
    25e8:	1f 93       	push	r17
    25ea:	cf 93       	push	r28
	
	if(copy_pu8TxString!=NULL)
    25ec:	00 97       	sbiw	r24, 0x00	; 0
    25ee:	29 f4       	brne	.+10     	; 0x25fa <UART_voidTxString+0x14>
    25f0:	0c c0       	rjmp	.+24     	; 0x260a <UART_voidTxString+0x24>
		
		/*loop until Null char*/
		while( copy_pu8TxString[Local_u8Counter] != '\0')
		{
			/*send data[i]*/
			UART_voidTxChar(copy_pu8TxString[Local_u8Counter]);
    25f2:	0e 94 e7 12 	call	0x25ce	; 0x25ce <UART_voidTxChar>
			
			/*increase counter*/
			Local_u8Counter++;
    25f6:	cf 5f       	subi	r28, 0xFF	; 255
    25f8:	02 c0       	rjmp	.+4      	; 0x25fe <UART_voidTxString+0x18>
    25fa:	8c 01       	movw	r16, r24
    25fc:	c0 e0       	ldi	r28, 0x00	; 0
	{
		/*Init counter*/
		u8 Local_u8Counter=0;
		
		/*loop until Null char*/
		while( copy_pu8TxString[Local_u8Counter] != '\0')
    25fe:	f8 01       	movw	r30, r16
    2600:	ec 0f       	add	r30, r28
    2602:	f1 1d       	adc	r31, r1
    2604:	80 81       	ld	r24, Z
    2606:	81 11       	cpse	r24, r1
    2608:	f4 cf       	rjmp	.-24     	; 0x25f2 <UART_voidTxString+0xc>
	{
		//error state
	}
	
	
}
    260a:	cf 91       	pop	r28
    260c:	1f 91       	pop	r17
    260e:	0f 91       	pop	r16
    2610:	08 95       	ret

00002612 <__subsf3>:
    2612:	50 58       	subi	r21, 0x80	; 128

00002614 <__addsf3>:
    2614:	bb 27       	eor	r27, r27
    2616:	aa 27       	eor	r26, r26
    2618:	0e 94 21 13 	call	0x2642	; 0x2642 <__addsf3x>
    261c:	0c 94 94 14 	jmp	0x2928	; 0x2928 <__fp_round>
    2620:	0e 94 86 14 	call	0x290c	; 0x290c <__fp_pscA>
    2624:	38 f0       	brcs	.+14     	; 0x2634 <__addsf3+0x20>
    2626:	0e 94 8d 14 	call	0x291a	; 0x291a <__fp_pscB>
    262a:	20 f0       	brcs	.+8      	; 0x2634 <__addsf3+0x20>
    262c:	39 f4       	brne	.+14     	; 0x263c <__addsf3+0x28>
    262e:	9f 3f       	cpi	r25, 0xFF	; 255
    2630:	19 f4       	brne	.+6      	; 0x2638 <__addsf3+0x24>
    2632:	26 f4       	brtc	.+8      	; 0x263c <__addsf3+0x28>
    2634:	0c 94 83 14 	jmp	0x2906	; 0x2906 <__fp_nan>
    2638:	0e f4       	brtc	.+2      	; 0x263c <__addsf3+0x28>
    263a:	e0 95       	com	r30
    263c:	e7 fb       	bst	r30, 7
    263e:	0c 94 7d 14 	jmp	0x28fa	; 0x28fa <__fp_inf>

00002642 <__addsf3x>:
    2642:	e9 2f       	mov	r30, r25
    2644:	0e 94 a5 14 	call	0x294a	; 0x294a <__fp_split3>
    2648:	58 f3       	brcs	.-42     	; 0x2620 <__addsf3+0xc>
    264a:	ba 17       	cp	r27, r26
    264c:	62 07       	cpc	r22, r18
    264e:	73 07       	cpc	r23, r19
    2650:	84 07       	cpc	r24, r20
    2652:	95 07       	cpc	r25, r21
    2654:	20 f0       	brcs	.+8      	; 0x265e <__addsf3x+0x1c>
    2656:	79 f4       	brne	.+30     	; 0x2676 <__addsf3x+0x34>
    2658:	a6 f5       	brtc	.+104    	; 0x26c2 <__addsf3x+0x80>
    265a:	0c 94 c7 14 	jmp	0x298e	; 0x298e <__fp_zero>
    265e:	0e f4       	brtc	.+2      	; 0x2662 <__addsf3x+0x20>
    2660:	e0 95       	com	r30
    2662:	0b 2e       	mov	r0, r27
    2664:	ba 2f       	mov	r27, r26
    2666:	a0 2d       	mov	r26, r0
    2668:	0b 01       	movw	r0, r22
    266a:	b9 01       	movw	r22, r18
    266c:	90 01       	movw	r18, r0
    266e:	0c 01       	movw	r0, r24
    2670:	ca 01       	movw	r24, r20
    2672:	a0 01       	movw	r20, r0
    2674:	11 24       	eor	r1, r1
    2676:	ff 27       	eor	r31, r31
    2678:	59 1b       	sub	r21, r25
    267a:	99 f0       	breq	.+38     	; 0x26a2 <__addsf3x+0x60>
    267c:	59 3f       	cpi	r21, 0xF9	; 249
    267e:	50 f4       	brcc	.+20     	; 0x2694 <__addsf3x+0x52>
    2680:	50 3e       	cpi	r21, 0xE0	; 224
    2682:	68 f1       	brcs	.+90     	; 0x26de <__addsf3x+0x9c>
    2684:	1a 16       	cp	r1, r26
    2686:	f0 40       	sbci	r31, 0x00	; 0
    2688:	a2 2f       	mov	r26, r18
    268a:	23 2f       	mov	r18, r19
    268c:	34 2f       	mov	r19, r20
    268e:	44 27       	eor	r20, r20
    2690:	58 5f       	subi	r21, 0xF8	; 248
    2692:	f3 cf       	rjmp	.-26     	; 0x267a <__addsf3x+0x38>
    2694:	46 95       	lsr	r20
    2696:	37 95       	ror	r19
    2698:	27 95       	ror	r18
    269a:	a7 95       	ror	r26
    269c:	f0 40       	sbci	r31, 0x00	; 0
    269e:	53 95       	inc	r21
    26a0:	c9 f7       	brne	.-14     	; 0x2694 <__addsf3x+0x52>
    26a2:	7e f4       	brtc	.+30     	; 0x26c2 <__addsf3x+0x80>
    26a4:	1f 16       	cp	r1, r31
    26a6:	ba 0b       	sbc	r27, r26
    26a8:	62 0b       	sbc	r22, r18
    26aa:	73 0b       	sbc	r23, r19
    26ac:	84 0b       	sbc	r24, r20
    26ae:	ba f0       	brmi	.+46     	; 0x26de <__addsf3x+0x9c>
    26b0:	91 50       	subi	r25, 0x01	; 1
    26b2:	a1 f0       	breq	.+40     	; 0x26dc <__addsf3x+0x9a>
    26b4:	ff 0f       	add	r31, r31
    26b6:	bb 1f       	adc	r27, r27
    26b8:	66 1f       	adc	r22, r22
    26ba:	77 1f       	adc	r23, r23
    26bc:	88 1f       	adc	r24, r24
    26be:	c2 f7       	brpl	.-16     	; 0x26b0 <__addsf3x+0x6e>
    26c0:	0e c0       	rjmp	.+28     	; 0x26de <__addsf3x+0x9c>
    26c2:	ba 0f       	add	r27, r26
    26c4:	62 1f       	adc	r22, r18
    26c6:	73 1f       	adc	r23, r19
    26c8:	84 1f       	adc	r24, r20
    26ca:	48 f4       	brcc	.+18     	; 0x26de <__addsf3x+0x9c>
    26cc:	87 95       	ror	r24
    26ce:	77 95       	ror	r23
    26d0:	67 95       	ror	r22
    26d2:	b7 95       	ror	r27
    26d4:	f7 95       	ror	r31
    26d6:	9e 3f       	cpi	r25, 0xFE	; 254
    26d8:	08 f0       	brcs	.+2      	; 0x26dc <__addsf3x+0x9a>
    26da:	b0 cf       	rjmp	.-160    	; 0x263c <__addsf3+0x28>
    26dc:	93 95       	inc	r25
    26de:	88 0f       	add	r24, r24
    26e0:	08 f0       	brcs	.+2      	; 0x26e4 <__addsf3x+0xa2>
    26e2:	99 27       	eor	r25, r25
    26e4:	ee 0f       	add	r30, r30
    26e6:	97 95       	ror	r25
    26e8:	87 95       	ror	r24
    26ea:	08 95       	ret

000026ec <__cmpsf2>:
    26ec:	0e 94 59 14 	call	0x28b2	; 0x28b2 <__fp_cmp>
    26f0:	08 f4       	brcc	.+2      	; 0x26f4 <__cmpsf2+0x8>
    26f2:	81 e0       	ldi	r24, 0x01	; 1
    26f4:	08 95       	ret

000026f6 <__divsf3>:
    26f6:	0e 94 8f 13 	call	0x271e	; 0x271e <__divsf3x>
    26fa:	0c 94 94 14 	jmp	0x2928	; 0x2928 <__fp_round>
    26fe:	0e 94 8d 14 	call	0x291a	; 0x291a <__fp_pscB>
    2702:	58 f0       	brcs	.+22     	; 0x271a <__divsf3+0x24>
    2704:	0e 94 86 14 	call	0x290c	; 0x290c <__fp_pscA>
    2708:	40 f0       	brcs	.+16     	; 0x271a <__divsf3+0x24>
    270a:	29 f4       	brne	.+10     	; 0x2716 <__divsf3+0x20>
    270c:	5f 3f       	cpi	r21, 0xFF	; 255
    270e:	29 f0       	breq	.+10     	; 0x271a <__divsf3+0x24>
    2710:	0c 94 7d 14 	jmp	0x28fa	; 0x28fa <__fp_inf>
    2714:	51 11       	cpse	r21, r1
    2716:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__fp_szero>
    271a:	0c 94 83 14 	jmp	0x2906	; 0x2906 <__fp_nan>

0000271e <__divsf3x>:
    271e:	0e 94 a5 14 	call	0x294a	; 0x294a <__fp_split3>
    2722:	68 f3       	brcs	.-38     	; 0x26fe <__divsf3+0x8>

00002724 <__divsf3_pse>:
    2724:	99 23       	and	r25, r25
    2726:	b1 f3       	breq	.-20     	; 0x2714 <__divsf3+0x1e>
    2728:	55 23       	and	r21, r21
    272a:	91 f3       	breq	.-28     	; 0x2710 <__divsf3+0x1a>
    272c:	95 1b       	sub	r25, r21
    272e:	55 0b       	sbc	r21, r21
    2730:	bb 27       	eor	r27, r27
    2732:	aa 27       	eor	r26, r26
    2734:	62 17       	cp	r22, r18
    2736:	73 07       	cpc	r23, r19
    2738:	84 07       	cpc	r24, r20
    273a:	38 f0       	brcs	.+14     	; 0x274a <__divsf3_pse+0x26>
    273c:	9f 5f       	subi	r25, 0xFF	; 255
    273e:	5f 4f       	sbci	r21, 0xFF	; 255
    2740:	22 0f       	add	r18, r18
    2742:	33 1f       	adc	r19, r19
    2744:	44 1f       	adc	r20, r20
    2746:	aa 1f       	adc	r26, r26
    2748:	a9 f3       	breq	.-22     	; 0x2734 <__divsf3_pse+0x10>
    274a:	35 d0       	rcall	.+106    	; 0x27b6 <__divsf3_pse+0x92>
    274c:	0e 2e       	mov	r0, r30
    274e:	3a f0       	brmi	.+14     	; 0x275e <__divsf3_pse+0x3a>
    2750:	e0 e8       	ldi	r30, 0x80	; 128
    2752:	32 d0       	rcall	.+100    	; 0x27b8 <__divsf3_pse+0x94>
    2754:	91 50       	subi	r25, 0x01	; 1
    2756:	50 40       	sbci	r21, 0x00	; 0
    2758:	e6 95       	lsr	r30
    275a:	00 1c       	adc	r0, r0
    275c:	ca f7       	brpl	.-14     	; 0x2750 <__divsf3_pse+0x2c>
    275e:	2b d0       	rcall	.+86     	; 0x27b6 <__divsf3_pse+0x92>
    2760:	fe 2f       	mov	r31, r30
    2762:	29 d0       	rcall	.+82     	; 0x27b6 <__divsf3_pse+0x92>
    2764:	66 0f       	add	r22, r22
    2766:	77 1f       	adc	r23, r23
    2768:	88 1f       	adc	r24, r24
    276a:	bb 1f       	adc	r27, r27
    276c:	26 17       	cp	r18, r22
    276e:	37 07       	cpc	r19, r23
    2770:	48 07       	cpc	r20, r24
    2772:	ab 07       	cpc	r26, r27
    2774:	b0 e8       	ldi	r27, 0x80	; 128
    2776:	09 f0       	breq	.+2      	; 0x277a <__divsf3_pse+0x56>
    2778:	bb 0b       	sbc	r27, r27
    277a:	80 2d       	mov	r24, r0
    277c:	bf 01       	movw	r22, r30
    277e:	ff 27       	eor	r31, r31
    2780:	93 58       	subi	r25, 0x83	; 131
    2782:	5f 4f       	sbci	r21, 0xFF	; 255
    2784:	3a f0       	brmi	.+14     	; 0x2794 <__divsf3_pse+0x70>
    2786:	9e 3f       	cpi	r25, 0xFE	; 254
    2788:	51 05       	cpc	r21, r1
    278a:	78 f0       	brcs	.+30     	; 0x27aa <__divsf3_pse+0x86>
    278c:	0c 94 7d 14 	jmp	0x28fa	; 0x28fa <__fp_inf>
    2790:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__fp_szero>
    2794:	5f 3f       	cpi	r21, 0xFF	; 255
    2796:	e4 f3       	brlt	.-8      	; 0x2790 <__divsf3_pse+0x6c>
    2798:	98 3e       	cpi	r25, 0xE8	; 232
    279a:	d4 f3       	brlt	.-12     	; 0x2790 <__divsf3_pse+0x6c>
    279c:	86 95       	lsr	r24
    279e:	77 95       	ror	r23
    27a0:	67 95       	ror	r22
    27a2:	b7 95       	ror	r27
    27a4:	f7 95       	ror	r31
    27a6:	9f 5f       	subi	r25, 0xFF	; 255
    27a8:	c9 f7       	brne	.-14     	; 0x279c <__divsf3_pse+0x78>
    27aa:	88 0f       	add	r24, r24
    27ac:	91 1d       	adc	r25, r1
    27ae:	96 95       	lsr	r25
    27b0:	87 95       	ror	r24
    27b2:	97 f9       	bld	r25, 7
    27b4:	08 95       	ret
    27b6:	e1 e0       	ldi	r30, 0x01	; 1
    27b8:	66 0f       	add	r22, r22
    27ba:	77 1f       	adc	r23, r23
    27bc:	88 1f       	adc	r24, r24
    27be:	bb 1f       	adc	r27, r27
    27c0:	62 17       	cp	r22, r18
    27c2:	73 07       	cpc	r23, r19
    27c4:	84 07       	cpc	r24, r20
    27c6:	ba 07       	cpc	r27, r26
    27c8:	20 f0       	brcs	.+8      	; 0x27d2 <__divsf3_pse+0xae>
    27ca:	62 1b       	sub	r22, r18
    27cc:	73 0b       	sbc	r23, r19
    27ce:	84 0b       	sbc	r24, r20
    27d0:	ba 0b       	sbc	r27, r26
    27d2:	ee 1f       	adc	r30, r30
    27d4:	88 f7       	brcc	.-30     	; 0x27b8 <__divsf3_pse+0x94>
    27d6:	e0 95       	com	r30
    27d8:	08 95       	ret

000027da <__fixunssfsi>:
    27da:	0e 94 ad 14 	call	0x295a	; 0x295a <__fp_splitA>
    27de:	88 f0       	brcs	.+34     	; 0x2802 <__fixunssfsi+0x28>
    27e0:	9f 57       	subi	r25, 0x7F	; 127
    27e2:	98 f0       	brcs	.+38     	; 0x280a <__fixunssfsi+0x30>
    27e4:	b9 2f       	mov	r27, r25
    27e6:	99 27       	eor	r25, r25
    27e8:	b7 51       	subi	r27, 0x17	; 23
    27ea:	b0 f0       	brcs	.+44     	; 0x2818 <__fixunssfsi+0x3e>
    27ec:	e1 f0       	breq	.+56     	; 0x2826 <__fixunssfsi+0x4c>
    27ee:	66 0f       	add	r22, r22
    27f0:	77 1f       	adc	r23, r23
    27f2:	88 1f       	adc	r24, r24
    27f4:	99 1f       	adc	r25, r25
    27f6:	1a f0       	brmi	.+6      	; 0x27fe <__fixunssfsi+0x24>
    27f8:	ba 95       	dec	r27
    27fa:	c9 f7       	brne	.-14     	; 0x27ee <__fixunssfsi+0x14>
    27fc:	14 c0       	rjmp	.+40     	; 0x2826 <__fixunssfsi+0x4c>
    27fe:	b1 30       	cpi	r27, 0x01	; 1
    2800:	91 f0       	breq	.+36     	; 0x2826 <__fixunssfsi+0x4c>
    2802:	0e 94 c7 14 	call	0x298e	; 0x298e <__fp_zero>
    2806:	b1 e0       	ldi	r27, 0x01	; 1
    2808:	08 95       	ret
    280a:	0c 94 c7 14 	jmp	0x298e	; 0x298e <__fp_zero>
    280e:	67 2f       	mov	r22, r23
    2810:	78 2f       	mov	r23, r24
    2812:	88 27       	eor	r24, r24
    2814:	b8 5f       	subi	r27, 0xF8	; 248
    2816:	39 f0       	breq	.+14     	; 0x2826 <__fixunssfsi+0x4c>
    2818:	b9 3f       	cpi	r27, 0xF9	; 249
    281a:	cc f3       	brlt	.-14     	; 0x280e <__fixunssfsi+0x34>
    281c:	86 95       	lsr	r24
    281e:	77 95       	ror	r23
    2820:	67 95       	ror	r22
    2822:	b3 95       	inc	r27
    2824:	d9 f7       	brne	.-10     	; 0x281c <__fixunssfsi+0x42>
    2826:	3e f4       	brtc	.+14     	; 0x2836 <__fixunssfsi+0x5c>
    2828:	90 95       	com	r25
    282a:	80 95       	com	r24
    282c:	70 95       	com	r23
    282e:	61 95       	neg	r22
    2830:	7f 4f       	sbci	r23, 0xFF	; 255
    2832:	8f 4f       	sbci	r24, 0xFF	; 255
    2834:	9f 4f       	sbci	r25, 0xFF	; 255
    2836:	08 95       	ret

00002838 <__floatunsisf>:
    2838:	e8 94       	clt
    283a:	09 c0       	rjmp	.+18     	; 0x284e <__floatsisf+0x12>

0000283c <__floatsisf>:
    283c:	97 fb       	bst	r25, 7
    283e:	3e f4       	brtc	.+14     	; 0x284e <__floatsisf+0x12>
    2840:	90 95       	com	r25
    2842:	80 95       	com	r24
    2844:	70 95       	com	r23
    2846:	61 95       	neg	r22
    2848:	7f 4f       	sbci	r23, 0xFF	; 255
    284a:	8f 4f       	sbci	r24, 0xFF	; 255
    284c:	9f 4f       	sbci	r25, 0xFF	; 255
    284e:	99 23       	and	r25, r25
    2850:	a9 f0       	breq	.+42     	; 0x287c <__floatsisf+0x40>
    2852:	f9 2f       	mov	r31, r25
    2854:	96 e9       	ldi	r25, 0x96	; 150
    2856:	bb 27       	eor	r27, r27
    2858:	93 95       	inc	r25
    285a:	f6 95       	lsr	r31
    285c:	87 95       	ror	r24
    285e:	77 95       	ror	r23
    2860:	67 95       	ror	r22
    2862:	b7 95       	ror	r27
    2864:	f1 11       	cpse	r31, r1
    2866:	f8 cf       	rjmp	.-16     	; 0x2858 <__floatsisf+0x1c>
    2868:	fa f4       	brpl	.+62     	; 0x28a8 <__floatsisf+0x6c>
    286a:	bb 0f       	add	r27, r27
    286c:	11 f4       	brne	.+4      	; 0x2872 <__floatsisf+0x36>
    286e:	60 ff       	sbrs	r22, 0
    2870:	1b c0       	rjmp	.+54     	; 0x28a8 <__floatsisf+0x6c>
    2872:	6f 5f       	subi	r22, 0xFF	; 255
    2874:	7f 4f       	sbci	r23, 0xFF	; 255
    2876:	8f 4f       	sbci	r24, 0xFF	; 255
    2878:	9f 4f       	sbci	r25, 0xFF	; 255
    287a:	16 c0       	rjmp	.+44     	; 0x28a8 <__floatsisf+0x6c>
    287c:	88 23       	and	r24, r24
    287e:	11 f0       	breq	.+4      	; 0x2884 <__floatsisf+0x48>
    2880:	96 e9       	ldi	r25, 0x96	; 150
    2882:	11 c0       	rjmp	.+34     	; 0x28a6 <__floatsisf+0x6a>
    2884:	77 23       	and	r23, r23
    2886:	21 f0       	breq	.+8      	; 0x2890 <__floatsisf+0x54>
    2888:	9e e8       	ldi	r25, 0x8E	; 142
    288a:	87 2f       	mov	r24, r23
    288c:	76 2f       	mov	r23, r22
    288e:	05 c0       	rjmp	.+10     	; 0x289a <__floatsisf+0x5e>
    2890:	66 23       	and	r22, r22
    2892:	71 f0       	breq	.+28     	; 0x28b0 <__floatsisf+0x74>
    2894:	96 e8       	ldi	r25, 0x86	; 134
    2896:	86 2f       	mov	r24, r22
    2898:	70 e0       	ldi	r23, 0x00	; 0
    289a:	60 e0       	ldi	r22, 0x00	; 0
    289c:	2a f0       	brmi	.+10     	; 0x28a8 <__floatsisf+0x6c>
    289e:	9a 95       	dec	r25
    28a0:	66 0f       	add	r22, r22
    28a2:	77 1f       	adc	r23, r23
    28a4:	88 1f       	adc	r24, r24
    28a6:	da f7       	brpl	.-10     	; 0x289e <__floatsisf+0x62>
    28a8:	88 0f       	add	r24, r24
    28aa:	96 95       	lsr	r25
    28ac:	87 95       	ror	r24
    28ae:	97 f9       	bld	r25, 7
    28b0:	08 95       	ret

000028b2 <__fp_cmp>:
    28b2:	99 0f       	add	r25, r25
    28b4:	00 08       	sbc	r0, r0
    28b6:	55 0f       	add	r21, r21
    28b8:	aa 0b       	sbc	r26, r26
    28ba:	e0 e8       	ldi	r30, 0x80	; 128
    28bc:	fe ef       	ldi	r31, 0xFE	; 254
    28be:	16 16       	cp	r1, r22
    28c0:	17 06       	cpc	r1, r23
    28c2:	e8 07       	cpc	r30, r24
    28c4:	f9 07       	cpc	r31, r25
    28c6:	c0 f0       	brcs	.+48     	; 0x28f8 <__fp_cmp+0x46>
    28c8:	12 16       	cp	r1, r18
    28ca:	13 06       	cpc	r1, r19
    28cc:	e4 07       	cpc	r30, r20
    28ce:	f5 07       	cpc	r31, r21
    28d0:	98 f0       	brcs	.+38     	; 0x28f8 <__fp_cmp+0x46>
    28d2:	62 1b       	sub	r22, r18
    28d4:	73 0b       	sbc	r23, r19
    28d6:	84 0b       	sbc	r24, r20
    28d8:	95 0b       	sbc	r25, r21
    28da:	39 f4       	brne	.+14     	; 0x28ea <__fp_cmp+0x38>
    28dc:	0a 26       	eor	r0, r26
    28de:	61 f0       	breq	.+24     	; 0x28f8 <__fp_cmp+0x46>
    28e0:	23 2b       	or	r18, r19
    28e2:	24 2b       	or	r18, r20
    28e4:	25 2b       	or	r18, r21
    28e6:	21 f4       	brne	.+8      	; 0x28f0 <__fp_cmp+0x3e>
    28e8:	08 95       	ret
    28ea:	0a 26       	eor	r0, r26
    28ec:	09 f4       	brne	.+2      	; 0x28f0 <__fp_cmp+0x3e>
    28ee:	a1 40       	sbci	r26, 0x01	; 1
    28f0:	a6 95       	lsr	r26
    28f2:	8f ef       	ldi	r24, 0xFF	; 255
    28f4:	81 1d       	adc	r24, r1
    28f6:	81 1d       	adc	r24, r1
    28f8:	08 95       	ret

000028fa <__fp_inf>:
    28fa:	97 f9       	bld	r25, 7
    28fc:	9f 67       	ori	r25, 0x7F	; 127
    28fe:	80 e8       	ldi	r24, 0x80	; 128
    2900:	70 e0       	ldi	r23, 0x00	; 0
    2902:	60 e0       	ldi	r22, 0x00	; 0
    2904:	08 95       	ret

00002906 <__fp_nan>:
    2906:	9f ef       	ldi	r25, 0xFF	; 255
    2908:	80 ec       	ldi	r24, 0xC0	; 192
    290a:	08 95       	ret

0000290c <__fp_pscA>:
    290c:	00 24       	eor	r0, r0
    290e:	0a 94       	dec	r0
    2910:	16 16       	cp	r1, r22
    2912:	17 06       	cpc	r1, r23
    2914:	18 06       	cpc	r1, r24
    2916:	09 06       	cpc	r0, r25
    2918:	08 95       	ret

0000291a <__fp_pscB>:
    291a:	00 24       	eor	r0, r0
    291c:	0a 94       	dec	r0
    291e:	12 16       	cp	r1, r18
    2920:	13 06       	cpc	r1, r19
    2922:	14 06       	cpc	r1, r20
    2924:	05 06       	cpc	r0, r21
    2926:	08 95       	ret

00002928 <__fp_round>:
    2928:	09 2e       	mov	r0, r25
    292a:	03 94       	inc	r0
    292c:	00 0c       	add	r0, r0
    292e:	11 f4       	brne	.+4      	; 0x2934 <__fp_round+0xc>
    2930:	88 23       	and	r24, r24
    2932:	52 f0       	brmi	.+20     	; 0x2948 <__fp_round+0x20>
    2934:	bb 0f       	add	r27, r27
    2936:	40 f4       	brcc	.+16     	; 0x2948 <__fp_round+0x20>
    2938:	bf 2b       	or	r27, r31
    293a:	11 f4       	brne	.+4      	; 0x2940 <__fp_round+0x18>
    293c:	60 ff       	sbrs	r22, 0
    293e:	04 c0       	rjmp	.+8      	; 0x2948 <__fp_round+0x20>
    2940:	6f 5f       	subi	r22, 0xFF	; 255
    2942:	7f 4f       	sbci	r23, 0xFF	; 255
    2944:	8f 4f       	sbci	r24, 0xFF	; 255
    2946:	9f 4f       	sbci	r25, 0xFF	; 255
    2948:	08 95       	ret

0000294a <__fp_split3>:
    294a:	57 fd       	sbrc	r21, 7
    294c:	90 58       	subi	r25, 0x80	; 128
    294e:	44 0f       	add	r20, r20
    2950:	55 1f       	adc	r21, r21
    2952:	59 f0       	breq	.+22     	; 0x296a <__fp_splitA+0x10>
    2954:	5f 3f       	cpi	r21, 0xFF	; 255
    2956:	71 f0       	breq	.+28     	; 0x2974 <__fp_splitA+0x1a>
    2958:	47 95       	ror	r20

0000295a <__fp_splitA>:
    295a:	88 0f       	add	r24, r24
    295c:	97 fb       	bst	r25, 7
    295e:	99 1f       	adc	r25, r25
    2960:	61 f0       	breq	.+24     	; 0x297a <__fp_splitA+0x20>
    2962:	9f 3f       	cpi	r25, 0xFF	; 255
    2964:	79 f0       	breq	.+30     	; 0x2984 <__fp_splitA+0x2a>
    2966:	87 95       	ror	r24
    2968:	08 95       	ret
    296a:	12 16       	cp	r1, r18
    296c:	13 06       	cpc	r1, r19
    296e:	14 06       	cpc	r1, r20
    2970:	55 1f       	adc	r21, r21
    2972:	f2 cf       	rjmp	.-28     	; 0x2958 <__fp_split3+0xe>
    2974:	46 95       	lsr	r20
    2976:	f1 df       	rcall	.-30     	; 0x295a <__fp_splitA>
    2978:	08 c0       	rjmp	.+16     	; 0x298a <__fp_splitA+0x30>
    297a:	16 16       	cp	r1, r22
    297c:	17 06       	cpc	r1, r23
    297e:	18 06       	cpc	r1, r24
    2980:	99 1f       	adc	r25, r25
    2982:	f1 cf       	rjmp	.-30     	; 0x2966 <__fp_splitA+0xc>
    2984:	86 95       	lsr	r24
    2986:	71 05       	cpc	r23, r1
    2988:	61 05       	cpc	r22, r1
    298a:	08 94       	sec
    298c:	08 95       	ret

0000298e <__fp_zero>:
    298e:	e8 94       	clt

00002990 <__fp_szero>:
    2990:	bb 27       	eor	r27, r27
    2992:	66 27       	eor	r22, r22
    2994:	77 27       	eor	r23, r23
    2996:	cb 01       	movw	r24, r22
    2998:	97 f9       	bld	r25, 7
    299a:	08 95       	ret

0000299c <__mulsf3>:
    299c:	0e 94 e1 14 	call	0x29c2	; 0x29c2 <__mulsf3x>
    29a0:	0c 94 94 14 	jmp	0x2928	; 0x2928 <__fp_round>
    29a4:	0e 94 86 14 	call	0x290c	; 0x290c <__fp_pscA>
    29a8:	38 f0       	brcs	.+14     	; 0x29b8 <__mulsf3+0x1c>
    29aa:	0e 94 8d 14 	call	0x291a	; 0x291a <__fp_pscB>
    29ae:	20 f0       	brcs	.+8      	; 0x29b8 <__mulsf3+0x1c>
    29b0:	95 23       	and	r25, r21
    29b2:	11 f0       	breq	.+4      	; 0x29b8 <__mulsf3+0x1c>
    29b4:	0c 94 7d 14 	jmp	0x28fa	; 0x28fa <__fp_inf>
    29b8:	0c 94 83 14 	jmp	0x2906	; 0x2906 <__fp_nan>
    29bc:	11 24       	eor	r1, r1
    29be:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__fp_szero>

000029c2 <__mulsf3x>:
    29c2:	0e 94 a5 14 	call	0x294a	; 0x294a <__fp_split3>
    29c6:	70 f3       	brcs	.-36     	; 0x29a4 <__mulsf3+0x8>

000029c8 <__mulsf3_pse>:
    29c8:	95 9f       	mul	r25, r21
    29ca:	c1 f3       	breq	.-16     	; 0x29bc <__mulsf3+0x20>
    29cc:	95 0f       	add	r25, r21
    29ce:	50 e0       	ldi	r21, 0x00	; 0
    29d0:	55 1f       	adc	r21, r21
    29d2:	62 9f       	mul	r22, r18
    29d4:	f0 01       	movw	r30, r0
    29d6:	72 9f       	mul	r23, r18
    29d8:	bb 27       	eor	r27, r27
    29da:	f0 0d       	add	r31, r0
    29dc:	b1 1d       	adc	r27, r1
    29de:	63 9f       	mul	r22, r19
    29e0:	aa 27       	eor	r26, r26
    29e2:	f0 0d       	add	r31, r0
    29e4:	b1 1d       	adc	r27, r1
    29e6:	aa 1f       	adc	r26, r26
    29e8:	64 9f       	mul	r22, r20
    29ea:	66 27       	eor	r22, r22
    29ec:	b0 0d       	add	r27, r0
    29ee:	a1 1d       	adc	r26, r1
    29f0:	66 1f       	adc	r22, r22
    29f2:	82 9f       	mul	r24, r18
    29f4:	22 27       	eor	r18, r18
    29f6:	b0 0d       	add	r27, r0
    29f8:	a1 1d       	adc	r26, r1
    29fa:	62 1f       	adc	r22, r18
    29fc:	73 9f       	mul	r23, r19
    29fe:	b0 0d       	add	r27, r0
    2a00:	a1 1d       	adc	r26, r1
    2a02:	62 1f       	adc	r22, r18
    2a04:	83 9f       	mul	r24, r19
    2a06:	a0 0d       	add	r26, r0
    2a08:	61 1d       	adc	r22, r1
    2a0a:	22 1f       	adc	r18, r18
    2a0c:	74 9f       	mul	r23, r20
    2a0e:	33 27       	eor	r19, r19
    2a10:	a0 0d       	add	r26, r0
    2a12:	61 1d       	adc	r22, r1
    2a14:	23 1f       	adc	r18, r19
    2a16:	84 9f       	mul	r24, r20
    2a18:	60 0d       	add	r22, r0
    2a1a:	21 1d       	adc	r18, r1
    2a1c:	82 2f       	mov	r24, r18
    2a1e:	76 2f       	mov	r23, r22
    2a20:	6a 2f       	mov	r22, r26
    2a22:	11 24       	eor	r1, r1
    2a24:	9f 57       	subi	r25, 0x7F	; 127
    2a26:	50 40       	sbci	r21, 0x00	; 0
    2a28:	9a f0       	brmi	.+38     	; 0x2a50 <__mulsf3_pse+0x88>
    2a2a:	f1 f0       	breq	.+60     	; 0x2a68 <__mulsf3_pse+0xa0>
    2a2c:	88 23       	and	r24, r24
    2a2e:	4a f0       	brmi	.+18     	; 0x2a42 <__mulsf3_pse+0x7a>
    2a30:	ee 0f       	add	r30, r30
    2a32:	ff 1f       	adc	r31, r31
    2a34:	bb 1f       	adc	r27, r27
    2a36:	66 1f       	adc	r22, r22
    2a38:	77 1f       	adc	r23, r23
    2a3a:	88 1f       	adc	r24, r24
    2a3c:	91 50       	subi	r25, 0x01	; 1
    2a3e:	50 40       	sbci	r21, 0x00	; 0
    2a40:	a9 f7       	brne	.-22     	; 0x2a2c <__mulsf3_pse+0x64>
    2a42:	9e 3f       	cpi	r25, 0xFE	; 254
    2a44:	51 05       	cpc	r21, r1
    2a46:	80 f0       	brcs	.+32     	; 0x2a68 <__mulsf3_pse+0xa0>
    2a48:	0c 94 7d 14 	jmp	0x28fa	; 0x28fa <__fp_inf>
    2a4c:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__fp_szero>
    2a50:	5f 3f       	cpi	r21, 0xFF	; 255
    2a52:	e4 f3       	brlt	.-8      	; 0x2a4c <__mulsf3_pse+0x84>
    2a54:	98 3e       	cpi	r25, 0xE8	; 232
    2a56:	d4 f3       	brlt	.-12     	; 0x2a4c <__mulsf3_pse+0x84>
    2a58:	86 95       	lsr	r24
    2a5a:	77 95       	ror	r23
    2a5c:	67 95       	ror	r22
    2a5e:	b7 95       	ror	r27
    2a60:	f7 95       	ror	r31
    2a62:	e7 95       	ror	r30
    2a64:	9f 5f       	subi	r25, 0xFF	; 255
    2a66:	c1 f7       	brne	.-16     	; 0x2a58 <__mulsf3_pse+0x90>
    2a68:	fe 2b       	or	r31, r30
    2a6a:	88 0f       	add	r24, r24
    2a6c:	91 1d       	adc	r25, r1
    2a6e:	96 95       	lsr	r25
    2a70:	87 95       	ror	r24
    2a72:	97 f9       	bld	r25, 7
    2a74:	08 95       	ret

00002a76 <__udivmodsi4>:
    2a76:	a1 e2       	ldi	r26, 0x21	; 33
    2a78:	1a 2e       	mov	r1, r26
    2a7a:	aa 1b       	sub	r26, r26
    2a7c:	bb 1b       	sub	r27, r27
    2a7e:	fd 01       	movw	r30, r26
    2a80:	0d c0       	rjmp	.+26     	; 0x2a9c <__udivmodsi4_ep>

00002a82 <__udivmodsi4_loop>:
    2a82:	aa 1f       	adc	r26, r26
    2a84:	bb 1f       	adc	r27, r27
    2a86:	ee 1f       	adc	r30, r30
    2a88:	ff 1f       	adc	r31, r31
    2a8a:	a2 17       	cp	r26, r18
    2a8c:	b3 07       	cpc	r27, r19
    2a8e:	e4 07       	cpc	r30, r20
    2a90:	f5 07       	cpc	r31, r21
    2a92:	20 f0       	brcs	.+8      	; 0x2a9c <__udivmodsi4_ep>
    2a94:	a2 1b       	sub	r26, r18
    2a96:	b3 0b       	sbc	r27, r19
    2a98:	e4 0b       	sbc	r30, r20
    2a9a:	f5 0b       	sbc	r31, r21

00002a9c <__udivmodsi4_ep>:
    2a9c:	66 1f       	adc	r22, r22
    2a9e:	77 1f       	adc	r23, r23
    2aa0:	88 1f       	adc	r24, r24
    2aa2:	99 1f       	adc	r25, r25
    2aa4:	1a 94       	dec	r1
    2aa6:	69 f7       	brne	.-38     	; 0x2a82 <__udivmodsi4_loop>
    2aa8:	60 95       	com	r22
    2aaa:	70 95       	com	r23
    2aac:	80 95       	com	r24
    2aae:	90 95       	com	r25
    2ab0:	9b 01       	movw	r18, r22
    2ab2:	ac 01       	movw	r20, r24
    2ab4:	bd 01       	movw	r22, r26
    2ab6:	cf 01       	movw	r24, r30
    2ab8:	08 95       	ret

00002aba <sprintf>:
    2aba:	ae e0       	ldi	r26, 0x0E	; 14
    2abc:	b0 e0       	ldi	r27, 0x00	; 0
    2abe:	e3 e6       	ldi	r30, 0x63	; 99
    2ac0:	f5 e1       	ldi	r31, 0x15	; 21
    2ac2:	0c 94 1e 18 	jmp	0x303c	; 0x303c <__prologue_saves__+0x1c>
    2ac6:	0d 89       	ldd	r16, Y+21	; 0x15
    2ac8:	1e 89       	ldd	r17, Y+22	; 0x16
    2aca:	86 e0       	ldi	r24, 0x06	; 6
    2acc:	8c 83       	std	Y+4, r24	; 0x04
    2ace:	1a 83       	std	Y+2, r17	; 0x02
    2ad0:	09 83       	std	Y+1, r16	; 0x01
    2ad2:	8f ef       	ldi	r24, 0xFF	; 255
    2ad4:	9f e7       	ldi	r25, 0x7F	; 127
    2ad6:	9e 83       	std	Y+6, r25	; 0x06
    2ad8:	8d 83       	std	Y+5, r24	; 0x05
    2ada:	ae 01       	movw	r20, r28
    2adc:	47 5e       	subi	r20, 0xE7	; 231
    2ade:	5f 4f       	sbci	r21, 0xFF	; 255
    2ae0:	6f 89       	ldd	r22, Y+23	; 0x17
    2ae2:	78 8d       	ldd	r23, Y+24	; 0x18
    2ae4:	ce 01       	movw	r24, r28
    2ae6:	01 96       	adiw	r24, 0x01	; 1
    2ae8:	0e 94 7f 15 	call	0x2afe	; 0x2afe <vfprintf>
    2aec:	ef 81       	ldd	r30, Y+7	; 0x07
    2aee:	f8 85       	ldd	r31, Y+8	; 0x08
    2af0:	e0 0f       	add	r30, r16
    2af2:	f1 1f       	adc	r31, r17
    2af4:	10 82       	st	Z, r1
    2af6:	2e 96       	adiw	r28, 0x0e	; 14
    2af8:	e4 e0       	ldi	r30, 0x04	; 4
    2afa:	0c 94 3a 18 	jmp	0x3074	; 0x3074 <__epilogue_restores__+0x1c>

00002afe <vfprintf>:
    2afe:	ab e0       	ldi	r26, 0x0B	; 11
    2b00:	b0 e0       	ldi	r27, 0x00	; 0
    2b02:	e5 e8       	ldi	r30, 0x85	; 133
    2b04:	f5 e1       	ldi	r31, 0x15	; 21
    2b06:	0c 94 10 18 	jmp	0x3020	; 0x3020 <__prologue_saves__>
    2b0a:	6c 01       	movw	r12, r24
    2b0c:	7b 01       	movw	r14, r22
    2b0e:	8a 01       	movw	r16, r20
    2b10:	fc 01       	movw	r30, r24
    2b12:	17 82       	std	Z+7, r1	; 0x07
    2b14:	16 82       	std	Z+6, r1	; 0x06
    2b16:	83 81       	ldd	r24, Z+3	; 0x03
    2b18:	81 ff       	sbrs	r24, 1
    2b1a:	cc c1       	rjmp	.+920    	; 0x2eb4 <vfprintf+0x3b6>
    2b1c:	ce 01       	movw	r24, r28
    2b1e:	01 96       	adiw	r24, 0x01	; 1
    2b20:	3c 01       	movw	r6, r24
    2b22:	f6 01       	movw	r30, r12
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	f7 01       	movw	r30, r14
    2b28:	93 fd       	sbrc	r25, 3
    2b2a:	85 91       	lpm	r24, Z+
    2b2c:	93 ff       	sbrs	r25, 3
    2b2e:	81 91       	ld	r24, Z+
    2b30:	7f 01       	movw	r14, r30
    2b32:	88 23       	and	r24, r24
    2b34:	09 f4       	brne	.+2      	; 0x2b38 <vfprintf+0x3a>
    2b36:	ba c1       	rjmp	.+884    	; 0x2eac <vfprintf+0x3ae>
    2b38:	85 32       	cpi	r24, 0x25	; 37
    2b3a:	39 f4       	brne	.+14     	; 0x2b4a <vfprintf+0x4c>
    2b3c:	93 fd       	sbrc	r25, 3
    2b3e:	85 91       	lpm	r24, Z+
    2b40:	93 ff       	sbrs	r25, 3
    2b42:	81 91       	ld	r24, Z+
    2b44:	7f 01       	movw	r14, r30
    2b46:	85 32       	cpi	r24, 0x25	; 37
    2b48:	29 f4       	brne	.+10     	; 0x2b54 <vfprintf+0x56>
    2b4a:	b6 01       	movw	r22, r12
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2b52:	e7 cf       	rjmp	.-50     	; 0x2b22 <vfprintf+0x24>
    2b54:	91 2c       	mov	r9, r1
    2b56:	21 2c       	mov	r2, r1
    2b58:	31 2c       	mov	r3, r1
    2b5a:	ff e1       	ldi	r31, 0x1F	; 31
    2b5c:	f3 15       	cp	r31, r3
    2b5e:	d8 f0       	brcs	.+54     	; 0x2b96 <vfprintf+0x98>
    2b60:	8b 32       	cpi	r24, 0x2B	; 43
    2b62:	79 f0       	breq	.+30     	; 0x2b82 <vfprintf+0x84>
    2b64:	38 f4       	brcc	.+14     	; 0x2b74 <vfprintf+0x76>
    2b66:	80 32       	cpi	r24, 0x20	; 32
    2b68:	79 f0       	breq	.+30     	; 0x2b88 <vfprintf+0x8a>
    2b6a:	83 32       	cpi	r24, 0x23	; 35
    2b6c:	a1 f4       	brne	.+40     	; 0x2b96 <vfprintf+0x98>
    2b6e:	23 2d       	mov	r18, r3
    2b70:	20 61       	ori	r18, 0x10	; 16
    2b72:	1d c0       	rjmp	.+58     	; 0x2bae <vfprintf+0xb0>
    2b74:	8d 32       	cpi	r24, 0x2D	; 45
    2b76:	61 f0       	breq	.+24     	; 0x2b90 <vfprintf+0x92>
    2b78:	80 33       	cpi	r24, 0x30	; 48
    2b7a:	69 f4       	brne	.+26     	; 0x2b96 <vfprintf+0x98>
    2b7c:	23 2d       	mov	r18, r3
    2b7e:	21 60       	ori	r18, 0x01	; 1
    2b80:	16 c0       	rjmp	.+44     	; 0x2bae <vfprintf+0xb0>
    2b82:	83 2d       	mov	r24, r3
    2b84:	82 60       	ori	r24, 0x02	; 2
    2b86:	38 2e       	mov	r3, r24
    2b88:	e3 2d       	mov	r30, r3
    2b8a:	e4 60       	ori	r30, 0x04	; 4
    2b8c:	3e 2e       	mov	r3, r30
    2b8e:	2a c0       	rjmp	.+84     	; 0x2be4 <vfprintf+0xe6>
    2b90:	f3 2d       	mov	r31, r3
    2b92:	f8 60       	ori	r31, 0x08	; 8
    2b94:	1d c0       	rjmp	.+58     	; 0x2bd0 <vfprintf+0xd2>
    2b96:	37 fc       	sbrc	r3, 7
    2b98:	2d c0       	rjmp	.+90     	; 0x2bf4 <vfprintf+0xf6>
    2b9a:	20 ed       	ldi	r18, 0xD0	; 208
    2b9c:	28 0f       	add	r18, r24
    2b9e:	2a 30       	cpi	r18, 0x0A	; 10
    2ba0:	40 f0       	brcs	.+16     	; 0x2bb2 <vfprintf+0xb4>
    2ba2:	8e 32       	cpi	r24, 0x2E	; 46
    2ba4:	b9 f4       	brne	.+46     	; 0x2bd4 <vfprintf+0xd6>
    2ba6:	36 fc       	sbrc	r3, 6
    2ba8:	81 c1       	rjmp	.+770    	; 0x2eac <vfprintf+0x3ae>
    2baa:	23 2d       	mov	r18, r3
    2bac:	20 64       	ori	r18, 0x40	; 64
    2bae:	32 2e       	mov	r3, r18
    2bb0:	19 c0       	rjmp	.+50     	; 0x2be4 <vfprintf+0xe6>
    2bb2:	36 fe       	sbrs	r3, 6
    2bb4:	06 c0       	rjmp	.+12     	; 0x2bc2 <vfprintf+0xc4>
    2bb6:	8a e0       	ldi	r24, 0x0A	; 10
    2bb8:	98 9e       	mul	r9, r24
    2bba:	20 0d       	add	r18, r0
    2bbc:	11 24       	eor	r1, r1
    2bbe:	92 2e       	mov	r9, r18
    2bc0:	11 c0       	rjmp	.+34     	; 0x2be4 <vfprintf+0xe6>
    2bc2:	ea e0       	ldi	r30, 0x0A	; 10
    2bc4:	2e 9e       	mul	r2, r30
    2bc6:	20 0d       	add	r18, r0
    2bc8:	11 24       	eor	r1, r1
    2bca:	22 2e       	mov	r2, r18
    2bcc:	f3 2d       	mov	r31, r3
    2bce:	f0 62       	ori	r31, 0x20	; 32
    2bd0:	3f 2e       	mov	r3, r31
    2bd2:	08 c0       	rjmp	.+16     	; 0x2be4 <vfprintf+0xe6>
    2bd4:	8c 36       	cpi	r24, 0x6C	; 108
    2bd6:	21 f4       	brne	.+8      	; 0x2be0 <vfprintf+0xe2>
    2bd8:	83 2d       	mov	r24, r3
    2bda:	80 68       	ori	r24, 0x80	; 128
    2bdc:	38 2e       	mov	r3, r24
    2bde:	02 c0       	rjmp	.+4      	; 0x2be4 <vfprintf+0xe6>
    2be0:	88 36       	cpi	r24, 0x68	; 104
    2be2:	41 f4       	brne	.+16     	; 0x2bf4 <vfprintf+0xf6>
    2be4:	f7 01       	movw	r30, r14
    2be6:	93 fd       	sbrc	r25, 3
    2be8:	85 91       	lpm	r24, Z+
    2bea:	93 ff       	sbrs	r25, 3
    2bec:	81 91       	ld	r24, Z+
    2bee:	7f 01       	movw	r14, r30
    2bf0:	81 11       	cpse	r24, r1
    2bf2:	b3 cf       	rjmp	.-154    	; 0x2b5a <vfprintf+0x5c>
    2bf4:	98 2f       	mov	r25, r24
    2bf6:	9f 7d       	andi	r25, 0xDF	; 223
    2bf8:	95 54       	subi	r25, 0x45	; 69
    2bfa:	93 30       	cpi	r25, 0x03	; 3
    2bfc:	28 f4       	brcc	.+10     	; 0x2c08 <vfprintf+0x10a>
    2bfe:	0c 5f       	subi	r16, 0xFC	; 252
    2c00:	1f 4f       	sbci	r17, 0xFF	; 255
    2c02:	9f e3       	ldi	r25, 0x3F	; 63
    2c04:	99 83       	std	Y+1, r25	; 0x01
    2c06:	0d c0       	rjmp	.+26     	; 0x2c22 <vfprintf+0x124>
    2c08:	83 36       	cpi	r24, 0x63	; 99
    2c0a:	31 f0       	breq	.+12     	; 0x2c18 <vfprintf+0x11a>
    2c0c:	83 37       	cpi	r24, 0x73	; 115
    2c0e:	71 f0       	breq	.+28     	; 0x2c2c <vfprintf+0x12e>
    2c10:	83 35       	cpi	r24, 0x53	; 83
    2c12:	09 f0       	breq	.+2      	; 0x2c16 <vfprintf+0x118>
    2c14:	59 c0       	rjmp	.+178    	; 0x2cc8 <vfprintf+0x1ca>
    2c16:	21 c0       	rjmp	.+66     	; 0x2c5a <vfprintf+0x15c>
    2c18:	f8 01       	movw	r30, r16
    2c1a:	80 81       	ld	r24, Z
    2c1c:	89 83       	std	Y+1, r24	; 0x01
    2c1e:	0e 5f       	subi	r16, 0xFE	; 254
    2c20:	1f 4f       	sbci	r17, 0xFF	; 255
    2c22:	88 24       	eor	r8, r8
    2c24:	83 94       	inc	r8
    2c26:	91 2c       	mov	r9, r1
    2c28:	53 01       	movw	r10, r6
    2c2a:	13 c0       	rjmp	.+38     	; 0x2c52 <vfprintf+0x154>
    2c2c:	28 01       	movw	r4, r16
    2c2e:	f2 e0       	ldi	r31, 0x02	; 2
    2c30:	4f 0e       	add	r4, r31
    2c32:	51 1c       	adc	r5, r1
    2c34:	f8 01       	movw	r30, r16
    2c36:	a0 80       	ld	r10, Z
    2c38:	b1 80       	ldd	r11, Z+1	; 0x01
    2c3a:	36 fe       	sbrs	r3, 6
    2c3c:	03 c0       	rjmp	.+6      	; 0x2c44 <vfprintf+0x146>
    2c3e:	69 2d       	mov	r22, r9
    2c40:	70 e0       	ldi	r23, 0x00	; 0
    2c42:	02 c0       	rjmp	.+4      	; 0x2c48 <vfprintf+0x14a>
    2c44:	6f ef       	ldi	r22, 0xFF	; 255
    2c46:	7f ef       	ldi	r23, 0xFF	; 255
    2c48:	c5 01       	movw	r24, r10
    2c4a:	0e 94 6b 17 	call	0x2ed6	; 0x2ed6 <strnlen>
    2c4e:	4c 01       	movw	r8, r24
    2c50:	82 01       	movw	r16, r4
    2c52:	f3 2d       	mov	r31, r3
    2c54:	ff 77       	andi	r31, 0x7F	; 127
    2c56:	3f 2e       	mov	r3, r31
    2c58:	16 c0       	rjmp	.+44     	; 0x2c86 <vfprintf+0x188>
    2c5a:	28 01       	movw	r4, r16
    2c5c:	22 e0       	ldi	r18, 0x02	; 2
    2c5e:	42 0e       	add	r4, r18
    2c60:	51 1c       	adc	r5, r1
    2c62:	f8 01       	movw	r30, r16
    2c64:	a0 80       	ld	r10, Z
    2c66:	b1 80       	ldd	r11, Z+1	; 0x01
    2c68:	36 fe       	sbrs	r3, 6
    2c6a:	03 c0       	rjmp	.+6      	; 0x2c72 <vfprintf+0x174>
    2c6c:	69 2d       	mov	r22, r9
    2c6e:	70 e0       	ldi	r23, 0x00	; 0
    2c70:	02 c0       	rjmp	.+4      	; 0x2c76 <vfprintf+0x178>
    2c72:	6f ef       	ldi	r22, 0xFF	; 255
    2c74:	7f ef       	ldi	r23, 0xFF	; 255
    2c76:	c5 01       	movw	r24, r10
    2c78:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <strnlen_P>
    2c7c:	4c 01       	movw	r8, r24
    2c7e:	f3 2d       	mov	r31, r3
    2c80:	f0 68       	ori	r31, 0x80	; 128
    2c82:	3f 2e       	mov	r3, r31
    2c84:	82 01       	movw	r16, r4
    2c86:	33 fc       	sbrc	r3, 3
    2c88:	1b c0       	rjmp	.+54     	; 0x2cc0 <vfprintf+0x1c2>
    2c8a:	82 2d       	mov	r24, r2
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	88 16       	cp	r8, r24
    2c90:	99 06       	cpc	r9, r25
    2c92:	b0 f4       	brcc	.+44     	; 0x2cc0 <vfprintf+0x1c2>
    2c94:	b6 01       	movw	r22, r12
    2c96:	80 e2       	ldi	r24, 0x20	; 32
    2c98:	90 e0       	ldi	r25, 0x00	; 0
    2c9a:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2c9e:	2a 94       	dec	r2
    2ca0:	f4 cf       	rjmp	.-24     	; 0x2c8a <vfprintf+0x18c>
    2ca2:	f5 01       	movw	r30, r10
    2ca4:	37 fc       	sbrc	r3, 7
    2ca6:	85 91       	lpm	r24, Z+
    2ca8:	37 fe       	sbrs	r3, 7
    2caa:	81 91       	ld	r24, Z+
    2cac:	5f 01       	movw	r10, r30
    2cae:	b6 01       	movw	r22, r12
    2cb0:	90 e0       	ldi	r25, 0x00	; 0
    2cb2:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2cb6:	21 10       	cpse	r2, r1
    2cb8:	2a 94       	dec	r2
    2cba:	21 e0       	ldi	r18, 0x01	; 1
    2cbc:	82 1a       	sub	r8, r18
    2cbe:	91 08       	sbc	r9, r1
    2cc0:	81 14       	cp	r8, r1
    2cc2:	91 04       	cpc	r9, r1
    2cc4:	71 f7       	brne	.-36     	; 0x2ca2 <vfprintf+0x1a4>
    2cc6:	e8 c0       	rjmp	.+464    	; 0x2e98 <vfprintf+0x39a>
    2cc8:	84 36       	cpi	r24, 0x64	; 100
    2cca:	11 f0       	breq	.+4      	; 0x2cd0 <vfprintf+0x1d2>
    2ccc:	89 36       	cpi	r24, 0x69	; 105
    2cce:	41 f5       	brne	.+80     	; 0x2d20 <vfprintf+0x222>
    2cd0:	f8 01       	movw	r30, r16
    2cd2:	37 fe       	sbrs	r3, 7
    2cd4:	07 c0       	rjmp	.+14     	; 0x2ce4 <vfprintf+0x1e6>
    2cd6:	60 81       	ld	r22, Z
    2cd8:	71 81       	ldd	r23, Z+1	; 0x01
    2cda:	82 81       	ldd	r24, Z+2	; 0x02
    2cdc:	93 81       	ldd	r25, Z+3	; 0x03
    2cde:	0c 5f       	subi	r16, 0xFC	; 252
    2ce0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ce2:	08 c0       	rjmp	.+16     	; 0x2cf4 <vfprintf+0x1f6>
    2ce4:	60 81       	ld	r22, Z
    2ce6:	71 81       	ldd	r23, Z+1	; 0x01
    2ce8:	07 2e       	mov	r0, r23
    2cea:	00 0c       	add	r0, r0
    2cec:	88 0b       	sbc	r24, r24
    2cee:	99 0b       	sbc	r25, r25
    2cf0:	0e 5f       	subi	r16, 0xFE	; 254
    2cf2:	1f 4f       	sbci	r17, 0xFF	; 255
    2cf4:	f3 2d       	mov	r31, r3
    2cf6:	ff 76       	andi	r31, 0x6F	; 111
    2cf8:	3f 2e       	mov	r3, r31
    2cfa:	97 ff       	sbrs	r25, 7
    2cfc:	09 c0       	rjmp	.+18     	; 0x2d10 <vfprintf+0x212>
    2cfe:	90 95       	com	r25
    2d00:	80 95       	com	r24
    2d02:	70 95       	com	r23
    2d04:	61 95       	neg	r22
    2d06:	7f 4f       	sbci	r23, 0xFF	; 255
    2d08:	8f 4f       	sbci	r24, 0xFF	; 255
    2d0a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d0c:	f0 68       	ori	r31, 0x80	; 128
    2d0e:	3f 2e       	mov	r3, r31
    2d10:	2a e0       	ldi	r18, 0x0A	; 10
    2d12:	30 e0       	ldi	r19, 0x00	; 0
    2d14:	a3 01       	movw	r20, r6
    2d16:	0e 94 b2 17 	call	0x2f64	; 0x2f64 <__ultoa_invert>
    2d1a:	88 2e       	mov	r8, r24
    2d1c:	86 18       	sub	r8, r6
    2d1e:	45 c0       	rjmp	.+138    	; 0x2daa <vfprintf+0x2ac>
    2d20:	85 37       	cpi	r24, 0x75	; 117
    2d22:	31 f4       	brne	.+12     	; 0x2d30 <vfprintf+0x232>
    2d24:	23 2d       	mov	r18, r3
    2d26:	2f 7e       	andi	r18, 0xEF	; 239
    2d28:	b2 2e       	mov	r11, r18
    2d2a:	2a e0       	ldi	r18, 0x0A	; 10
    2d2c:	30 e0       	ldi	r19, 0x00	; 0
    2d2e:	25 c0       	rjmp	.+74     	; 0x2d7a <vfprintf+0x27c>
    2d30:	93 2d       	mov	r25, r3
    2d32:	99 7f       	andi	r25, 0xF9	; 249
    2d34:	b9 2e       	mov	r11, r25
    2d36:	8f 36       	cpi	r24, 0x6F	; 111
    2d38:	c1 f0       	breq	.+48     	; 0x2d6a <vfprintf+0x26c>
    2d3a:	18 f4       	brcc	.+6      	; 0x2d42 <vfprintf+0x244>
    2d3c:	88 35       	cpi	r24, 0x58	; 88
    2d3e:	79 f0       	breq	.+30     	; 0x2d5e <vfprintf+0x260>
    2d40:	b5 c0       	rjmp	.+362    	; 0x2eac <vfprintf+0x3ae>
    2d42:	80 37       	cpi	r24, 0x70	; 112
    2d44:	19 f0       	breq	.+6      	; 0x2d4c <vfprintf+0x24e>
    2d46:	88 37       	cpi	r24, 0x78	; 120
    2d48:	21 f0       	breq	.+8      	; 0x2d52 <vfprintf+0x254>
    2d4a:	b0 c0       	rjmp	.+352    	; 0x2eac <vfprintf+0x3ae>
    2d4c:	e9 2f       	mov	r30, r25
    2d4e:	e0 61       	ori	r30, 0x10	; 16
    2d50:	be 2e       	mov	r11, r30
    2d52:	b4 fe       	sbrs	r11, 4
    2d54:	0d c0       	rjmp	.+26     	; 0x2d70 <vfprintf+0x272>
    2d56:	fb 2d       	mov	r31, r11
    2d58:	f4 60       	ori	r31, 0x04	; 4
    2d5a:	bf 2e       	mov	r11, r31
    2d5c:	09 c0       	rjmp	.+18     	; 0x2d70 <vfprintf+0x272>
    2d5e:	34 fe       	sbrs	r3, 4
    2d60:	0a c0       	rjmp	.+20     	; 0x2d76 <vfprintf+0x278>
    2d62:	29 2f       	mov	r18, r25
    2d64:	26 60       	ori	r18, 0x06	; 6
    2d66:	b2 2e       	mov	r11, r18
    2d68:	06 c0       	rjmp	.+12     	; 0x2d76 <vfprintf+0x278>
    2d6a:	28 e0       	ldi	r18, 0x08	; 8
    2d6c:	30 e0       	ldi	r19, 0x00	; 0
    2d6e:	05 c0       	rjmp	.+10     	; 0x2d7a <vfprintf+0x27c>
    2d70:	20 e1       	ldi	r18, 0x10	; 16
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	02 c0       	rjmp	.+4      	; 0x2d7a <vfprintf+0x27c>
    2d76:	20 e1       	ldi	r18, 0x10	; 16
    2d78:	32 e0       	ldi	r19, 0x02	; 2
    2d7a:	f8 01       	movw	r30, r16
    2d7c:	b7 fe       	sbrs	r11, 7
    2d7e:	07 c0       	rjmp	.+14     	; 0x2d8e <vfprintf+0x290>
    2d80:	60 81       	ld	r22, Z
    2d82:	71 81       	ldd	r23, Z+1	; 0x01
    2d84:	82 81       	ldd	r24, Z+2	; 0x02
    2d86:	93 81       	ldd	r25, Z+3	; 0x03
    2d88:	0c 5f       	subi	r16, 0xFC	; 252
    2d8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8c:	06 c0       	rjmp	.+12     	; 0x2d9a <vfprintf+0x29c>
    2d8e:	60 81       	ld	r22, Z
    2d90:	71 81       	ldd	r23, Z+1	; 0x01
    2d92:	80 e0       	ldi	r24, 0x00	; 0
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	0e 5f       	subi	r16, 0xFE	; 254
    2d98:	1f 4f       	sbci	r17, 0xFF	; 255
    2d9a:	a3 01       	movw	r20, r6
    2d9c:	0e 94 b2 17 	call	0x2f64	; 0x2f64 <__ultoa_invert>
    2da0:	88 2e       	mov	r8, r24
    2da2:	86 18       	sub	r8, r6
    2da4:	fb 2d       	mov	r31, r11
    2da6:	ff 77       	andi	r31, 0x7F	; 127
    2da8:	3f 2e       	mov	r3, r31
    2daa:	36 fe       	sbrs	r3, 6
    2dac:	0d c0       	rjmp	.+26     	; 0x2dc8 <vfprintf+0x2ca>
    2dae:	23 2d       	mov	r18, r3
    2db0:	2e 7f       	andi	r18, 0xFE	; 254
    2db2:	a2 2e       	mov	r10, r18
    2db4:	89 14       	cp	r8, r9
    2db6:	58 f4       	brcc	.+22     	; 0x2dce <vfprintf+0x2d0>
    2db8:	34 fe       	sbrs	r3, 4
    2dba:	0b c0       	rjmp	.+22     	; 0x2dd2 <vfprintf+0x2d4>
    2dbc:	32 fc       	sbrc	r3, 2
    2dbe:	09 c0       	rjmp	.+18     	; 0x2dd2 <vfprintf+0x2d4>
    2dc0:	83 2d       	mov	r24, r3
    2dc2:	8e 7e       	andi	r24, 0xEE	; 238
    2dc4:	a8 2e       	mov	r10, r24
    2dc6:	05 c0       	rjmp	.+10     	; 0x2dd2 <vfprintf+0x2d4>
    2dc8:	b8 2c       	mov	r11, r8
    2dca:	a3 2c       	mov	r10, r3
    2dcc:	03 c0       	rjmp	.+6      	; 0x2dd4 <vfprintf+0x2d6>
    2dce:	b8 2c       	mov	r11, r8
    2dd0:	01 c0       	rjmp	.+2      	; 0x2dd4 <vfprintf+0x2d6>
    2dd2:	b9 2c       	mov	r11, r9
    2dd4:	a4 fe       	sbrs	r10, 4
    2dd6:	0f c0       	rjmp	.+30     	; 0x2df6 <vfprintf+0x2f8>
    2dd8:	fe 01       	movw	r30, r28
    2dda:	e8 0d       	add	r30, r8
    2ddc:	f1 1d       	adc	r31, r1
    2dde:	80 81       	ld	r24, Z
    2de0:	80 33       	cpi	r24, 0x30	; 48
    2de2:	21 f4       	brne	.+8      	; 0x2dec <vfprintf+0x2ee>
    2de4:	9a 2d       	mov	r25, r10
    2de6:	99 7e       	andi	r25, 0xE9	; 233
    2de8:	a9 2e       	mov	r10, r25
    2dea:	09 c0       	rjmp	.+18     	; 0x2dfe <vfprintf+0x300>
    2dec:	a2 fe       	sbrs	r10, 2
    2dee:	06 c0       	rjmp	.+12     	; 0x2dfc <vfprintf+0x2fe>
    2df0:	b3 94       	inc	r11
    2df2:	b3 94       	inc	r11
    2df4:	04 c0       	rjmp	.+8      	; 0x2dfe <vfprintf+0x300>
    2df6:	8a 2d       	mov	r24, r10
    2df8:	86 78       	andi	r24, 0x86	; 134
    2dfa:	09 f0       	breq	.+2      	; 0x2dfe <vfprintf+0x300>
    2dfc:	b3 94       	inc	r11
    2dfe:	a3 fc       	sbrc	r10, 3
    2e00:	11 c0       	rjmp	.+34     	; 0x2e24 <vfprintf+0x326>
    2e02:	a0 fe       	sbrs	r10, 0
    2e04:	06 c0       	rjmp	.+12     	; 0x2e12 <vfprintf+0x314>
    2e06:	b2 14       	cp	r11, r2
    2e08:	88 f4       	brcc	.+34     	; 0x2e2c <vfprintf+0x32e>
    2e0a:	28 0c       	add	r2, r8
    2e0c:	92 2c       	mov	r9, r2
    2e0e:	9b 18       	sub	r9, r11
    2e10:	0e c0       	rjmp	.+28     	; 0x2e2e <vfprintf+0x330>
    2e12:	b2 14       	cp	r11, r2
    2e14:	60 f4       	brcc	.+24     	; 0x2e2e <vfprintf+0x330>
    2e16:	b6 01       	movw	r22, r12
    2e18:	80 e2       	ldi	r24, 0x20	; 32
    2e1a:	90 e0       	ldi	r25, 0x00	; 0
    2e1c:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2e20:	b3 94       	inc	r11
    2e22:	f7 cf       	rjmp	.-18     	; 0x2e12 <vfprintf+0x314>
    2e24:	b2 14       	cp	r11, r2
    2e26:	18 f4       	brcc	.+6      	; 0x2e2e <vfprintf+0x330>
    2e28:	2b 18       	sub	r2, r11
    2e2a:	02 c0       	rjmp	.+4      	; 0x2e30 <vfprintf+0x332>
    2e2c:	98 2c       	mov	r9, r8
    2e2e:	21 2c       	mov	r2, r1
    2e30:	a4 fe       	sbrs	r10, 4
    2e32:	10 c0       	rjmp	.+32     	; 0x2e54 <vfprintf+0x356>
    2e34:	b6 01       	movw	r22, r12
    2e36:	80 e3       	ldi	r24, 0x30	; 48
    2e38:	90 e0       	ldi	r25, 0x00	; 0
    2e3a:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2e3e:	a2 fe       	sbrs	r10, 2
    2e40:	17 c0       	rjmp	.+46     	; 0x2e70 <vfprintf+0x372>
    2e42:	a1 fc       	sbrc	r10, 1
    2e44:	03 c0       	rjmp	.+6      	; 0x2e4c <vfprintf+0x34e>
    2e46:	88 e7       	ldi	r24, 0x78	; 120
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	02 c0       	rjmp	.+4      	; 0x2e50 <vfprintf+0x352>
    2e4c:	88 e5       	ldi	r24, 0x58	; 88
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	b6 01       	movw	r22, r12
    2e52:	0c c0       	rjmp	.+24     	; 0x2e6c <vfprintf+0x36e>
    2e54:	8a 2d       	mov	r24, r10
    2e56:	86 78       	andi	r24, 0x86	; 134
    2e58:	59 f0       	breq	.+22     	; 0x2e70 <vfprintf+0x372>
    2e5a:	a1 fe       	sbrs	r10, 1
    2e5c:	02 c0       	rjmp	.+4      	; 0x2e62 <vfprintf+0x364>
    2e5e:	8b e2       	ldi	r24, 0x2B	; 43
    2e60:	01 c0       	rjmp	.+2      	; 0x2e64 <vfprintf+0x366>
    2e62:	80 e2       	ldi	r24, 0x20	; 32
    2e64:	a7 fc       	sbrc	r10, 7
    2e66:	8d e2       	ldi	r24, 0x2D	; 45
    2e68:	b6 01       	movw	r22, r12
    2e6a:	90 e0       	ldi	r25, 0x00	; 0
    2e6c:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2e70:	89 14       	cp	r8, r9
    2e72:	38 f4       	brcc	.+14     	; 0x2e82 <vfprintf+0x384>
    2e74:	b6 01       	movw	r22, r12
    2e76:	80 e3       	ldi	r24, 0x30	; 48
    2e78:	90 e0       	ldi	r25, 0x00	; 0
    2e7a:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2e7e:	9a 94       	dec	r9
    2e80:	f7 cf       	rjmp	.-18     	; 0x2e70 <vfprintf+0x372>
    2e82:	8a 94       	dec	r8
    2e84:	f3 01       	movw	r30, r6
    2e86:	e8 0d       	add	r30, r8
    2e88:	f1 1d       	adc	r31, r1
    2e8a:	80 81       	ld	r24, Z
    2e8c:	b6 01       	movw	r22, r12
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2e94:	81 10       	cpse	r8, r1
    2e96:	f5 cf       	rjmp	.-22     	; 0x2e82 <vfprintf+0x384>
    2e98:	22 20       	and	r2, r2
    2e9a:	09 f4       	brne	.+2      	; 0x2e9e <vfprintf+0x3a0>
    2e9c:	42 ce       	rjmp	.-892    	; 0x2b22 <vfprintf+0x24>
    2e9e:	b6 01       	movw	r22, r12
    2ea0:	80 e2       	ldi	r24, 0x20	; 32
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	0e 94 76 17 	call	0x2eec	; 0x2eec <fputc>
    2ea8:	2a 94       	dec	r2
    2eaa:	f6 cf       	rjmp	.-20     	; 0x2e98 <vfprintf+0x39a>
    2eac:	f6 01       	movw	r30, r12
    2eae:	86 81       	ldd	r24, Z+6	; 0x06
    2eb0:	97 81       	ldd	r25, Z+7	; 0x07
    2eb2:	02 c0       	rjmp	.+4      	; 0x2eb8 <vfprintf+0x3ba>
    2eb4:	8f ef       	ldi	r24, 0xFF	; 255
    2eb6:	9f ef       	ldi	r25, 0xFF	; 255
    2eb8:	2b 96       	adiw	r28, 0x0b	; 11
    2eba:	e2 e1       	ldi	r30, 0x12	; 18
    2ebc:	0c 94 2c 18 	jmp	0x3058	; 0x3058 <__epilogue_restores__>

00002ec0 <strnlen_P>:
    2ec0:	fc 01       	movw	r30, r24
    2ec2:	05 90       	lpm	r0, Z+
    2ec4:	61 50       	subi	r22, 0x01	; 1
    2ec6:	70 40       	sbci	r23, 0x00	; 0
    2ec8:	01 10       	cpse	r0, r1
    2eca:	d8 f7       	brcc	.-10     	; 0x2ec2 <strnlen_P+0x2>
    2ecc:	80 95       	com	r24
    2ece:	90 95       	com	r25
    2ed0:	8e 0f       	add	r24, r30
    2ed2:	9f 1f       	adc	r25, r31
    2ed4:	08 95       	ret

00002ed6 <strnlen>:
    2ed6:	fc 01       	movw	r30, r24
    2ed8:	61 50       	subi	r22, 0x01	; 1
    2eda:	70 40       	sbci	r23, 0x00	; 0
    2edc:	01 90       	ld	r0, Z+
    2ede:	01 10       	cpse	r0, r1
    2ee0:	d8 f7       	brcc	.-10     	; 0x2ed8 <strnlen+0x2>
    2ee2:	80 95       	com	r24
    2ee4:	90 95       	com	r25
    2ee6:	8e 0f       	add	r24, r30
    2ee8:	9f 1f       	adc	r25, r31
    2eea:	08 95       	ret

00002eec <fputc>:
    2eec:	0f 93       	push	r16
    2eee:	1f 93       	push	r17
    2ef0:	cf 93       	push	r28
    2ef2:	df 93       	push	r29
    2ef4:	fb 01       	movw	r30, r22
    2ef6:	23 81       	ldd	r18, Z+3	; 0x03
    2ef8:	21 fd       	sbrc	r18, 1
    2efa:	03 c0       	rjmp	.+6      	; 0x2f02 <fputc+0x16>
    2efc:	8f ef       	ldi	r24, 0xFF	; 255
    2efe:	9f ef       	ldi	r25, 0xFF	; 255
    2f00:	2c c0       	rjmp	.+88     	; 0x2f5a <fputc+0x6e>
    2f02:	22 ff       	sbrs	r18, 2
    2f04:	16 c0       	rjmp	.+44     	; 0x2f32 <fputc+0x46>
    2f06:	46 81       	ldd	r20, Z+6	; 0x06
    2f08:	57 81       	ldd	r21, Z+7	; 0x07
    2f0a:	24 81       	ldd	r18, Z+4	; 0x04
    2f0c:	35 81       	ldd	r19, Z+5	; 0x05
    2f0e:	42 17       	cp	r20, r18
    2f10:	53 07       	cpc	r21, r19
    2f12:	44 f4       	brge	.+16     	; 0x2f24 <fputc+0x38>
    2f14:	a0 81       	ld	r26, Z
    2f16:	b1 81       	ldd	r27, Z+1	; 0x01
    2f18:	9d 01       	movw	r18, r26
    2f1a:	2f 5f       	subi	r18, 0xFF	; 255
    2f1c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f1e:	31 83       	std	Z+1, r19	; 0x01
    2f20:	20 83       	st	Z, r18
    2f22:	8c 93       	st	X, r24
    2f24:	26 81       	ldd	r18, Z+6	; 0x06
    2f26:	37 81       	ldd	r19, Z+7	; 0x07
    2f28:	2f 5f       	subi	r18, 0xFF	; 255
    2f2a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f2c:	37 83       	std	Z+7, r19	; 0x07
    2f2e:	26 83       	std	Z+6, r18	; 0x06
    2f30:	14 c0       	rjmp	.+40     	; 0x2f5a <fputc+0x6e>
    2f32:	8b 01       	movw	r16, r22
    2f34:	ec 01       	movw	r28, r24
    2f36:	fb 01       	movw	r30, r22
    2f38:	00 84       	ldd	r0, Z+8	; 0x08
    2f3a:	f1 85       	ldd	r31, Z+9	; 0x09
    2f3c:	e0 2d       	mov	r30, r0
    2f3e:	09 95       	icall
    2f40:	89 2b       	or	r24, r25
    2f42:	e1 f6       	brne	.-72     	; 0x2efc <fputc+0x10>
    2f44:	d8 01       	movw	r26, r16
    2f46:	16 96       	adiw	r26, 0x06	; 6
    2f48:	8d 91       	ld	r24, X+
    2f4a:	9c 91       	ld	r25, X
    2f4c:	17 97       	sbiw	r26, 0x07	; 7
    2f4e:	01 96       	adiw	r24, 0x01	; 1
    2f50:	17 96       	adiw	r26, 0x07	; 7
    2f52:	9c 93       	st	X, r25
    2f54:	8e 93       	st	-X, r24
    2f56:	16 97       	sbiw	r26, 0x06	; 6
    2f58:	ce 01       	movw	r24, r28
    2f5a:	df 91       	pop	r29
    2f5c:	cf 91       	pop	r28
    2f5e:	1f 91       	pop	r17
    2f60:	0f 91       	pop	r16
    2f62:	08 95       	ret

00002f64 <__ultoa_invert>:
    2f64:	fa 01       	movw	r30, r20
    2f66:	aa 27       	eor	r26, r26
    2f68:	28 30       	cpi	r18, 0x08	; 8
    2f6a:	51 f1       	breq	.+84     	; 0x2fc0 <__ultoa_invert+0x5c>
    2f6c:	20 31       	cpi	r18, 0x10	; 16
    2f6e:	81 f1       	breq	.+96     	; 0x2fd0 <__ultoa_invert+0x6c>
    2f70:	e8 94       	clt
    2f72:	6f 93       	push	r22
    2f74:	6e 7f       	andi	r22, 0xFE	; 254
    2f76:	6e 5f       	subi	r22, 0xFE	; 254
    2f78:	7f 4f       	sbci	r23, 0xFF	; 255
    2f7a:	8f 4f       	sbci	r24, 0xFF	; 255
    2f7c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f7e:	af 4f       	sbci	r26, 0xFF	; 255
    2f80:	b1 e0       	ldi	r27, 0x01	; 1
    2f82:	3e d0       	rcall	.+124    	; 0x3000 <__ultoa_invert+0x9c>
    2f84:	b4 e0       	ldi	r27, 0x04	; 4
    2f86:	3c d0       	rcall	.+120    	; 0x3000 <__ultoa_invert+0x9c>
    2f88:	67 0f       	add	r22, r23
    2f8a:	78 1f       	adc	r23, r24
    2f8c:	89 1f       	adc	r24, r25
    2f8e:	9a 1f       	adc	r25, r26
    2f90:	a1 1d       	adc	r26, r1
    2f92:	68 0f       	add	r22, r24
    2f94:	79 1f       	adc	r23, r25
    2f96:	8a 1f       	adc	r24, r26
    2f98:	91 1d       	adc	r25, r1
    2f9a:	a1 1d       	adc	r26, r1
    2f9c:	6a 0f       	add	r22, r26
    2f9e:	71 1d       	adc	r23, r1
    2fa0:	81 1d       	adc	r24, r1
    2fa2:	91 1d       	adc	r25, r1
    2fa4:	a1 1d       	adc	r26, r1
    2fa6:	20 d0       	rcall	.+64     	; 0x2fe8 <__ultoa_invert+0x84>
    2fa8:	09 f4       	brne	.+2      	; 0x2fac <__ultoa_invert+0x48>
    2faa:	68 94       	set
    2fac:	3f 91       	pop	r19
    2fae:	2a e0       	ldi	r18, 0x0A	; 10
    2fb0:	26 9f       	mul	r18, r22
    2fb2:	11 24       	eor	r1, r1
    2fb4:	30 19       	sub	r19, r0
    2fb6:	30 5d       	subi	r19, 0xD0	; 208
    2fb8:	31 93       	st	Z+, r19
    2fba:	de f6       	brtc	.-74     	; 0x2f72 <__ultoa_invert+0xe>
    2fbc:	cf 01       	movw	r24, r30
    2fbe:	08 95       	ret
    2fc0:	46 2f       	mov	r20, r22
    2fc2:	47 70       	andi	r20, 0x07	; 7
    2fc4:	40 5d       	subi	r20, 0xD0	; 208
    2fc6:	41 93       	st	Z+, r20
    2fc8:	b3 e0       	ldi	r27, 0x03	; 3
    2fca:	0f d0       	rcall	.+30     	; 0x2fea <__ultoa_invert+0x86>
    2fcc:	c9 f7       	brne	.-14     	; 0x2fc0 <__ultoa_invert+0x5c>
    2fce:	f6 cf       	rjmp	.-20     	; 0x2fbc <__ultoa_invert+0x58>
    2fd0:	46 2f       	mov	r20, r22
    2fd2:	4f 70       	andi	r20, 0x0F	; 15
    2fd4:	40 5d       	subi	r20, 0xD0	; 208
    2fd6:	4a 33       	cpi	r20, 0x3A	; 58
    2fd8:	18 f0       	brcs	.+6      	; 0x2fe0 <__ultoa_invert+0x7c>
    2fda:	49 5d       	subi	r20, 0xD9	; 217
    2fdc:	31 fd       	sbrc	r19, 1
    2fde:	40 52       	subi	r20, 0x20	; 32
    2fe0:	41 93       	st	Z+, r20
    2fe2:	02 d0       	rcall	.+4      	; 0x2fe8 <__ultoa_invert+0x84>
    2fe4:	a9 f7       	brne	.-22     	; 0x2fd0 <__ultoa_invert+0x6c>
    2fe6:	ea cf       	rjmp	.-44     	; 0x2fbc <__ultoa_invert+0x58>
    2fe8:	b4 e0       	ldi	r27, 0x04	; 4
    2fea:	a6 95       	lsr	r26
    2fec:	97 95       	ror	r25
    2fee:	87 95       	ror	r24
    2ff0:	77 95       	ror	r23
    2ff2:	67 95       	ror	r22
    2ff4:	ba 95       	dec	r27
    2ff6:	c9 f7       	brne	.-14     	; 0x2fea <__ultoa_invert+0x86>
    2ff8:	00 97       	sbiw	r24, 0x00	; 0
    2ffa:	61 05       	cpc	r22, r1
    2ffc:	71 05       	cpc	r23, r1
    2ffe:	08 95       	ret
    3000:	9b 01       	movw	r18, r22
    3002:	ac 01       	movw	r20, r24
    3004:	0a 2e       	mov	r0, r26
    3006:	06 94       	lsr	r0
    3008:	57 95       	ror	r21
    300a:	47 95       	ror	r20
    300c:	37 95       	ror	r19
    300e:	27 95       	ror	r18
    3010:	ba 95       	dec	r27
    3012:	c9 f7       	brne	.-14     	; 0x3006 <__ultoa_invert+0xa2>
    3014:	62 0f       	add	r22, r18
    3016:	73 1f       	adc	r23, r19
    3018:	84 1f       	adc	r24, r20
    301a:	95 1f       	adc	r25, r21
    301c:	a0 1d       	adc	r26, r0
    301e:	08 95       	ret

00003020 <__prologue_saves__>:
    3020:	2f 92       	push	r2
    3022:	3f 92       	push	r3
    3024:	4f 92       	push	r4
    3026:	5f 92       	push	r5
    3028:	6f 92       	push	r6
    302a:	7f 92       	push	r7
    302c:	8f 92       	push	r8
    302e:	9f 92       	push	r9
    3030:	af 92       	push	r10
    3032:	bf 92       	push	r11
    3034:	cf 92       	push	r12
    3036:	df 92       	push	r13
    3038:	ef 92       	push	r14
    303a:	ff 92       	push	r15
    303c:	0f 93       	push	r16
    303e:	1f 93       	push	r17
    3040:	cf 93       	push	r28
    3042:	df 93       	push	r29
    3044:	cd b7       	in	r28, 0x3d	; 61
    3046:	de b7       	in	r29, 0x3e	; 62
    3048:	ca 1b       	sub	r28, r26
    304a:	db 0b       	sbc	r29, r27
    304c:	0f b6       	in	r0, 0x3f	; 63
    304e:	f8 94       	cli
    3050:	de bf       	out	0x3e, r29	; 62
    3052:	0f be       	out	0x3f, r0	; 63
    3054:	cd bf       	out	0x3d, r28	; 61
    3056:	09 94       	ijmp

00003058 <__epilogue_restores__>:
    3058:	2a 88       	ldd	r2, Y+18	; 0x12
    305a:	39 88       	ldd	r3, Y+17	; 0x11
    305c:	48 88       	ldd	r4, Y+16	; 0x10
    305e:	5f 84       	ldd	r5, Y+15	; 0x0f
    3060:	6e 84       	ldd	r6, Y+14	; 0x0e
    3062:	7d 84       	ldd	r7, Y+13	; 0x0d
    3064:	8c 84       	ldd	r8, Y+12	; 0x0c
    3066:	9b 84       	ldd	r9, Y+11	; 0x0b
    3068:	aa 84       	ldd	r10, Y+10	; 0x0a
    306a:	b9 84       	ldd	r11, Y+9	; 0x09
    306c:	c8 84       	ldd	r12, Y+8	; 0x08
    306e:	df 80       	ldd	r13, Y+7	; 0x07
    3070:	ee 80       	ldd	r14, Y+6	; 0x06
    3072:	fd 80       	ldd	r15, Y+5	; 0x05
    3074:	0c 81       	ldd	r16, Y+4	; 0x04
    3076:	1b 81       	ldd	r17, Y+3	; 0x03
    3078:	aa 81       	ldd	r26, Y+2	; 0x02
    307a:	b9 81       	ldd	r27, Y+1	; 0x01
    307c:	ce 0f       	add	r28, r30
    307e:	d1 1d       	adc	r29, r1
    3080:	0f b6       	in	r0, 0x3f	; 63
    3082:	f8 94       	cli
    3084:	de bf       	out	0x3e, r29	; 62
    3086:	0f be       	out	0x3f, r0	; 63
    3088:	cd bf       	out	0x3d, r28	; 61
    308a:	ed 01       	movw	r28, r26
    308c:	08 95       	ret

0000308e <_exit>:
    308e:	f8 94       	cli

00003090 <__stop_program>:
    3090:	ff cf       	rjmp	.-2      	; 0x3090 <__stop_program>
