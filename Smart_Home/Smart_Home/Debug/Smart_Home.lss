
Smart_Home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011c  00800060  000009f0  00000a64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bb0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e23  00000000  00000000  00000cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000956  00000000  00000000  00002aff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d45  00000000  00000000  00003455  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000230  00000000  00000000  0000419c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006e7  00000000  00000000  000043cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e31  00000000  00000000  00004ab3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  000058e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 94 02 	call	0x528	; 0x528 <main>
  7a:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <KPD_voidInit>:


void	KPD_voidInit(void)
{
	//Setting Columns to output
	DIO_voidSetPinDirection(KPD_C0_Port,KPD_C0_Pin,DIO_PIN_OUTPUT);
  82:	41 e0       	ldi	r20, 0x01	; 1
  84:	64 e0       	ldi	r22, 0x04	; 4
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_C1_Port,KPD_C1_Pin,DIO_PIN_OUTPUT);
  8c:	41 e0       	ldi	r20, 0x01	; 1
  8e:	65 e0       	ldi	r22, 0x05	; 5
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_C2_Port,KPD_C2_Pin,DIO_PIN_OUTPUT);
  96:	41 e0       	ldi	r20, 0x01	; 1
  98:	66 e0       	ldi	r22, 0x06	; 6
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	
	
	//Setting Rows To Input
	DIO_voidSetPinDirection(KPD_R0_Port,KPD_R0_Pin,DIO_PIN_INPUT);
  a0:	40 e0       	ldi	r20, 0x00	; 0
  a2:	63 e0       	ldi	r22, 0x03	; 3
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_R1_Port,KPD_R1_Pin,DIO_PIN_INPUT);
  aa:	40 e0       	ldi	r20, 0x00	; 0
  ac:	64 e0       	ldi	r22, 0x04	; 4
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_R2_Port,KPD_R2_Pin,DIO_PIN_INPUT);
  b4:	40 e0       	ldi	r20, 0x00	; 0
  b6:	65 e0       	ldi	r22, 0x05	; 5
  b8:	82 e0       	ldi	r24, 0x02	; 2
  ba:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_R3_Port,KPD_R3_Pin,DIO_PIN_INPUT);
  be:	40 e0       	ldi	r20, 0x00	; 0
  c0:	66 e0       	ldi	r22, 0x06	; 6
  c2:	82 e0       	ldi	r24, 0x02	; 2
  c4:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
	
	//Setting Rows For Pull UP
	DIO_voidActivePinInPullUpResistance(KPD_R0_Port,KPD_R0_Pin);
  c8:	63 e0       	ldi	r22, 0x03	; 3
  ca:	82 e0       	ldi	r24, 0x02	; 2
  cc:	0e 94 be 04 	call	0x97c	; 0x97c <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_R1_Port,KPD_R1_Pin);
  d0:	64 e0       	ldi	r22, 0x04	; 4
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	0e 94 be 04 	call	0x97c	; 0x97c <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_R2_Port,KPD_R2_Pin);
  d8:	65 e0       	ldi	r22, 0x05	; 5
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 be 04 	call	0x97c	; 0x97c <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_R3_Port,KPD_R3_Pin);
  e0:	66 e0       	ldi	r22, 0x06	; 6
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 be 04 	call	0x97c	; 0x97c <DIO_voidActivePinInPullUpResistance>
  e8:	08 95       	ret

000000ea <KPD_voidGetValue>:
}


void	KPD_voidGetValue(u8* copy_pu8value)
{
  ea:	6f 92       	push	r6
  ec:	7f 92       	push	r7
  ee:	8f 92       	push	r8
  f0:	9f 92       	push	r9
  f2:	af 92       	push	r10
  f4:	bf 92       	push	r11
  f6:	cf 92       	push	r12
  f8:	df 92       	push	r13
  fa:	ef 92       	push	r14
  fc:	ff 92       	push	r15
  fe:	0f 93       	push	r16
 100:	1f 93       	push	r17
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
 10a:	a1 97       	sbiw	r28, 0x21	; 33
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	f8 94       	cli
 110:	de bf       	out	0x3e, r29	; 62
 112:	0f be       	out	0x3f, r0	; 63
 114:	cd bf       	out	0x3d, r28	; 61
	if (copy_pu8value != NULL)
 116:	00 97       	sbiw	r24, 0x00	; 0
 118:	09 f4       	brne	.+2      	; 0x11c <KPD_voidGetValue+0x32>
 11a:	85 c0       	rjmp	.+266    	; 0x226 <KPD_voidGetValue+0x13c>
 11c:	5c 01       	movw	r10, r24
	{
		u8	Local_u8ColsPort[4]={KPD_C0_Port,KPD_C1_Port,KPD_C2_Port};
 11e:	1d 8e       	std	Y+29, r1	; 0x1d
 120:	1e 8e       	std	Y+30, r1	; 0x1e
 122:	1f 8e       	std	Y+31, r1	; 0x1f
 124:	18 a2       	std	Y+32, r1	; 0x20
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	8d 8f       	std	Y+29, r24	; 0x1d
 12a:	8e 8f       	std	Y+30, r24	; 0x1e
 12c:	8f 8f       	std	Y+31, r24	; 0x1f
		u8	Local_u8ColsPins[4]={KPD_C0_Pin,KPD_C1_Pin,KPD_C2_Pin};
 12e:	19 8e       	std	Y+25, r1	; 0x19
 130:	1a 8e       	std	Y+26, r1	; 0x1a
 132:	1b 8e       	std	Y+27, r1	; 0x1b
 134:	1c 8e       	std	Y+28, r1	; 0x1c
 136:	34 e0       	ldi	r19, 0x04	; 4
 138:	39 8f       	std	Y+25, r19	; 0x19
 13a:	25 e0       	ldi	r18, 0x05	; 5
 13c:	2a 8f       	std	Y+26, r18	; 0x1a
 13e:	96 e0       	ldi	r25, 0x06	; 6
 140:	9b 8f       	std	Y+27, r25	; 0x1b
									 
		u8	Local_u8RowsPort[4]={KPD_R0_Port,KPD_R1_Port,KPD_R2_Port,KPD_R3_Port};
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	8d 8b       	std	Y+21, r24	; 0x15
 146:	8e 8b       	std	Y+22, r24	; 0x16
 148:	8f 8b       	std	Y+23, r24	; 0x17
 14a:	88 8f       	std	Y+24, r24	; 0x18
		u8	Local_u8RowsPins[4]={KPD_R0_Pin,KPD_R1_Pin,KPD_R2_Pin,KPD_R3_Pin};
 14c:	83 e0       	ldi	r24, 0x03	; 3
 14e:	89 8b       	std	Y+17, r24	; 0x11
 150:	3a 8b       	std	Y+18, r19	; 0x12
 152:	2b 8b       	std	Y+19, r18	; 0x13
 154:	9c 8b       	std	Y+20, r25	; 0x14
		u8	Local_Keys[4][4]   =KPD_Keys;
 156:	80 e1       	ldi	r24, 0x10	; 16
 158:	e0 e6       	ldi	r30, 0x60	; 96
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	de 01       	movw	r26, r28
 15e:	11 96       	adiw	r26, 0x01	; 1
 160:	01 90       	ld	r0, Z+
 162:	0d 92       	st	X+, r0
 164:	8a 95       	dec	r24
 166:	e1 f7       	brne	.-8      	; 0x160 <KPD_voidGetValue+0x76>
		
		u8	Local_u8ColsCounter,Local_u8RowsCounter;
		u8	Local_u8RowValue;
		
		*copy_pu8value = KPD_Not_Pressed;
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	f5 01       	movw	r30, r10
 16c:	80 83       	st	Z, r24
		//LOOP Columns
		for (Local_u8ColsCounter=0 ; Local_u8ColsCounter<4 ; Local_u8ColsCounter++)
 16e:	81 2c       	mov	r8, r1
 170:	56 c0       	rjmp	.+172    	; 0x21e <KPD_voidGetValue+0x134>
		{
			//Activate Each Column
			DIO_voidSetPinValue(Local_u8ColsPort[Local_u8ColsCounter] , Local_u8ColsPins[Local_u8ColsCounter],DIO_PIN_LOW);
 172:	c8 2c       	mov	r12, r8
 174:	d1 2c       	mov	r13, r1
 176:	e9 e1       	ldi	r30, 0x19	; 25
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	ec 0f       	add	r30, r28
 17c:	fd 1f       	adc	r31, r29
 17e:	ec 0d       	add	r30, r12
 180:	fd 1d       	adc	r31, r13
 182:	60 80       	ld	r6, Z
 184:	ed e1       	ldi	r30, 0x1D	; 29
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	ec 0f       	add	r30, r28
 18a:	fd 1f       	adc	r31, r29
 18c:	ec 0d       	add	r30, r12
 18e:	fd 1d       	adc	r31, r13
 190:	70 80       	ld	r7, Z
 192:	40 e0       	ldi	r20, 0x00	; 0
 194:	66 2d       	mov	r22, r6
 196:	87 2d       	mov	r24, r7
 198:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
			
			//LOOP Rows
			for(Local_u8RowsCounter=0 ; Local_u8RowsCounter<4 ; Local_u8RowsCounter++)
 19c:	10 e0       	ldi	r17, 0x00	; 0
 19e:	37 c0       	rjmp	.+110    	; 0x20e <KPD_voidGetValue+0x124>
			{
				//Get Row Pin Value
				DIO_voidGetPinValue(Local_u8RowsPort[Local_u8RowsCounter] ,Local_u8RowsPins[Local_u8RowsCounter], &Local_u8RowValue );
 1a0:	e1 2e       	mov	r14, r17
 1a2:	f1 2c       	mov	r15, r1
 1a4:	e1 e1       	ldi	r30, 0x11	; 17
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	ec 0f       	add	r30, r28
 1aa:	fd 1f       	adc	r31, r29
 1ac:	ee 0d       	add	r30, r14
 1ae:	ff 1d       	adc	r31, r15
 1b0:	00 81       	ld	r16, Z
 1b2:	e5 e1       	ldi	r30, 0x15	; 21
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	ec 0f       	add	r30, r28
 1b8:	fd 1f       	adc	r31, r29
 1ba:	ee 0d       	add	r30, r14
 1bc:	ff 1d       	adc	r31, r15
 1be:	90 80       	ld	r9, Z
 1c0:	ae 01       	movw	r20, r28
 1c2:	4f 5d       	subi	r20, 0xDF	; 223
 1c4:	5f 4f       	sbci	r21, 0xFF	; 255
 1c6:	60 2f       	mov	r22, r16
 1c8:	89 2d       	mov	r24, r9
 1ca:	0e 94 83 04 	call	0x906	; 0x906 <DIO_voidGetPinValue>
				
				// Is Pressed ?
				if (0==Local_u8RowValue)
 1ce:	89 a1       	ldd	r24, Y+33	; 0x21
 1d0:	81 11       	cpse	r24, r1
 1d2:	1c c0       	rjmp	.+56     	; 0x20c <KPD_voidGetValue+0x122>
 1d4:	07 c0       	rjmp	.+14     	; 0x1e4 <KPD_voidGetValue+0xfa>
				{
					//Busy wait for button release
					while(0==Local_u8RowValue)
					{
						DIO_voidGetPinValue(Local_u8RowsPort[Local_u8RowsCounter] ,Local_u8RowsPins[Local_u8RowsCounter], &Local_u8RowValue );
 1d6:	ae 01       	movw	r20, r28
 1d8:	4f 5d       	subi	r20, 0xDF	; 223
 1da:	5f 4f       	sbci	r21, 0xFF	; 255
 1dc:	60 2f       	mov	r22, r16
 1de:	89 2d       	mov	r24, r9
 1e0:	0e 94 83 04 	call	0x906	; 0x906 <DIO_voidGetPinValue>
				
				// Is Pressed ?
				if (0==Local_u8RowValue)
				{
					//Busy wait for button release
					while(0==Local_u8RowValue)
 1e4:	89 a1       	ldd	r24, Y+33	; 0x21
 1e6:	88 23       	and	r24, r24
 1e8:	b1 f3       	breq	.-20     	; 0x1d6 <KPD_voidGetValue+0xec>
					{
						DIO_voidGetPinValue(Local_u8RowsPort[Local_u8RowsCounter] ,Local_u8RowsPins[Local_u8RowsCounter], &Local_u8RowValue );
					}
					//return value
					*copy_pu8value = Local_Keys[Local_u8RowsCounter][Local_u8ColsCounter];
 1ea:	ee 0c       	add	r14, r14
 1ec:	ff 1c       	adc	r15, r15
 1ee:	ee 0c       	add	r14, r14
 1f0:	ff 1c       	adc	r15, r15
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	8c 0f       	add	r24, r28
 1f8:	9d 1f       	adc	r25, r29
 1fa:	e8 0e       	add	r14, r24
 1fc:	f9 1e       	adc	r15, r25
 1fe:	f7 01       	movw	r30, r14
 200:	ec 0d       	add	r30, r12
 202:	fd 1d       	adc	r31, r13
 204:	80 81       	ld	r24, Z
 206:	f5 01       	movw	r30, r10
 208:	80 83       	st	Z, r24
 20a:	0d c0       	rjmp	.+26     	; 0x226 <KPD_voidGetValue+0x13c>
		{
			//Activate Each Column
			DIO_voidSetPinValue(Local_u8ColsPort[Local_u8ColsCounter] , Local_u8ColsPins[Local_u8ColsCounter],DIO_PIN_LOW);
			
			//LOOP Rows
			for(Local_u8RowsCounter=0 ; Local_u8RowsCounter<4 ; Local_u8RowsCounter++)
 20c:	1f 5f       	subi	r17, 0xFF	; 255
 20e:	14 30       	cpi	r17, 0x04	; 4
 210:	38 f2       	brcs	.-114    	; 0x1a0 <KPD_voidGetValue+0xb6>
					//return value
					*copy_pu8value = Local_Keys[Local_u8RowsCounter][Local_u8ColsCounter];
					return;
				}
			}
			DIO_voidSetPinValue(Local_u8ColsPort[Local_u8ColsCounter],Local_u8ColsPins[Local_u8ColsCounter],DIO_PIN_HIGH);
 212:	41 e0       	ldi	r20, 0x01	; 1
 214:	66 2d       	mov	r22, r6
 216:	87 2d       	mov	r24, r7
 218:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
		u8	Local_u8ColsCounter,Local_u8RowsCounter;
		u8	Local_u8RowValue;
		
		*copy_pu8value = KPD_Not_Pressed;
		//LOOP Columns
		for (Local_u8ColsCounter=0 ; Local_u8ColsCounter<4 ; Local_u8ColsCounter++)
 21c:	83 94       	inc	r8
 21e:	f3 e0       	ldi	r31, 0x03	; 3
 220:	f8 15       	cp	r31, r8
 222:	08 f0       	brcs	.+2      	; 0x226 <KPD_voidGetValue+0x13c>
 224:	a6 cf       	rjmp	.-180    	; 0x172 <KPD_voidGetValue+0x88>
	}
	else
	{
		
	}
 226:	a1 96       	adiw	r28, 0x21	; 33
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	1f 91       	pop	r17
 238:	0f 91       	pop	r16
 23a:	ff 90       	pop	r15
 23c:	ef 90       	pop	r14
 23e:	df 90       	pop	r13
 240:	cf 90       	pop	r12
 242:	bf 90       	pop	r11
 244:	af 90       	pop	r10
 246:	9f 90       	pop	r9
 248:	8f 90       	pop	r8
 24a:	7f 90       	pop	r7
 24c:	6f 90       	pop	r6
 24e:	08 95       	ret

00000250 <PRV_voidWriteHalfPort>:
	{
		LCD_voidDisplayChar(Str[local_u8Counter]);
		local_u8Counter++;
	}
	
}
 250:	cf 93       	push	r28
 252:	c8 2f       	mov	r28, r24
 254:	80 ff       	sbrs	r24, 0
 256:	06 c0       	rjmp	.+12     	; 0x264 <PRV_voidWriteHalfPort+0x14>
 258:	41 e0       	ldi	r20, 0x01	; 1
 25a:	64 e0       	ldi	r22, 0x04	; 4
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 262:	05 c0       	rjmp	.+10     	; 0x26e <PRV_voidWriteHalfPort+0x1e>
 264:	40 e0       	ldi	r20, 0x00	; 0
 266:	64 e0       	ldi	r22, 0x04	; 4
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 26e:	c1 ff       	sbrs	r28, 1
 270:	06 c0       	rjmp	.+12     	; 0x27e <PRV_voidWriteHalfPort+0x2e>
 272:	41 e0       	ldi	r20, 0x01	; 1
 274:	65 e0       	ldi	r22, 0x05	; 5
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 27c:	05 c0       	rjmp	.+10     	; 0x288 <PRV_voidWriteHalfPort+0x38>
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	65 e0       	ldi	r22, 0x05	; 5
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 288:	c2 ff       	sbrs	r28, 2
 28a:	06 c0       	rjmp	.+12     	; 0x298 <PRV_voidWriteHalfPort+0x48>
 28c:	41 e0       	ldi	r20, 0x01	; 1
 28e:	66 e0       	ldi	r22, 0x06	; 6
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 296:	05 c0       	rjmp	.+10     	; 0x2a2 <PRV_voidWriteHalfPort+0x52>
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	66 e0       	ldi	r22, 0x06	; 6
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 2a2:	c3 ff       	sbrs	r28, 3
 2a4:	06 c0       	rjmp	.+12     	; 0x2b2 <PRV_voidWriteHalfPort+0x62>
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	67 e0       	ldi	r22, 0x07	; 7
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 2b0:	05 c0       	rjmp	.+10     	; 0x2bc <PRV_voidWriteHalfPort+0x6c>
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	67 e0       	ldi	r22, 0x07	; 7
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 2bc:	cf 91       	pop	r28
 2be:	08 95       	ret

000002c0 <LCD_voidSendCommand>:
 2c0:	cf 93       	push	r28
 2c2:	c8 2f       	mov	r28, r24
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	61 e0       	ldi	r22, 0x01	; 1
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 2d8:	8c 2f       	mov	r24, r28
 2da:	82 95       	swap	r24
 2dc:	8f 70       	andi	r24, 0x0F	; 15
 2de:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
 2e2:	41 e0       	ldi	r20, 0x01	; 1
 2e4:	63 e0       	ldi	r22, 0x03	; 3
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 2ec:	8f e9       	ldi	r24, 0x9F	; 159
 2ee:	9f e0       	ldi	r25, 0x0F	; 15
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <LCD_voidSendCommand+0x30>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <LCD_voidSendCommand+0x36>
 2f6:	00 00       	nop
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	63 e0       	ldi	r22, 0x03	; 3
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 302:	8c 2f       	mov	r24, r28
 304:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
 308:	41 e0       	ldi	r20, 0x01	; 1
 30a:	63 e0       	ldi	r22, 0x03	; 3
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 312:	8f e9       	ldi	r24, 0x9F	; 159
 314:	9f e0       	ldi	r25, 0x0F	; 15
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	f1 f7       	brne	.-4      	; 0x316 <LCD_voidSendCommand+0x56>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <LCD_voidSendCommand+0x5c>
 31c:	00 00       	nop
 31e:	40 e0       	ldi	r20, 0x00	; 0
 320:	63 e0       	ldi	r22, 0x03	; 3
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <LCD_voidInit>:
 32c:	41 e0       	ldi	r20, 0x01	; 1
 32e:	61 e0       	ldi	r22, 0x01	; 1
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 336:	41 e0       	ldi	r20, 0x01	; 1
 338:	62 e0       	ldi	r22, 0x02	; 2
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	63 e0       	ldi	r22, 0x03	; 3
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 34a:	41 e0       	ldi	r20, 0x01	; 1
 34c:	64 e0       	ldi	r22, 0x04	; 4
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 354:	41 e0       	ldi	r20, 0x01	; 1
 356:	65 e0       	ldi	r22, 0x05	; 5
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 35e:	41 e0       	ldi	r20, 0x01	; 1
 360:	66 e0       	ldi	r22, 0x06	; 6
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 368:	41 e0       	ldi	r20, 0x01	; 1
 36a:	67 e0       	ldi	r22, 0x07	; 7
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	0e 94 83 03 	call	0x706	; 0x706 <DIO_voidSetPinDirection>
 372:	2f e7       	ldi	r18, 0x7F	; 127
 374:	85 eb       	ldi	r24, 0xB5	; 181
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	21 50       	subi	r18, 0x01	; 1
 37a:	80 40       	sbci	r24, 0x00	; 0
 37c:	90 40       	sbci	r25, 0x00	; 0
 37e:	e1 f7       	brne	.-8      	; 0x378 <LCD_voidInit+0x4c>
 380:	00 c0       	rjmp	.+0      	; 0x382 <LCD_voidInit+0x56>
 382:	00 00       	nop
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 38e:	40 e0       	ldi	r20, 0x00	; 0
 390:	62 e0       	ldi	r22, 0x02	; 2
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 398:	82 e0       	ldi	r24, 0x02	; 2
 39a:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
 39e:	41 e0       	ldi	r20, 0x01	; 1
 3a0:	63 e0       	ldi	r22, 0x03	; 3
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 3a8:	8f e9       	ldi	r24, 0x9F	; 159
 3aa:	9f e0       	ldi	r25, 0x0F	; 15
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <LCD_voidInit+0x80>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <LCD_voidInit+0x86>
 3b2:	00 00       	nop
 3b4:	40 e0       	ldi	r20, 0x00	; 0
 3b6:	63 e0       	ldi	r22, 0x03	; 3
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 3be:	88 e2       	ldi	r24, 0x28	; 40
 3c0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
 3c4:	90 ef       	ldi	r25, 0xF0	; 240
 3c6:	9a 95       	dec	r25
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <LCD_voidInit+0x9a>
 3ca:	8f e0       	ldi	r24, 0x0F	; 15
 3cc:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
 3d0:	20 ef       	ldi	r18, 0xF0	; 240
 3d2:	2a 95       	dec	r18
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <LCD_voidInit+0xa6>
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
 3dc:	8f e3       	ldi	r24, 0x3F	; 63
 3de:	9f e1       	ldi	r25, 0x1F	; 31
 3e0:	01 97       	sbiw	r24, 0x01	; 1
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <LCD_voidInit+0xb4>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <LCD_voidInit+0xba>
 3e6:	00 00       	nop
 3e8:	86 e0       	ldi	r24, 0x06	; 6
 3ea:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
 3ee:	08 95       	ret

000003f0 <LCD_voidDisplayChar>:
 3f0:	cf 93       	push	r28
 3f2:	c8 2f       	mov	r28, r24
 3f4:	41 e0       	ldi	r20, 0x01	; 1
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 3fe:	40 e0       	ldi	r20, 0x00	; 0
 400:	62 e0       	ldi	r22, 0x02	; 2
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 408:	8c 2f       	mov	r24, r28
 40a:	82 95       	swap	r24
 40c:	8f 70       	andi	r24, 0x0F	; 15
 40e:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
 412:	41 e0       	ldi	r20, 0x01	; 1
 414:	63 e0       	ldi	r22, 0x03	; 3
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 41c:	8f e9       	ldi	r24, 0x9F	; 159
 41e:	9f e0       	ldi	r25, 0x0F	; 15
 420:	01 97       	sbiw	r24, 0x01	; 1
 422:	f1 f7       	brne	.-4      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 426:	00 00       	nop
 428:	40 e0       	ldi	r20, 0x00	; 0
 42a:	63 e0       	ldi	r22, 0x03	; 3
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 432:	8c 2f       	mov	r24, r28
 434:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
 438:	41 e0       	ldi	r20, 0x01	; 1
 43a:	63 e0       	ldi	r22, 0x03	; 3
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 442:	8f e9       	ldi	r24, 0x9F	; 159
 444:	9f e0       	ldi	r25, 0x0F	; 15
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
 44e:	40 e0       	ldi	r20, 0x00	; 0
 450:	63 e0       	ldi	r22, 0x03	; 3
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 458:	cf 91       	pop	r28
 45a:	08 95       	ret

0000045c <LCD_voidDisplayString>:
 45c:	0f 93       	push	r16
 45e:	1f 93       	push	r17
 460:	cf 93       	push	r28
 462:	00 97       	sbiw	r24, 0x00	; 0
 464:	29 f4       	brne	.+10     	; 0x470 <LCD_voidDisplayString+0x14>
 466:	0c c0       	rjmp	.+24     	; 0x480 <LCD_voidDisplayString+0x24>
 468:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_voidDisplayChar>
 46c:	cf 5f       	subi	r28, 0xFF	; 255
 46e:	02 c0       	rjmp	.+4      	; 0x474 <LCD_voidDisplayString+0x18>
 470:	8c 01       	movw	r16, r24
 472:	c0 e0       	ldi	r28, 0x00	; 0
 474:	f8 01       	movw	r30, r16
 476:	ec 0f       	add	r30, r28
 478:	f1 1d       	adc	r31, r1
 47a:	80 81       	ld	r24, Z
 47c:	81 11       	cpse	r24, r1
 47e:	f4 cf       	rjmp	.-24     	; 0x468 <LCD_voidDisplayString+0xc>
 480:	cf 91       	pop	r28
 482:	1f 91       	pop	r17
 484:	0f 91       	pop	r16
 486:	08 95       	ret

00000488 <LCD_voidDisplayStringDelay>:
 488:	0f 93       	push	r16
 48a:	1f 93       	push	r17
 48c:	cf 93       	push	r28
 48e:	00 97       	sbiw	r24, 0x00	; 0
 490:	71 f4       	brne	.+28     	; 0x4ae <LCD_voidDisplayStringDelay+0x26>
 492:	15 c0       	rjmp	.+42     	; 0x4be <LCD_voidDisplayStringDelay+0x36>
 494:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_voidDisplayChar>
 498:	cf 5f       	subi	r28, 0xFF	; 255
 49a:	2f ef       	ldi	r18, 0xFF	; 255
 49c:	80 e7       	ldi	r24, 0x70	; 112
 49e:	92 e0       	ldi	r25, 0x02	; 2
 4a0:	21 50       	subi	r18, 0x01	; 1
 4a2:	80 40       	sbci	r24, 0x00	; 0
 4a4:	90 40       	sbci	r25, 0x00	; 0
 4a6:	e1 f7       	brne	.-8      	; 0x4a0 <LCD_voidDisplayStringDelay+0x18>
 4a8:	00 c0       	rjmp	.+0      	; 0x4aa <LCD_voidDisplayStringDelay+0x22>
 4aa:	00 00       	nop
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <LCD_voidDisplayStringDelay+0x2a>
 4ae:	8c 01       	movw	r16, r24
 4b0:	c0 e0       	ldi	r28, 0x00	; 0
 4b2:	f8 01       	movw	r30, r16
 4b4:	ec 0f       	add	r30, r28
 4b6:	f1 1d       	adc	r31, r1
 4b8:	80 81       	ld	r24, Z
 4ba:	81 11       	cpse	r24, r1
 4bc:	eb cf       	rjmp	.-42     	; 0x494 <LCD_voidDisplayStringDelay+0xc>
 4be:	cf 91       	pop	r28
 4c0:	1f 91       	pop	r17
 4c2:	0f 91       	pop	r16
 4c4:	08 95       	ret

000004c6 <LCD_voidClear>:

void	LCD_voidClear (void)

{
	//set RS pin = 0	(command)
	DIO_voidSetPinValue(LCD_RS_PORT,LCD_RS_PIN,DIO_PIN_LOW);
 4c6:	40 e0       	ldi	r20, 0x00	; 0
 4c8:	61 e0       	ldi	r22, 0x01	; 1
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
	
	//set RW pin = 0	(write)
	DIO_voidSetPinValue(LCD_RW_PORT,LCD_RW_PIN,DIO_PIN_LOW);
 4d0:	40 e0       	ldi	r20, 0x00	; 0
 4d2:	62 e0       	ldi	r22, 0x02	; 2
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
	
	//Write The Most 4 Bits Of command On Data Pins
	PRV_voidWriteHalfPort(0b0000>>4);
 4da:	80 e0       	ldi	r24, 0x00	; 0
 4dc:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
	
	/* Enable Pulse *//* H => L */
	DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,DIO_PIN_HIGH);
 4e0:	41 e0       	ldi	r20, 0x01	; 1
 4e2:	63 e0       	ldi	r22, 0x03	; 3
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4ea:	8f e9       	ldi	r24, 0x9F	; 159
 4ec:	9f e0       	ldi	r25, 0x0F	; 15
 4ee:	01 97       	sbiw	r24, 0x01	; 1
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <LCD_voidClear+0x28>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <LCD_voidClear+0x2e>
 4f4:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,DIO_PIN_LOW);
 4f6:	40 e0       	ldi	r20, 0x00	; 0
 4f8:	63 e0       	ldi	r22, 0x03	; 3
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
	
	//Write The Least 4 Bits Of Command On Data Pins
	PRV_voidWriteHalfPort(0b0001);
 500:	81 e0       	ldi	r24, 0x01	; 1
 502:	0e 94 28 01 	call	0x250	; 0x250 <PRV_voidWriteHalfPort>
	
	/* Enable Pulse *//* H => L */
	DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,DIO_PIN_HIGH);
 506:	41 e0       	ldi	r20, 0x01	; 1
 508:	63 e0       	ldi	r22, 0x03	; 3
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 510:	8f e9       	ldi	r24, 0x9F	; 159
 512:	9f e0       	ldi	r25, 0x0F	; 15
 514:	01 97       	sbiw	r24, 0x01	; 1
 516:	f1 f7       	brne	.-4      	; 0x514 <LCD_voidClear+0x4e>
 518:	00 c0       	rjmp	.+0      	; 0x51a <LCD_voidClear+0x54>
 51a:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(LCD_EN_PORT,LCD_EN_PIN,DIO_PIN_LOW);
 51c:	40 e0       	ldi	r20, 0x00	; 0
 51e:	63 e0       	ldi	r22, 0x03	; 3
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	0e 94 03 04 	call	0x806	; 0x806 <DIO_voidSetPinValue>
 526:	08 95       	ret

00000528 <main>:
#include "LCD_INTERFACE.h"
#include "LCD_CONFIG.h"


int main(void)
{
 528:	cf 93       	push	r28
 52a:	df 93       	push	r29
 52c:	00 d0       	rcall	.+0      	; 0x52e <main+0x6>
 52e:	cd b7       	in	r28, 0x3d	; 61
 530:	de b7       	in	r29, 0x3e	; 62
    LCD_voidInit();
 532:	0e 94 96 01 	call	0x32c	; 0x32c <LCD_voidInit>
	KPD_voidInit();
 536:	0e 94 41 00 	call	0x82	; 0x82 <KPD_voidInit>
	LCD_voidDisplayStringDelay((u8*)" Welcome to your");
 53a:	80 e7       	ldi	r24, 0x70	; 112
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
	LCD_voidSendCommand(Write_SecondLine);
 542:	80 ec       	ldi	r24, 0xC0	; 192
 544:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
	LCD_voidDisplayStringDelay((u8*)"   Smart Home");
 548:	81 e8       	ldi	r24, 0x81	; 129
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 550:	2f ef       	ldi	r18, 0xFF	; 255
 552:	83 ed       	ldi	r24, 0xD3	; 211
 554:	90 e3       	ldi	r25, 0x30	; 48
 556:	21 50       	subi	r18, 0x01	; 1
 558:	80 40       	sbci	r24, 0x00	; 0
 55a:	90 40       	sbci	r25, 0x00	; 0
 55c:	e1 f7       	brne	.-8      	; 0x556 <main+0x2e>
 55e:	00 c0       	rjmp	.+0      	; 0x560 <main+0x38>
 560:	00 00       	nop
	_delay_ms(1000);
	LCD_voidClear();
 562:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
	LCD_voidDisplayString((u8*)"1-AC 2-light");
 566:	8f e8       	ldi	r24, 0x8F	; 143
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 2e 02 	call	0x45c	; 0x45c <LCD_voidDisplayString>
	LCD_voidSendCommand(Write_SecondLine);
 56e:	80 ec       	ldi	r24, 0xC0	; 192
 570:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
	LCD_voidDisplayString((u8*)"3-temperature");
 574:	8c e9       	ldi	r24, 0x9C	; 156
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	0e 94 2e 02 	call	0x45c	; 0x45c <LCD_voidDisplayString>
	u8	Local_copyKPDValue;
	u8	local_lightNum=KPD_Not_Pressed;
 57c:	8f ef       	ldi	r24, 0xFF	; 255
 57e:	8a 83       	std	Y+2, r24	; 0x02
	u8 i=0;
	
    while (1) 
    {
		KPD_voidGetValue(&Local_copyKPDValue);
 580:	ce 01       	movw	r24, r28
 582:	01 96       	adiw	r24, 0x01	; 1
 584:	0e 94 75 00 	call	0xea	; 0xea <KPD_voidGetValue>
		if (Local_copyKPDValue != KPD_Not_Pressed)
 588:	89 81       	ldd	r24, Y+1	; 0x01
 58a:	8f 3f       	cpi	r24, 0xFF	; 255
 58c:	c9 f3       	breq	.-14     	; 0x580 <main+0x58>
		{	
			switch (Local_copyKPDValue)
 58e:	81 33       	cpi	r24, 0x31	; 49
 590:	19 f0       	breq	.+6      	; 0x598 <main+0x70>
 592:	82 33       	cpi	r24, 0x32	; 50
 594:	79 f0       	breq	.+30     	; 0x5b4 <main+0x8c>
 596:	f4 cf       	rjmp	.-24     	; 0x580 <main+0x58>
			{
				case '1':
					LCD_voidClear();
 598:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
					LCD_voidDisplayStringDelay((u8*)"AC Is On/off");
 59c:	8a ea       	ldi	r24, 0xAA	; 170
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
					LCD_voidSendCommand(Write_SecondLine);
 5a4:	80 ec       	ldi	r24, 0xC0	; 192
 5a6:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
					LCD_voidDisplayStringDelay((u8*)"Room Temp: 30c");
 5aa:	87 eb       	ldi	r24, 0xB7	; 183
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
				break;
 5b2:	e6 cf       	rjmp	.-52     	; 0x580 <main+0x58>
				
				case ('2'):
					
					LCD_voidClear();
 5b4:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
					LCD_voidDisplayStringDelay((u8*)"Choose light to");
 5b8:	86 ec       	ldi	r24, 0xC6	; 198
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
					LCD_voidSendCommand(Write_SecondLine);
 5c0:	80 ec       	ldi	r24, 0xC0	; 192
 5c2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
					LCD_voidDisplayStringDelay((u8*)"control(1-6)");
 5c6:	86 ed       	ldi	r24, 0xD6	; 214
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 5ce:	2f ef       	ldi	r18, 0xFF	; 255
 5d0:	86 e7       	ldi	r24, 0x76	; 118
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	21 50       	subi	r18, 0x01	; 1
 5d6:	80 40       	sbci	r24, 0x00	; 0
 5d8:	90 40       	sbci	r25, 0x00	; 0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <main+0xac>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <main+0xb6>
 5de:	00 00       	nop
 5e0:	04 c0       	rjmp	.+8      	; 0x5ea <main+0xc2>
					light_choosing_KPD_WAIT:
					//busy wait for KPD
					while(local_lightNum== KPD_Not_Pressed)
					{
					//get KPD Light Number
					KPD_voidGetValue(&local_lightNum);
 5e2:	ce 01       	movw	r24, r28
 5e4:	02 96       	adiw	r24, 0x02	; 2
 5e6:	0e 94 75 00 	call	0xea	; 0xea <KPD_voidGetValue>
					LCD_voidSendCommand(Write_SecondLine);
					LCD_voidDisplayStringDelay((u8*)"control(1-6)");
					_delay_ms(30);
					light_choosing_KPD_WAIT:
					//busy wait for KPD
					while(local_lightNum== KPD_Not_Pressed)
 5ea:	8a 81       	ldd	r24, Y+2	; 0x02
 5ec:	8f 3f       	cpi	r24, 0xFF	; 255
 5ee:	c9 f3       	breq	.-14     	; 0x5e2 <main+0xba>
					{
					//get KPD Light Number
					KPD_voidGetValue(&local_lightNum);
					}
											if (local_lightNum=='1')
 5f0:	81 33       	cpi	r24, 0x31	; 49
 5f2:	71 f4       	brne	.+28     	; 0x610 <main+0xe8>
					{
						LCD_voidClear();
 5f4:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidSendCommand(Write_SecondLine);
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It Off");
						}
						else if (i==0)
						{
							LCD_voidDisplayStringDelay((u8*)"Light 1 is OFF");
 5f8:	83 ee       	ldi	r24, 0xE3	; 227
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 600:	80 ec       	ldi	r24, 0xC0	; 192
 602:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It On");
 606:	82 ef       	ldi	r24, 0xF2	; 242
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 60e:	78 c0       	rjmp	.+240    	; 0x700 <main+0x1d8>
						}
						
					}
					
										else if (local_lightNum=='2')
 610:	82 33       	cpi	r24, 0x32	; 50
 612:	71 f4       	brne	.+28     	; 0x630 <main+0x108>
					{
						LCD_voidClear();
 614:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidSendCommand(Write_SecondLine);
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It Off");
						}
						else if (i==0)
						{
							LCD_voidDisplayStringDelay((u8*)"Light 2 is OFF");
 618:	82 e0       	ldi	r24, 0x02	; 2
 61a:	91 e0       	ldi	r25, 0x01	; 1
 61c:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 620:	80 ec       	ldi	r24, 0xC0	; 192
 622:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It On");
 626:	82 ef       	ldi	r24, 0xF2	; 242
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 62e:	68 c0       	rjmp	.+208    	; 0x700 <main+0x1d8>
						}
						
					}
										else if (local_lightNum=='3')
 630:	83 33       	cpi	r24, 0x33	; 51
 632:	71 f4       	brne	.+28     	; 0x650 <main+0x128>
					{
						LCD_voidClear();
 634:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidSendCommand(Write_SecondLine);
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It Off");
						}
						else if (i==0)
						{
							LCD_voidDisplayStringDelay((u8*)"Light 3 is OFF");
 638:	81 e1       	ldi	r24, 0x11	; 17
 63a:	91 e0       	ldi	r25, 0x01	; 1
 63c:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 640:	80 ec       	ldi	r24, 0xC0	; 192
 642:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It On");
 646:	82 ef       	ldi	r24, 0xF2	; 242
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 64e:	58 c0       	rjmp	.+176    	; 0x700 <main+0x1d8>
						}

					}
										else if (local_lightNum=='4')
 650:	84 33       	cpi	r24, 0x34	; 52
 652:	71 f4       	brne	.+28     	; 0x670 <main+0x148>
					{
						LCD_voidClear();
 654:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidSendCommand(Write_SecondLine);
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It Off");
						}
						else if (i==0)
						{
							LCD_voidDisplayStringDelay((u8*)"Light 4 is OFF");
 658:	80 e2       	ldi	r24, 0x20	; 32
 65a:	91 e0       	ldi	r25, 0x01	; 1
 65c:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 660:	80 ec       	ldi	r24, 0xC0	; 192
 662:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It On");
 666:	82 ef       	ldi	r24, 0xF2	; 242
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 66e:	48 c0       	rjmp	.+144    	; 0x700 <main+0x1d8>
						}
						
					}
										else if (local_lightNum=='5')
 670:	85 33       	cpi	r24, 0x35	; 53
 672:	71 f4       	brne	.+28     	; 0x690 <main+0x168>
					{
						LCD_voidClear();
 674:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidSendCommand(Write_SecondLine);
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It Off");
						}
						else if (i==0)
						{
							LCD_voidDisplayStringDelay((u8*)"Light 5 is OFF");
 678:	8f e2       	ldi	r24, 0x2F	; 47
 67a:	91 e0       	ldi	r25, 0x01	; 1
 67c:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 680:	80 ec       	ldi	r24, 0xC0	; 192
 682:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It On");
 686:	82 ef       	ldi	r24, 0xF2	; 242
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 68e:	38 c0       	rjmp	.+112    	; 0x700 <main+0x1d8>
						}
						
					}
										else if (local_lightNum=='6')
 690:	86 33       	cpi	r24, 0x36	; 54
 692:	71 f4       	brne	.+28     	; 0x6b0 <main+0x188>
					{
						LCD_voidClear();
 694:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidSendCommand(Write_SecondLine);
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It Off");
						}
						else if (i==0)
						{
							LCD_voidDisplayStringDelay((u8*)"Light 6 is OFF");
 698:	8e e3       	ldi	r24, 0x3E	; 62
 69a:	91 e0       	ldi	r25, 0x01	; 1
 69c:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 6a0:	80 ec       	ldi	r24, 0xC0	; 192
 6a2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"1-To Turn It On");
 6a6:	82 ef       	ldi	r24, 0xF2	; 242
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 6ae:	28 c0       	rjmp	.+80     	; 0x700 <main+0x1d8>
						}
						
					}
										else 
						{
							LCD_voidClear();
 6b0:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidDisplayStringDelay((u8*)"  Invalid Input");
 6b4:	8d e4       	ldi	r24, 0x4D	; 77
 6b6:	91 e0       	ldi	r25, 0x01	; 1
 6b8:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 6bc:	2f ef       	ldi	r18, 0xFF	; 255
 6be:	83 ed       	ldi	r24, 0xD3	; 211
 6c0:	90 e3       	ldi	r25, 0x30	; 48
 6c2:	21 50       	subi	r18, 0x01	; 1
 6c4:	80 40       	sbci	r24, 0x00	; 0
 6c6:	90 40       	sbci	r25, 0x00	; 0
 6c8:	e1 f7       	brne	.-8      	; 0x6c2 <main+0x19a>
 6ca:	00 c0       	rjmp	.+0      	; 0x6cc <main+0x1a4>
 6cc:	00 00       	nop
							_delay_ms(1000);
							LCD_voidClear();
 6ce:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCD_voidClear>
							LCD_voidDisplayStringDelay((u8*)"  please choose ");
 6d2:	8d e5       	ldi	r24, 0x5D	; 93
 6d4:	91 e0       	ldi	r25, 0x01	; 1
 6d6:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
							LCD_voidSendCommand(Write_SecondLine);
 6da:	80 ec       	ldi	r24, 0xC0	; 192
 6dc:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_voidSendCommand>
							LCD_voidDisplayStringDelay((u8*)"  from 1 to 6");
 6e0:	8e e6       	ldi	r24, 0x6E	; 110
 6e2:	91 e0       	ldi	r25, 0x01	; 1
 6e4:	0e 94 44 02 	call	0x488	; 0x488 <LCD_voidDisplayStringDelay>
 6e8:	2f ef       	ldi	r18, 0xFF	; 255
 6ea:	83 ed       	ldi	r24, 0xD3	; 211
 6ec:	90 e3       	ldi	r25, 0x30	; 48
 6ee:	21 50       	subi	r18, 0x01	; 1
 6f0:	80 40       	sbci	r24, 0x00	; 0
 6f2:	90 40       	sbci	r25, 0x00	; 0
 6f4:	e1 f7       	brne	.-8      	; 0x6ee <main+0x1c6>
 6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <main+0x1d0>
 6f8:	00 00       	nop
							_delay_ms(1000);
							
							//clear the local_lightNum to get the light number again
							local_lightNum = KPD_Not_Pressed;
 6fa:	8f ef       	ldi	r24, 0xFF	; 255
 6fc:	8a 83       	std	Y+2, r24	; 0x02
							// go to the beginning of the loop to get the light number again
							goto light_choosing_KPD_WAIT;
 6fe:	75 cf       	rjmp	.-278    	; 0x5ea <main+0xc2>
						}
						local_lightNum =KPD_Not_Pressed;
 700:	8f ef       	ldi	r24, 0xFF	; 255
 702:	8a 83       	std	Y+2, r24	; 0x02
				break;						
 704:	3d cf       	rjmp	.-390    	; 0x580 <main+0x58>

00000706 <DIO_voidSetPinDirection>:
			case DIO_PORTC:
			TOG_BIT(PORTC_REG,copy_u8PinId);
			break;
			
			case DIO_PORTD:
			TOG_BIT(PORTD_REG,copy_u8PinId);
 706:	84 30       	cpi	r24, 0x04	; 4
 708:	08 f0       	brcs	.+2      	; 0x70c <DIO_voidSetPinDirection+0x6>
 70a:	7c c0       	rjmp	.+248    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 70c:	68 30       	cpi	r22, 0x08	; 8
 70e:	08 f0       	brcs	.+2      	; 0x712 <DIO_voidSetPinDirection+0xc>
 710:	79 c0       	rjmp	.+242    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 712:	42 30       	cpi	r20, 0x02	; 2
 714:	08 f0       	brcs	.+2      	; 0x718 <DIO_voidSetPinDirection+0x12>
 716:	76 c0       	rjmp	.+236    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 718:	81 30       	cpi	r24, 0x01	; 1
 71a:	19 f1       	breq	.+70     	; 0x762 <DIO_voidSetPinDirection+0x5c>
 71c:	30 f0       	brcs	.+12     	; 0x72a <DIO_voidSetPinDirection+0x24>
 71e:	82 30       	cpi	r24, 0x02	; 2
 720:	e1 f1       	breq	.+120    	; 0x79a <DIO_voidSetPinDirection+0x94>
 722:	83 30       	cpi	r24, 0x03	; 3
 724:	09 f4       	brne	.+2      	; 0x728 <DIO_voidSetPinDirection+0x22>
 726:	54 c0       	rjmp	.+168    	; 0x7d0 <DIO_voidSetPinDirection+0xca>
 728:	08 95       	ret
 72a:	44 23       	and	r20, r20
 72c:	71 f0       	breq	.+28     	; 0x74a <DIO_voidSetPinDirection+0x44>
 72e:	41 30       	cpi	r20, 0x01	; 1
 730:	09 f0       	breq	.+2      	; 0x734 <DIO_voidSetPinDirection+0x2e>
 732:	68 c0       	rjmp	.+208    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 734:	2a b3       	in	r18, 0x1a	; 26
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	02 c0       	rjmp	.+4      	; 0x740 <DIO_voidSetPinDirection+0x3a>
 73c:	88 0f       	add	r24, r24
 73e:	99 1f       	adc	r25, r25
 740:	6a 95       	dec	r22
 742:	e2 f7       	brpl	.-8      	; 0x73c <DIO_voidSetPinDirection+0x36>
 744:	82 2b       	or	r24, r18
 746:	8a bb       	out	0x1a, r24	; 26
 748:	08 95       	ret
 74a:	2a b3       	in	r18, 0x1a	; 26
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	02 c0       	rjmp	.+4      	; 0x756 <DIO_voidSetPinDirection+0x50>
 752:	88 0f       	add	r24, r24
 754:	99 1f       	adc	r25, r25
 756:	6a 95       	dec	r22
 758:	e2 f7       	brpl	.-8      	; 0x752 <DIO_voidSetPinDirection+0x4c>
 75a:	80 95       	com	r24
 75c:	82 23       	and	r24, r18
 75e:	8a bb       	out	0x1a, r24	; 26
 760:	08 95       	ret
 762:	44 23       	and	r20, r20
 764:	71 f0       	breq	.+28     	; 0x782 <DIO_voidSetPinDirection+0x7c>
 766:	41 30       	cpi	r20, 0x01	; 1
 768:	09 f0       	breq	.+2      	; 0x76c <DIO_voidSetPinDirection+0x66>
 76a:	4c c0       	rjmp	.+152    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 76c:	27 b3       	in	r18, 0x17	; 23
 76e:	81 e0       	ldi	r24, 0x01	; 1
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	02 c0       	rjmp	.+4      	; 0x778 <DIO_voidSetPinDirection+0x72>
 774:	88 0f       	add	r24, r24
 776:	99 1f       	adc	r25, r25
 778:	6a 95       	dec	r22
 77a:	e2 f7       	brpl	.-8      	; 0x774 <DIO_voidSetPinDirection+0x6e>
 77c:	82 2b       	or	r24, r18
 77e:	87 bb       	out	0x17, r24	; 23
 780:	08 95       	ret
 782:	27 b3       	in	r18, 0x17	; 23
 784:	81 e0       	ldi	r24, 0x01	; 1
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	02 c0       	rjmp	.+4      	; 0x78e <DIO_voidSetPinDirection+0x88>
 78a:	88 0f       	add	r24, r24
 78c:	99 1f       	adc	r25, r25
 78e:	6a 95       	dec	r22
 790:	e2 f7       	brpl	.-8      	; 0x78a <DIO_voidSetPinDirection+0x84>
 792:	80 95       	com	r24
 794:	82 23       	and	r24, r18
 796:	87 bb       	out	0x17, r24	; 23
 798:	08 95       	ret
 79a:	44 23       	and	r20, r20
 79c:	69 f0       	breq	.+26     	; 0x7b8 <DIO_voidSetPinDirection+0xb2>
 79e:	41 30       	cpi	r20, 0x01	; 1
 7a0:	89 f5       	brne	.+98     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7a2:	24 b3       	in	r18, 0x14	; 20
 7a4:	81 e0       	ldi	r24, 0x01	; 1
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <DIO_voidSetPinDirection+0xa8>
 7aa:	88 0f       	add	r24, r24
 7ac:	99 1f       	adc	r25, r25
 7ae:	6a 95       	dec	r22
 7b0:	e2 f7       	brpl	.-8      	; 0x7aa <DIO_voidSetPinDirection+0xa4>
 7b2:	82 2b       	or	r24, r18
 7b4:	84 bb       	out	0x14, r24	; 20
 7b6:	08 95       	ret
 7b8:	24 b3       	in	r18, 0x14	; 20
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <DIO_voidSetPinDirection+0xbe>
 7c0:	88 0f       	add	r24, r24
 7c2:	99 1f       	adc	r25, r25
 7c4:	6a 95       	dec	r22
 7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <DIO_voidSetPinDirection+0xba>
 7c8:	80 95       	com	r24
 7ca:	82 23       	and	r24, r18
 7cc:	84 bb       	out	0x14, r24	; 20
 7ce:	08 95       	ret
 7d0:	44 23       	and	r20, r20
 7d2:	69 f0       	breq	.+26     	; 0x7ee <DIO_voidSetPinDirection+0xe8>
 7d4:	41 30       	cpi	r20, 0x01	; 1
 7d6:	b1 f4       	brne	.+44     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7d8:	21 b3       	in	r18, 0x11	; 17
 7da:	81 e0       	ldi	r24, 0x01	; 1
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <DIO_voidSetPinDirection+0xde>
 7e0:	88 0f       	add	r24, r24
 7e2:	99 1f       	adc	r25, r25
 7e4:	6a 95       	dec	r22
 7e6:	e2 f7       	brpl	.-8      	; 0x7e0 <DIO_voidSetPinDirection+0xda>
 7e8:	82 2b       	or	r24, r18
 7ea:	81 bb       	out	0x11, r24	; 17
 7ec:	08 95       	ret
 7ee:	21 b3       	in	r18, 0x11	; 17
 7f0:	81 e0       	ldi	r24, 0x01	; 1
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	02 c0       	rjmp	.+4      	; 0x7fa <DIO_voidSetPinDirection+0xf4>
 7f6:	88 0f       	add	r24, r24
 7f8:	99 1f       	adc	r25, r25
 7fa:	6a 95       	dec	r22
 7fc:	e2 f7       	brpl	.-8      	; 0x7f6 <DIO_voidSetPinDirection+0xf0>
 7fe:	80 95       	com	r24
 800:	82 23       	and	r24, r18
 802:	81 bb       	out	0x11, r24	; 17
 804:	08 95       	ret

00000806 <DIO_voidSetPinValue>:
 806:	84 30       	cpi	r24, 0x04	; 4
 808:	08 f0       	brcs	.+2      	; 0x80c <DIO_voidSetPinValue+0x6>
 80a:	7c c0       	rjmp	.+248    	; 0x904 <__stack+0xa5>
 80c:	68 30       	cpi	r22, 0x08	; 8
 80e:	08 f0       	brcs	.+2      	; 0x812 <DIO_voidSetPinValue+0xc>
 810:	79 c0       	rjmp	.+242    	; 0x904 <__stack+0xa5>
 812:	42 30       	cpi	r20, 0x02	; 2
 814:	08 f0       	brcs	.+2      	; 0x818 <DIO_voidSetPinValue+0x12>
 816:	76 c0       	rjmp	.+236    	; 0x904 <__stack+0xa5>
 818:	81 30       	cpi	r24, 0x01	; 1
 81a:	19 f1       	breq	.+70     	; 0x862 <__stack+0x3>
 81c:	30 f0       	brcs	.+12     	; 0x82a <DIO_voidSetPinValue+0x24>
 81e:	82 30       	cpi	r24, 0x02	; 2
 820:	e1 f1       	breq	.+120    	; 0x89a <__stack+0x3b>
 822:	83 30       	cpi	r24, 0x03	; 3
 824:	09 f4       	brne	.+2      	; 0x828 <DIO_voidSetPinValue+0x22>
 826:	54 c0       	rjmp	.+168    	; 0x8d0 <__stack+0x71>
 828:	08 95       	ret
 82a:	44 23       	and	r20, r20
 82c:	71 f0       	breq	.+28     	; 0x84a <DIO_voidSetPinValue+0x44>
 82e:	41 30       	cpi	r20, 0x01	; 1
 830:	09 f0       	breq	.+2      	; 0x834 <DIO_voidSetPinValue+0x2e>
 832:	68 c0       	rjmp	.+208    	; 0x904 <__stack+0xa5>
 834:	2b b3       	in	r18, 0x1b	; 27
 836:	81 e0       	ldi	r24, 0x01	; 1
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	02 c0       	rjmp	.+4      	; 0x840 <DIO_voidSetPinValue+0x3a>
 83c:	88 0f       	add	r24, r24
 83e:	99 1f       	adc	r25, r25
 840:	6a 95       	dec	r22
 842:	e2 f7       	brpl	.-8      	; 0x83c <DIO_voidSetPinValue+0x36>
 844:	82 2b       	or	r24, r18
 846:	8b bb       	out	0x1b, r24	; 27
 848:	08 95       	ret
 84a:	2b b3       	in	r18, 0x1b	; 27
 84c:	81 e0       	ldi	r24, 0x01	; 1
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	02 c0       	rjmp	.+4      	; 0x856 <DIO_voidSetPinValue+0x50>
 852:	88 0f       	add	r24, r24
 854:	99 1f       	adc	r25, r25
 856:	6a 95       	dec	r22
 858:	e2 f7       	brpl	.-8      	; 0x852 <DIO_voidSetPinValue+0x4c>
 85a:	80 95       	com	r24
 85c:	82 23       	and	r24, r18
 85e:	8b bb       	out	0x1b, r24	; 27
 860:	08 95       	ret
 862:	44 23       	and	r20, r20
 864:	71 f0       	breq	.+28     	; 0x882 <__stack+0x23>
 866:	41 30       	cpi	r20, 0x01	; 1
 868:	09 f0       	breq	.+2      	; 0x86c <__stack+0xd>
 86a:	4c c0       	rjmp	.+152    	; 0x904 <__stack+0xa5>
 86c:	28 b3       	in	r18, 0x18	; 24
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	02 c0       	rjmp	.+4      	; 0x878 <__stack+0x19>
 874:	88 0f       	add	r24, r24
 876:	99 1f       	adc	r25, r25
 878:	6a 95       	dec	r22
 87a:	e2 f7       	brpl	.-8      	; 0x874 <__stack+0x15>
 87c:	82 2b       	or	r24, r18
 87e:	88 bb       	out	0x18, r24	; 24
 880:	08 95       	ret
 882:	28 b3       	in	r18, 0x18	; 24
 884:	81 e0       	ldi	r24, 0x01	; 1
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	02 c0       	rjmp	.+4      	; 0x88e <__stack+0x2f>
 88a:	88 0f       	add	r24, r24
 88c:	99 1f       	adc	r25, r25
 88e:	6a 95       	dec	r22
 890:	e2 f7       	brpl	.-8      	; 0x88a <__stack+0x2b>
 892:	80 95       	com	r24
 894:	82 23       	and	r24, r18
 896:	88 bb       	out	0x18, r24	; 24
 898:	08 95       	ret
 89a:	44 23       	and	r20, r20
 89c:	69 f0       	breq	.+26     	; 0x8b8 <__stack+0x59>
 89e:	41 30       	cpi	r20, 0x01	; 1
 8a0:	89 f5       	brne	.+98     	; 0x904 <__stack+0xa5>
 8a2:	25 b3       	in	r18, 0x15	; 21
 8a4:	81 e0       	ldi	r24, 0x01	; 1
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__stack+0x4f>
 8aa:	88 0f       	add	r24, r24
 8ac:	99 1f       	adc	r25, r25
 8ae:	6a 95       	dec	r22
 8b0:	e2 f7       	brpl	.-8      	; 0x8aa <__stack+0x4b>
 8b2:	82 2b       	or	r24, r18
 8b4:	85 bb       	out	0x15, r24	; 21
 8b6:	08 95       	ret
 8b8:	25 b3       	in	r18, 0x15	; 21
 8ba:	81 e0       	ldi	r24, 0x01	; 1
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	02 c0       	rjmp	.+4      	; 0x8c4 <__stack+0x65>
 8c0:	88 0f       	add	r24, r24
 8c2:	99 1f       	adc	r25, r25
 8c4:	6a 95       	dec	r22
 8c6:	e2 f7       	brpl	.-8      	; 0x8c0 <__stack+0x61>
 8c8:	80 95       	com	r24
 8ca:	82 23       	and	r24, r18
 8cc:	85 bb       	out	0x15, r24	; 21
 8ce:	08 95       	ret
 8d0:	44 23       	and	r20, r20
 8d2:	69 f0       	breq	.+26     	; 0x8ee <__stack+0x8f>
 8d4:	41 30       	cpi	r20, 0x01	; 1
 8d6:	b1 f4       	brne	.+44     	; 0x904 <__stack+0xa5>
 8d8:	22 b3       	in	r18, 0x12	; 18
 8da:	81 e0       	ldi	r24, 0x01	; 1
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <__stack+0x85>
 8e0:	88 0f       	add	r24, r24
 8e2:	99 1f       	adc	r25, r25
 8e4:	6a 95       	dec	r22
 8e6:	e2 f7       	brpl	.-8      	; 0x8e0 <__stack+0x81>
 8e8:	82 2b       	or	r24, r18
 8ea:	82 bb       	out	0x12, r24	; 18
 8ec:	08 95       	ret
 8ee:	22 b3       	in	r18, 0x12	; 18
 8f0:	81 e0       	ldi	r24, 0x01	; 1
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	02 c0       	rjmp	.+4      	; 0x8fa <__stack+0x9b>
 8f6:	88 0f       	add	r24, r24
 8f8:	99 1f       	adc	r25, r25
 8fa:	6a 95       	dec	r22
 8fc:	e2 f7       	brpl	.-8      	; 0x8f6 <__stack+0x97>
 8fe:	80 95       	com	r24
 900:	82 23       	and	r24, r18
 902:	82 bb       	out	0x12, r24	; 18
 904:	08 95       	ret

00000906 <DIO_voidGetPinValue>:
 906:	84 30       	cpi	r24, 0x04	; 4
 908:	c0 f5       	brcc	.+112    	; 0x97a <DIO_voidGetPinValue+0x74>
 90a:	68 30       	cpi	r22, 0x08	; 8
 90c:	b0 f5       	brcc	.+108    	; 0x97a <DIO_voidGetPinValue+0x74>
 90e:	41 15       	cp	r20, r1
 910:	51 05       	cpc	r21, r1
 912:	99 f1       	breq	.+102    	; 0x97a <DIO_voidGetPinValue+0x74>
 914:	81 30       	cpi	r24, 0x01	; 1
 916:	89 f0       	breq	.+34     	; 0x93a <DIO_voidGetPinValue+0x34>
 918:	28 f0       	brcs	.+10     	; 0x924 <DIO_voidGetPinValue+0x1e>
 91a:	82 30       	cpi	r24, 0x02	; 2
 91c:	c9 f0       	breq	.+50     	; 0x950 <DIO_voidGetPinValue+0x4a>
 91e:	83 30       	cpi	r24, 0x03	; 3
 920:	11 f1       	breq	.+68     	; 0x966 <DIO_voidGetPinValue+0x60>
 922:	08 95       	ret
 924:	89 b3       	in	r24, 0x19	; 25
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	02 c0       	rjmp	.+4      	; 0x92e <DIO_voidGetPinValue+0x28>
 92a:	95 95       	asr	r25
 92c:	87 95       	ror	r24
 92e:	6a 95       	dec	r22
 930:	e2 f7       	brpl	.-8      	; 0x92a <DIO_voidGetPinValue+0x24>
 932:	81 70       	andi	r24, 0x01	; 1
 934:	fa 01       	movw	r30, r20
 936:	80 83       	st	Z, r24
 938:	08 95       	ret
 93a:	86 b3       	in	r24, 0x16	; 22
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	02 c0       	rjmp	.+4      	; 0x944 <DIO_voidGetPinValue+0x3e>
 940:	95 95       	asr	r25
 942:	87 95       	ror	r24
 944:	6a 95       	dec	r22
 946:	e2 f7       	brpl	.-8      	; 0x940 <DIO_voidGetPinValue+0x3a>
 948:	81 70       	andi	r24, 0x01	; 1
 94a:	fa 01       	movw	r30, r20
 94c:	80 83       	st	Z, r24
 94e:	08 95       	ret
 950:	83 b3       	in	r24, 0x13	; 19
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	02 c0       	rjmp	.+4      	; 0x95a <DIO_voidGetPinValue+0x54>
 956:	95 95       	asr	r25
 958:	87 95       	ror	r24
 95a:	6a 95       	dec	r22
 95c:	e2 f7       	brpl	.-8      	; 0x956 <DIO_voidGetPinValue+0x50>
 95e:	81 70       	andi	r24, 0x01	; 1
 960:	fa 01       	movw	r30, r20
 962:	80 83       	st	Z, r24
 964:	08 95       	ret
 966:	80 b3       	in	r24, 0x10	; 16
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	02 c0       	rjmp	.+4      	; 0x970 <DIO_voidGetPinValue+0x6a>
 96c:	95 95       	asr	r25
 96e:	87 95       	ror	r24
 970:	6a 95       	dec	r22
 972:	e2 f7       	brpl	.-8      	; 0x96c <DIO_voidGetPinValue+0x66>
 974:	81 70       	andi	r24, 0x01	; 1
 976:	fa 01       	movw	r30, r20
 978:	80 83       	st	Z, r24
 97a:	08 95       	ret

0000097c <DIO_voidActivePinInPullUpResistance>:
}


void DIO_voidActivePinInPullUpResistance(u8 copy_u8PortId, u8 copy_u8PinId)
{
	if((copy_u8PortId<4)&&(copy_u8PinId<8))
 97c:	84 30       	cpi	r24, 0x04	; 4
 97e:	a8 f5       	brcc	.+106    	; 0x9ea <DIO_voidActivePinInPullUpResistance+0x6e>
 980:	68 30       	cpi	r22, 0x08	; 8
 982:	98 f5       	brcc	.+102    	; 0x9ea <DIO_voidActivePinInPullUpResistance+0x6e>
	{
		switch(copy_u8PortId)
 984:	81 30       	cpi	r24, 0x01	; 1
 986:	89 f0       	breq	.+34     	; 0x9aa <DIO_voidActivePinInPullUpResistance+0x2e>
 988:	28 f0       	brcs	.+10     	; 0x994 <DIO_voidActivePinInPullUpResistance+0x18>
 98a:	82 30       	cpi	r24, 0x02	; 2
 98c:	c9 f0       	breq	.+50     	; 0x9c0 <DIO_voidActivePinInPullUpResistance+0x44>
 98e:	83 30       	cpi	r24, 0x03	; 3
 990:	11 f1       	breq	.+68     	; 0x9d6 <DIO_voidActivePinInPullUpResistance+0x5a>
 992:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(PORTA_REG,copy_u8PinId);
 994:	2b b3       	in	r18, 0x1b	; 27
 996:	81 e0       	ldi	r24, 0x01	; 1
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <DIO_voidActivePinInPullUpResistance+0x24>
 99c:	88 0f       	add	r24, r24
 99e:	99 1f       	adc	r25, r25
 9a0:	6a 95       	dec	r22
 9a2:	e2 f7       	brpl	.-8      	; 0x99c <DIO_voidActivePinInPullUpResistance+0x20>
 9a4:	82 2b       	or	r24, r18
 9a6:	8b bb       	out	0x1b, r24	; 27
			break;
 9a8:	08 95       	ret
			
			case DIO_PORTB:
			SET_BIT(PORTB_REG,copy_u8PinId);
 9aa:	28 b3       	in	r18, 0x18	; 24
 9ac:	81 e0       	ldi	r24, 0x01	; 1
 9ae:	90 e0       	ldi	r25, 0x00	; 0
 9b0:	02 c0       	rjmp	.+4      	; 0x9b6 <DIO_voidActivePinInPullUpResistance+0x3a>
 9b2:	88 0f       	add	r24, r24
 9b4:	99 1f       	adc	r25, r25
 9b6:	6a 95       	dec	r22
 9b8:	e2 f7       	brpl	.-8      	; 0x9b2 <DIO_voidActivePinInPullUpResistance+0x36>
 9ba:	82 2b       	or	r24, r18
 9bc:	88 bb       	out	0x18, r24	; 24
			break;
 9be:	08 95       	ret
			
			case DIO_PORTC:
			SET_BIT(PORTC_REG,copy_u8PinId);
 9c0:	25 b3       	in	r18, 0x15	; 21
 9c2:	81 e0       	ldi	r24, 0x01	; 1
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <DIO_voidActivePinInPullUpResistance+0x50>
 9c8:	88 0f       	add	r24, r24
 9ca:	99 1f       	adc	r25, r25
 9cc:	6a 95       	dec	r22
 9ce:	e2 f7       	brpl	.-8      	; 0x9c8 <DIO_voidActivePinInPullUpResistance+0x4c>
 9d0:	82 2b       	or	r24, r18
 9d2:	85 bb       	out	0x15, r24	; 21
			break;
 9d4:	08 95       	ret
			
			case DIO_PORTD:
			SET_BIT(PORTD_REG,copy_u8PinId);
 9d6:	22 b3       	in	r18, 0x12	; 18
 9d8:	81 e0       	ldi	r24, 0x01	; 1
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <DIO_voidActivePinInPullUpResistance+0x66>
 9de:	88 0f       	add	r24, r24
 9e0:	99 1f       	adc	r25, r25
 9e2:	6a 95       	dec	r22
 9e4:	e2 f7       	brpl	.-8      	; 0x9de <DIO_voidActivePinInPullUpResistance+0x62>
 9e6:	82 2b       	or	r24, r18
 9e8:	82 bb       	out	0x12, r24	; 18
 9ea:	08 95       	ret

000009ec <_exit>:
 9ec:	f8 94       	cli

000009ee <__stop_program>:
 9ee:	ff cf       	rjmp	.-2      	; 0x9ee <__stop_program>
