
Smart_Home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000039d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000412  00800060  000039d8  00003a6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000039  00800472  00800472  00003e7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003e7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003edc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a0  00000000  00000000  00003f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007784  00000000  00000000  000043b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013e9  00000000  00000000  0000bb3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000392d  00000000  00000000  0000cf25  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c48  00000000  00000000  00010854  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000017e9  00000000  00000000  0001149c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000031d8  00000000  00000000  00012c85  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  00015e5d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 b3 16 	jmp	0x2d66	; 0x2d66 <__vector_4>
      14:	0c 94 78 16 	jmp	0x2cf0	; 0x2cf0 <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 0f 16 	jmp	0x2c1e	; 0x2c1e <__vector_10>
      2c:	0c 94 d4 15 	jmp	0x2ba8	; 0x2ba8 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	14 e0       	ldi	r17, 0x04	; 4
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ed       	ldi	r30, 0xD8	; 216
      68:	f9 e3       	ldi	r31, 0x39	; 57
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	24 e0       	ldi	r18, 0x04	; 4
      78:	a2 e7       	ldi	r26, 0x72	; 114
      7a:	b4 e0       	ldi	r27, 0x04	; 4
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ab 3a       	cpi	r26, 0xAB	; 171
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f4 12 	call	0x25e8	; 0x25e8 <main>
      8a:	0c 94 ea 1c 	jmp	0x39d4	; 0x39d4 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <CheckTempForAc>:
	}
	else
	{
		//error massage
	}
}
      92:	62 e7       	ldi	r22, 0x72	; 114
      94:	74 e0       	ldi	r23, 0x04	; 4
      96:	80 e0       	ldi	r24, 0x00	; 0
      98:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
      9c:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <__data_end>
      a0:	8d 31       	cpi	r24, 0x1D	; 29
      a2:	30 f0       	brcs	.+12     	; 0xb0 <CheckTempForAc+0x1e>
      a4:	40 e0       	ldi	r20, 0x00	; 0
      a6:	62 e0       	ldi	r22, 0x02	; 2
      a8:	82 e0       	ldi	r24, 0x02	; 2
      aa:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
      ae:	08 95       	ret
      b0:	85 31       	cpi	r24, 0x15	; 21
      b2:	28 f4       	brcc	.+10     	; 0xbe <CheckTempForAc+0x2c>
      b4:	41 e0       	ldi	r20, 0x01	; 1
      b6:	62 e0       	ldi	r22, 0x02	; 2
      b8:	82 e0       	ldi	r24, 0x02	; 2
      ba:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
      be:	08 95       	ret

000000c0 <HOME_InitUserNameAndPass>:
      c0:	cf 93       	push	r28
      c2:	df 93       	push	r29
      c4:	cd b7       	in	r28, 0x3d	; 61
      c6:	de b7       	in	r29, 0x3e	; 62
      c8:	c0 5b       	subi	r28, 0xB0	; 176
      ca:	d1 09       	sbc	r29, r1
      cc:	0f b6       	in	r0, 0x3f	; 63
      ce:	f8 94       	cli
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	0f be       	out	0x3f, r0	; 63
      d4:	cd bf       	out	0x3d, r28	; 61
      d6:	88 e0       	ldi	r24, 0x08	; 8
      d8:	e3 e7       	ldi	r30, 0x73	; 115
      da:	f0 e0       	ldi	r31, 0x00	; 0
      dc:	de 01       	movw	r26, r28
      de:	11 96       	adiw	r26, 0x01	; 1
      e0:	01 90       	ld	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	8a 95       	dec	r24
      e6:	e1 f7       	brne	.-8      	; 0xe0 <HOME_InitUserNameAndPass+0x20>
      e8:	88 e0       	ldi	r24, 0x08	; 8
      ea:	e3 e7       	ldi	r30, 0x73	; 115
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	de 01       	movw	r26, r28
      f0:	19 96       	adiw	r26, 0x09	; 9
      f2:	01 90       	ld	r0, Z+
      f4:	0d 92       	st	X+, r0
      f6:	8a 95       	dec	r24
      f8:	e1 f7       	brne	.-8      	; 0xf2 <HOME_InitUserNameAndPass+0x32>
      fa:	88 e0       	ldi	r24, 0x08	; 8
      fc:	eb e7       	ldi	r30, 0x7B	; 123
      fe:	f0 e0       	ldi	r31, 0x00	; 0
     100:	de 01       	movw	r26, r28
     102:	51 96       	adiw	r26, 0x11	; 17
     104:	01 90       	ld	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	8a 95       	dec	r24
     10a:	e1 f7       	brne	.-8      	; 0x104 <HOME_InitUserNameAndPass+0x44>
     10c:	88 e0       	ldi	r24, 0x08	; 8
     10e:	eb e7       	ldi	r30, 0x7B	; 123
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	de 01       	movw	r26, r28
     114:	59 96       	adiw	r26, 0x19	; 25
     116:	01 90       	ld	r0, Z+
     118:	0d 92       	st	X+, r0
     11a:	8a 95       	dec	r24
     11c:	e1 f7       	brne	.-8      	; 0x116 <HOME_InitUserNameAndPass+0x56>
     11e:	88 e0       	ldi	r24, 0x08	; 8
     120:	e3 e8       	ldi	r30, 0x83	; 131
     122:	f0 e0       	ldi	r31, 0x00	; 0
     124:	de 01       	movw	r26, r28
     126:	91 96       	adiw	r26, 0x21	; 33
     128:	01 90       	ld	r0, Z+
     12a:	0d 92       	st	X+, r0
     12c:	8a 95       	dec	r24
     12e:	e1 f7       	brne	.-8      	; 0x128 <HOME_InitUserNameAndPass+0x68>
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	e3 e8       	ldi	r30, 0x83	; 131
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	de 01       	movw	r26, r28
     138:	99 96       	adiw	r26, 0x29	; 41
     13a:	01 90       	ld	r0, Z+
     13c:	0d 92       	st	X+, r0
     13e:	8a 95       	dec	r24
     140:	e1 f7       	brne	.-8      	; 0x13a <HOME_InitUserNameAndPass+0x7a>
     142:	88 e0       	ldi	r24, 0x08	; 8
     144:	eb e8       	ldi	r30, 0x8B	; 139
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	de 01       	movw	r26, r28
     14a:	d1 96       	adiw	r26, 0x31	; 49
     14c:	01 90       	ld	r0, Z+
     14e:	0d 92       	st	X+, r0
     150:	8a 95       	dec	r24
     152:	e1 f7       	brne	.-8      	; 0x14c <HOME_InitUserNameAndPass+0x8c>
     154:	88 e0       	ldi	r24, 0x08	; 8
     156:	eb e8       	ldi	r30, 0x8B	; 139
     158:	f0 e0       	ldi	r31, 0x00	; 0
     15a:	de 01       	movw	r26, r28
     15c:	d9 96       	adiw	r26, 0x39	; 57
     15e:	01 90       	ld	r0, Z+
     160:	0d 92       	st	X+, r0
     162:	8a 95       	dec	r24
     164:	e1 f7       	brne	.-8      	; 0x15e <HOME_InitUserNameAndPass+0x9e>
     166:	88 e0       	ldi	r24, 0x08	; 8
     168:	e3 e9       	ldi	r30, 0x93	; 147
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	de 01       	movw	r26, r28
     16e:	af 5b       	subi	r26, 0xBF	; 191
     170:	bf 4f       	sbci	r27, 0xFF	; 255
     172:	01 90       	ld	r0, Z+
     174:	0d 92       	st	X+, r0
     176:	8a 95       	dec	r24
     178:	e1 f7       	brne	.-8      	; 0x172 <HOME_InitUserNameAndPass+0xb2>
     17a:	88 e0       	ldi	r24, 0x08	; 8
     17c:	e3 e9       	ldi	r30, 0x93	; 147
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	de 01       	movw	r26, r28
     182:	a7 5b       	subi	r26, 0xB7	; 183
     184:	bf 4f       	sbci	r27, 0xFF	; 255
     186:	01 90       	ld	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	8a 95       	dec	r24
     18c:	e1 f7       	brne	.-8      	; 0x186 <HOME_InitUserNameAndPass+0xc6>
     18e:	88 e0       	ldi	r24, 0x08	; 8
     190:	eb e9       	ldi	r30, 0x9B	; 155
     192:	f0 e0       	ldi	r31, 0x00	; 0
     194:	de 01       	movw	r26, r28
     196:	af 5a       	subi	r26, 0xAF	; 175
     198:	bf 4f       	sbci	r27, 0xFF	; 255
     19a:	01 90       	ld	r0, Z+
     19c:	0d 92       	st	X+, r0
     19e:	8a 95       	dec	r24
     1a0:	e1 f7       	brne	.-8      	; 0x19a <HOME_InitUserNameAndPass+0xda>
     1a2:	88 e0       	ldi	r24, 0x08	; 8
     1a4:	eb e9       	ldi	r30, 0x9B	; 155
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	de 01       	movw	r26, r28
     1aa:	a7 5a       	subi	r26, 0xA7	; 167
     1ac:	bf 4f       	sbci	r27, 0xFF	; 255
     1ae:	01 90       	ld	r0, Z+
     1b0:	0d 92       	st	X+, r0
     1b2:	8a 95       	dec	r24
     1b4:	e1 f7       	brne	.-8      	; 0x1ae <HOME_InitUserNameAndPass+0xee>
     1b6:	88 e0       	ldi	r24, 0x08	; 8
     1b8:	e3 ea       	ldi	r30, 0xA3	; 163
     1ba:	f0 e0       	ldi	r31, 0x00	; 0
     1bc:	de 01       	movw	r26, r28
     1be:	af 59       	subi	r26, 0x9F	; 159
     1c0:	bf 4f       	sbci	r27, 0xFF	; 255
     1c2:	01 90       	ld	r0, Z+
     1c4:	0d 92       	st	X+, r0
     1c6:	8a 95       	dec	r24
     1c8:	e1 f7       	brne	.-8      	; 0x1c2 <HOME_InitUserNameAndPass+0x102>
     1ca:	88 e0       	ldi	r24, 0x08	; 8
     1cc:	e3 ea       	ldi	r30, 0xA3	; 163
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	de 01       	movw	r26, r28
     1d2:	a7 59       	subi	r26, 0x97	; 151
     1d4:	bf 4f       	sbci	r27, 0xFF	; 255
     1d6:	01 90       	ld	r0, Z+
     1d8:	0d 92       	st	X+, r0
     1da:	8a 95       	dec	r24
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <HOME_InitUserNameAndPass+0x116>
     1de:	88 e0       	ldi	r24, 0x08	; 8
     1e0:	eb ea       	ldi	r30, 0xAB	; 171
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	de 01       	movw	r26, r28
     1e6:	af 58       	subi	r26, 0x8F	; 143
     1e8:	bf 4f       	sbci	r27, 0xFF	; 255
     1ea:	01 90       	ld	r0, Z+
     1ec:	0d 92       	st	X+, r0
     1ee:	8a 95       	dec	r24
     1f0:	e1 f7       	brne	.-8      	; 0x1ea <HOME_InitUserNameAndPass+0x12a>
     1f2:	88 e0       	ldi	r24, 0x08	; 8
     1f4:	eb ea       	ldi	r30, 0xAB	; 171
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	de 01       	movw	r26, r28
     1fa:	a7 58       	subi	r26, 0x87	; 135
     1fc:	bf 4f       	sbci	r27, 0xFF	; 255
     1fe:	01 90       	ld	r0, Z+
     200:	0d 92       	st	X+, r0
     202:	8a 95       	dec	r24
     204:	e1 f7       	brne	.-8      	; 0x1fe <HOME_InitUserNameAndPass+0x13e>
     206:	88 e0       	ldi	r24, 0x08	; 8
     208:	e3 eb       	ldi	r30, 0xB3	; 179
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	de 01       	movw	r26, r28
     20e:	af 57       	subi	r26, 0x7F	; 127
     210:	bf 4f       	sbci	r27, 0xFF	; 255
     212:	01 90       	ld	r0, Z+
     214:	0d 92       	st	X+, r0
     216:	8a 95       	dec	r24
     218:	e1 f7       	brne	.-8      	; 0x212 <HOME_InitUserNameAndPass+0x152>
     21a:	88 e0       	ldi	r24, 0x08	; 8
     21c:	e3 eb       	ldi	r30, 0xB3	; 179
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	de 01       	movw	r26, r28
     222:	a7 57       	subi	r26, 0x77	; 119
     224:	bf 4f       	sbci	r27, 0xFF	; 255
     226:	01 90       	ld	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	8a 95       	dec	r24
     22c:	e1 f7       	brne	.-8      	; 0x226 <HOME_InitUserNameAndPass+0x166>
     22e:	88 e0       	ldi	r24, 0x08	; 8
     230:	eb eb       	ldi	r30, 0xBB	; 187
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	de 01       	movw	r26, r28
     236:	af 56       	subi	r26, 0x6F	; 111
     238:	bf 4f       	sbci	r27, 0xFF	; 255
     23a:	01 90       	ld	r0, Z+
     23c:	0d 92       	st	X+, r0
     23e:	8a 95       	dec	r24
     240:	e1 f7       	brne	.-8      	; 0x23a <HOME_InitUserNameAndPass+0x17a>
     242:	88 e0       	ldi	r24, 0x08	; 8
     244:	eb eb       	ldi	r30, 0xBB	; 187
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	de 01       	movw	r26, r28
     24a:	a7 56       	subi	r26, 0x67	; 103
     24c:	bf 4f       	sbci	r27, 0xFF	; 255
     24e:	01 90       	ld	r0, Z+
     250:	0d 92       	st	X+, r0
     252:	8a 95       	dec	r24
     254:	e1 f7       	brne	.-8      	; 0x24e <HOME_InitUserNameAndPass+0x18e>
     256:	88 e0       	ldi	r24, 0x08	; 8
     258:	e3 ec       	ldi	r30, 0xC3	; 195
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	de 01       	movw	r26, r28
     25e:	af 55       	subi	r26, 0x5F	; 95
     260:	bf 4f       	sbci	r27, 0xFF	; 255
     262:	01 90       	ld	r0, Z+
     264:	0d 92       	st	X+, r0
     266:	8a 95       	dec	r24
     268:	e1 f7       	brne	.-8      	; 0x262 <HOME_InitUserNameAndPass+0x1a2>
     26a:	88 e0       	ldi	r24, 0x08	; 8
     26c:	e3 ec       	ldi	r30, 0xC3	; 195
     26e:	f0 e0       	ldi	r31, 0x00	; 0
     270:	de 01       	movw	r26, r28
     272:	a7 55       	subi	r26, 0x57	; 87
     274:	bf 4f       	sbci	r27, 0xFF	; 255
     276:	01 90       	ld	r0, Z+
     278:	0d 92       	st	X+, r0
     27a:	8a 95       	dec	r24
     27c:	e1 f7       	brne	.-8      	; 0x276 <HOME_InitUserNameAndPass+0x1b6>
     27e:	be 01       	movw	r22, r28
     280:	6f 5f       	subi	r22, 0xFF	; 255
     282:	7f 4f       	sbci	r23, 0xFF	; 255
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     28c:	be 01       	movw	r22, r28
     28e:	67 5f       	subi	r22, 0xF7	; 247
     290:	7f 4f       	sbci	r23, 0xFF	; 255
     292:	88 e0       	ldi	r24, 0x08	; 8
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     29a:	be 01       	movw	r22, r28
     29c:	6f 5e       	subi	r22, 0xEF	; 239
     29e:	7f 4f       	sbci	r23, 0xFF	; 255
     2a0:	80 e1       	ldi	r24, 0x10	; 16
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2a8:	be 01       	movw	r22, r28
     2aa:	67 5e       	subi	r22, 0xE7	; 231
     2ac:	7f 4f       	sbci	r23, 0xFF	; 255
     2ae:	88 e1       	ldi	r24, 0x18	; 24
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2b6:	be 01       	movw	r22, r28
     2b8:	6f 5d       	subi	r22, 0xDF	; 223
     2ba:	7f 4f       	sbci	r23, 0xFF	; 255
     2bc:	80 e2       	ldi	r24, 0x20	; 32
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2c4:	be 01       	movw	r22, r28
     2c6:	67 5d       	subi	r22, 0xD7	; 215
     2c8:	7f 4f       	sbci	r23, 0xFF	; 255
     2ca:	88 e2       	ldi	r24, 0x28	; 40
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2d2:	be 01       	movw	r22, r28
     2d4:	6f 5c       	subi	r22, 0xCF	; 207
     2d6:	7f 4f       	sbci	r23, 0xFF	; 255
     2d8:	80 e3       	ldi	r24, 0x30	; 48
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2e0:	be 01       	movw	r22, r28
     2e2:	67 5c       	subi	r22, 0xC7	; 199
     2e4:	7f 4f       	sbci	r23, 0xFF	; 255
     2e6:	88 e3       	ldi	r24, 0x38	; 56
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2ee:	be 01       	movw	r22, r28
     2f0:	6f 5b       	subi	r22, 0xBF	; 191
     2f2:	7f 4f       	sbci	r23, 0xFF	; 255
     2f4:	80 e4       	ldi	r24, 0x40	; 64
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     2fc:	be 01       	movw	r22, r28
     2fe:	67 5b       	subi	r22, 0xB7	; 183
     300:	7f 4f       	sbci	r23, 0xFF	; 255
     302:	88 e4       	ldi	r24, 0x48	; 72
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     30a:	be 01       	movw	r22, r28
     30c:	6f 5a       	subi	r22, 0xAF	; 175
     30e:	7f 4f       	sbci	r23, 0xFF	; 255
     310:	80 e5       	ldi	r24, 0x50	; 80
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     318:	be 01       	movw	r22, r28
     31a:	67 5a       	subi	r22, 0xA7	; 167
     31c:	7f 4f       	sbci	r23, 0xFF	; 255
     31e:	88 e5       	ldi	r24, 0x58	; 88
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     326:	be 01       	movw	r22, r28
     328:	6f 59       	subi	r22, 0x9F	; 159
     32a:	7f 4f       	sbci	r23, 0xFF	; 255
     32c:	80 e6       	ldi	r24, 0x60	; 96
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     334:	be 01       	movw	r22, r28
     336:	67 59       	subi	r22, 0x97	; 151
     338:	7f 4f       	sbci	r23, 0xFF	; 255
     33a:	88 e6       	ldi	r24, 0x68	; 104
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     342:	be 01       	movw	r22, r28
     344:	6f 58       	subi	r22, 0x8F	; 143
     346:	7f 4f       	sbci	r23, 0xFF	; 255
     348:	80 e7       	ldi	r24, 0x70	; 112
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     350:	be 01       	movw	r22, r28
     352:	67 58       	subi	r22, 0x87	; 135
     354:	7f 4f       	sbci	r23, 0xFF	; 255
     356:	88 e7       	ldi	r24, 0x78	; 120
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     35e:	be 01       	movw	r22, r28
     360:	6f 57       	subi	r22, 0x7F	; 127
     362:	7f 4f       	sbci	r23, 0xFF	; 255
     364:	80 e8       	ldi	r24, 0x80	; 128
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     36c:	be 01       	movw	r22, r28
     36e:	67 57       	subi	r22, 0x77	; 119
     370:	7f 4f       	sbci	r23, 0xFF	; 255
     372:	88 e8       	ldi	r24, 0x88	; 136
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     37a:	be 01       	movw	r22, r28
     37c:	6f 56       	subi	r22, 0x6F	; 111
     37e:	7f 4f       	sbci	r23, 0xFF	; 255
     380:	80 e9       	ldi	r24, 0x90	; 144
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     388:	be 01       	movw	r22, r28
     38a:	67 56       	subi	r22, 0x67	; 103
     38c:	7f 4f       	sbci	r23, 0xFF	; 255
     38e:	88 e9       	ldi	r24, 0x98	; 152
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     396:	be 01       	movw	r22, r28
     398:	6f 55       	subi	r22, 0x5F	; 95
     39a:	7f 4f       	sbci	r23, 0xFF	; 255
     39c:	80 ea       	ldi	r24, 0xA0	; 160
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     3a4:	be 01       	movw	r22, r28
     3a6:	67 55       	subi	r22, 0x57	; 87
     3a8:	7f 4f       	sbci	r23, 0xFF	; 255
     3aa:	88 ea       	ldi	r24, 0xA8	; 168
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
     3b2:	c0 55       	subi	r28, 0x50	; 80
     3b4:	df 4f       	sbci	r29, 0xFF	; 255
     3b6:	0f b6       	in	r0, 0x3f	; 63
     3b8:	f8 94       	cli
     3ba:	de bf       	out	0x3e, r29	; 62
     3bc:	0f be       	out	0x3f, r0	; 63
     3be:	cd bf       	out	0x3d, r28	; 61
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	08 95       	ret

000003c6 <HOME_voidInit>:
     3c6:	0e 94 4b 11 	call	0x2296	; 0x2296 <LCD_voidInit>
     3ca:	0e 94 de 14 	call	0x29bc	; 0x29bc <PWM_voidInitChannel_1A>
     3ce:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <PWM_voidInitChannel_1B>
     3d2:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <EEPROM_voidInit>
     3d6:	64 e0       	ldi	r22, 0x04	; 4
     3d8:	83 e0       	ldi	r24, 0x03	; 3
     3da:	0e 94 d5 12 	call	0x25aa	; 0x25aa <SERVO_voidInit>
     3de:	60 e0       	ldi	r22, 0x00	; 0
     3e0:	70 e0       	ldi	r23, 0x00	; 0
     3e2:	cb 01       	movw	r24, r22
     3e4:	0e 94 db 12 	call	0x25b6	; 0x25b6 <SERVO_voidStartByAngle>
     3e8:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <KPD_voidInit>
     3ec:	83 e0       	ldi	r24, 0x03	; 3
     3ee:	0e 94 1c 13 	call	0x2638	; 0x2638 <ADC_voidInit>
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	60 e0       	ldi	r22, 0x00	; 0
     3f6:	80 e0       	ldi	r24, 0x00	; 0
     3f8:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
     3fc:	41 e0       	ldi	r20, 0x01	; 1
     3fe:	62 e0       	ldi	r22, 0x02	; 2
     400:	82 e0       	ldi	r24, 0x02	; 2
     402:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
     406:	66 e0       	ldi	r22, 0x06	; 6
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <BUZZER_voidInit>
     40e:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <BL_voidInit>
     412:	41 e0       	ldi	r20, 0x01	; 1
     414:	61 e0       	ldi	r22, 0x01	; 1
     416:	83 e0       	ldi	r24, 0x03	; 3
     418:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
     41c:	40 e0       	ldi	r20, 0x00	; 0
     41e:	60 e0       	ldi	r22, 0x00	; 0
     420:	83 e0       	ldi	r24, 0x03	; 3
     422:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
     426:	0e 94 da 14 	call	0x29b4	; 0x29b4 <GI_voidEnable>
     42a:	0e 94 9c 15 	call	0x2b38	; 0x2b38 <TMR0_voidInit>
     42e:	63 e0       	ldi	r22, 0x03	; 3
     430:	83 e0       	ldi	r24, 0x03	; 3
     432:	0e 94 b7 12 	call	0x256e	; 0x256e <LED_voidInit>
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	0e 94 b7 12 	call	0x256e	; 0x256e <LED_voidInit>
     43e:	62 e0       	ldi	r22, 0x02	; 2
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	0e 94 b7 12 	call	0x256e	; 0x256e <LED_voidInit>
     446:	63 e0       	ldi	r22, 0x03	; 3
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	0e 94 b7 12 	call	0x256e	; 0x256e <LED_voidInit>
     44e:	62 e0       	ldi	r22, 0x02	; 2
     450:	83 e0       	ldi	r24, 0x03	; 3
     452:	0e 94 b7 12 	call	0x256e	; 0x256e <LED_voidInit>
     456:	65 e0       	ldi	r22, 0x05	; 5
     458:	83 e0       	ldi	r24, 0x03	; 3
     45a:	0e 94 b7 12 	call	0x256e	; 0x256e <LED_voidInit>
     45e:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <TMR2_voidInit>
     462:	89 e4       	ldi	r24, 0x49	; 73
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <TMR2_SetCallBackCTC>
     46a:	0e 94 5c 16 	call	0x2cb8	; 0x2cb8 <TMR2_voidStart>
     46e:	08 95       	ret

00000470 <HOME_voidRemoteGetUserAndPass>:
     470:	cf 92       	push	r12
     472:	df 92       	push	r13
     474:	ef 92       	push	r14
     476:	ff 92       	push	r15
     478:	0f 93       	push	r16
     47a:	1f 93       	push	r17
     47c:	cf 93       	push	r28
     47e:	00 97       	sbiw	r24, 0x00	; 0
     480:	09 f4       	brne	.+2      	; 0x484 <HOME_voidRemoteGetUserAndPass+0x14>
     482:	64 c0       	rjmp	.+200    	; 0x54c <HOME_voidRemoteGetUserAndPass+0xdc>
     484:	61 15       	cp	r22, r1
     486:	71 05       	cpc	r23, r1
     488:	09 f4       	brne	.+2      	; 0x48c <HOME_voidRemoteGetUserAndPass+0x1c>
     48a:	60 c0       	rjmp	.+192    	; 0x54c <HOME_voidRemoteGetUserAndPass+0xdc>
     48c:	8b 01       	movw	r16, r22
     48e:	7c 01       	movw	r14, r24
     490:	8d ef       	ldi	r24, 0xFD	; 253
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
     498:	8d e0       	ldi	r24, 0x0D	; 13
     49a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     49e:	c0 e0       	ldi	r28, 0x00	; 0
     4a0:	0b c0       	rjmp	.+22     	; 0x4b8 <HOME_voidRemoteGetUserAndPass+0x48>
     4a2:	67 01       	movw	r12, r14
     4a4:	cc 0e       	add	r12, r28
     4a6:	d1 1c       	adc	r13, r1
     4a8:	c6 01       	movw	r24, r12
     4aa:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
     4ae:	f6 01       	movw	r30, r12
     4b0:	80 81       	ld	r24, Z
     4b2:	83 32       	cpi	r24, 0x23	; 35
     4b4:	19 f0       	breq	.+6      	; 0x4bc <HOME_voidRemoteGetUserAndPass+0x4c>
     4b6:	cf 5f       	subi	r28, 0xFF	; 255
     4b8:	c8 30       	cpi	r28, 0x08	; 8
     4ba:	98 f3       	brcs	.-26     	; 0x4a2 <HOME_voidRemoteGetUserAndPass+0x32>
     4bc:	f7 01       	movw	r30, r14
     4be:	ec 0f       	add	r30, r28
     4c0:	f1 1d       	adc	r31, r1
     4c2:	10 82       	st	Z, r1
     4c4:	85 ef       	ldi	r24, 0xF5	; 245
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
     4cc:	8d e0       	ldi	r24, 0x0D	; 13
     4ce:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     4d2:	c0 e0       	ldi	r28, 0x00	; 0
     4d4:	07 c0       	rjmp	.+14     	; 0x4e4 <HOME_voidRemoteGetUserAndPass+0x74>
     4d6:	f7 01       	movw	r30, r14
     4d8:	ec 0f       	add	r30, r28
     4da:	f1 1d       	adc	r31, r1
     4dc:	80 81       	ld	r24, Z
     4de:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     4e2:	cf 5f       	subi	r28, 0xFF	; 255
     4e4:	c8 30       	cpi	r28, 0x08	; 8
     4e6:	b8 f3       	brcs	.-18     	; 0x4d6 <HOME_voidRemoteGetUserAndPass+0x66>
     4e8:	8d e0       	ldi	r24, 0x0D	; 13
     4ea:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     4ee:	88 e0       	ldi	r24, 0x08	; 8
     4f0:	91 e0       	ldi	r25, 0x01	; 1
     4f2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
     4f6:	8d e0       	ldi	r24, 0x0D	; 13
     4f8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     4fc:	c0 e0       	ldi	r28, 0x00	; 0
     4fe:	0b c0       	rjmp	.+22     	; 0x516 <HOME_voidRemoteGetUserAndPass+0xa6>
     500:	78 01       	movw	r14, r16
     502:	ec 0e       	add	r14, r28
     504:	f1 1c       	adc	r15, r1
     506:	c7 01       	movw	r24, r14
     508:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
     50c:	f7 01       	movw	r30, r14
     50e:	80 81       	ld	r24, Z
     510:	83 32       	cpi	r24, 0x23	; 35
     512:	19 f0       	breq	.+6      	; 0x51a <HOME_voidRemoteGetUserAndPass+0xaa>
     514:	cf 5f       	subi	r28, 0xFF	; 255
     516:	c9 30       	cpi	r28, 0x09	; 9
     518:	98 f3       	brcs	.-26     	; 0x500 <HOME_voidRemoteGetUserAndPass+0x90>
     51a:	f8 01       	movw	r30, r16
     51c:	ec 0f       	add	r30, r28
     51e:	f1 1d       	adc	r31, r1
     520:	10 82       	st	Z, r1
     522:	82 e1       	ldi	r24, 0x12	; 18
     524:	91 e0       	ldi	r25, 0x01	; 1
     526:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
     52a:	8d e0       	ldi	r24, 0x0D	; 13
     52c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     530:	c0 e0       	ldi	r28, 0x00	; 0
     532:	07 c0       	rjmp	.+14     	; 0x542 <HOME_voidRemoteGetUserAndPass+0xd2>
     534:	f8 01       	movw	r30, r16
     536:	ec 0f       	add	r30, r28
     538:	f1 1d       	adc	r31, r1
     53a:	80 81       	ld	r24, Z
     53c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     540:	cf 5f       	subi	r28, 0xFF	; 255
     542:	c8 30       	cpi	r28, 0x08	; 8
     544:	b8 f3       	brcs	.-18     	; 0x534 <HOME_voidRemoteGetUserAndPass+0xc4>
     546:	8d e0       	ldi	r24, 0x0D	; 13
     548:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     54c:	cf 91       	pop	r28
     54e:	1f 91       	pop	r17
     550:	0f 91       	pop	r16
     552:	ff 90       	pop	r15
     554:	ef 90       	pop	r14
     556:	df 90       	pop	r13
     558:	cf 90       	pop	r12
     55a:	08 95       	ret

0000055c <HOME_voidChangeUserNameAndPass>:

void HOME_voidChangeUserNameAndPass(void)
{
     55c:	ef 92       	push	r14
     55e:	ff 92       	push	r15
     560:	0f 93       	push	r16
     562:	1f 93       	push	r17
     564:	cf 93       	push	r28
     566:	df 93       	push	r29
     568:	cd b7       	in	r28, 0x3d	; 61
     56a:	de b7       	in	r29, 0x3e	; 62
     56c:	e0 97       	sbiw	r28, 0x30	; 48
     56e:	0f b6       	in	r0, 0x3f	; 63
     570:	f8 94       	cli
     572:	de bf       	out	0x3e, r29	; 62
     574:	0f be       	out	0x3f, r0	; 63
     576:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8NameByteCheckCounter,Local_u8PagesCounter,Local_u8NameByteCheck,Local_u8PassByteCheck,Local_u8PassByteCheckCounter,
	Local_u8UserNameLocation,LocaL_u8RightEntery=0,Local_u8WrongUserPassCounter=0,Local_u8WrongUserNameCounter=0,Local_u8ReplaceCounter;
	
	
	//dis request for use name and pass
	BL_voidTxString	("Please Enter User Name & Password u want to change");
     578:	83 e9       	ldi	r24, 0x93	; 147
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxString("\r");
     580:	86 ec       	ldi	r24, 0xC6	; 198
     582:	91 e0       	ldi	r25, 0x01	; 1
     584:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	
	//get user name and pass from BL
	HOME_voidRemoteGetUserAndPass(&local_u8OldUserName,&local_u8OldUserPass);
     588:	be 01       	movw	r22, r28
     58a:	67 5f       	subi	r22, 0xF7	; 247
     58c:	7f 4f       	sbci	r23, 0xFF	; 255
     58e:	ce 01       	movw	r24, r28
     590:	01 96       	adiw	r24, 0x01	; 1
     592:	0e 94 38 02 	call	0x470	; 0x470 <HOME_voidRemoteGetUserAndPass>
	
	//loop on every user except admin
	for(Local_u8PagesCounter=0;Local_u8PagesCounter<((HOME_MAX_NUM_OF_LOCAL_USER*2)+1);Local_u8PagesCounter++)
     596:	10 e0       	ldi	r17, 0x00	; 0
     598:	51 c0       	rjmp	.+162    	; 0x63c <HOME_voidChangeUserNameAndPass+0xe0>
	{
		Local_u8NameByteCheck=0;
		Local_u8PassByteCheck=0;
		
		//skip admin page
		if(Local_u8PagesCounter==HOME_MAX_NUM_OF_LOCAL_USER)
     59a:	15 30       	cpi	r17, 0x05	; 5
     59c:	09 f4       	brne	.+2      	; 0x5a0 <HOME_voidChangeUserNameAndPass+0x44>
     59e:	4d c0       	rjmp	.+154    	; 0x63a <HOME_voidChangeUserNameAndPass+0xde>
		{
			continue;
		}
		
		//get user name and pass from EEPROM
		Local_u8UserNameLocation=(2*Local_u8PagesCounter)*HOME_USER_NAME_AND_PASS_MAX_LENGTh;
     5a0:	01 2f       	mov	r16, r17
     5a2:	02 95       	swap	r16
     5a4:	00 7f       	andi	r16, 0xF0	; 240
		EEPROM_voidSequentialRead(Local_u8UserNameLocation,HOME_USER_NAME_AND_PASS_MAX_LENGTh,&local_u8SavedUserName);
     5a6:	e0 2e       	mov	r14, r16
     5a8:	f1 2c       	mov	r15, r1
     5aa:	ae 01       	movw	r20, r28
     5ac:	4f 5d       	subi	r20, 0xDF	; 223
     5ae:	5f 4f       	sbci	r21, 0xFF	; 255
     5b0:	68 e0       	ldi	r22, 0x08	; 8
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	c7 01       	movw	r24, r14
     5b6:	0e 94 bd 0f 	call	0x1f7a	; 0x1f7a <EEPROM_voidSequentialRead>
		EEPROM_voidSequentialRead((Local_u8UserNameLocation+HOME_USER_NAME_AND_PASS_MAX_LENGTh),HOME_USER_NAME_AND_PASS_MAX_LENGTh,&local_u8SavedUserPass);
     5ba:	ae 01       	movw	r20, r28
     5bc:	47 5d       	subi	r20, 0xD7	; 215
     5be:	5f 4f       	sbci	r21, 0xFF	; 255
     5c0:	68 e0       	ldi	r22, 0x08	; 8
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	c7 01       	movw	r24, r14
     5c6:	08 96       	adiw	r24, 0x08	; 8
     5c8:	0e 94 bd 0f 	call	0x1f7a	; 0x1f7a <EEPROM_voidSequentialRead>
	HOME_voidRemoteGetUserAndPass(&local_u8OldUserName,&local_u8OldUserPass);
	
	//loop on every user except admin
	for(Local_u8PagesCounter=0;Local_u8PagesCounter<((HOME_MAX_NUM_OF_LOCAL_USER*2)+1);Local_u8PagesCounter++)
	{
		Local_u8NameByteCheck=0;
     5cc:	40 e0       	ldi	r20, 0x00	; 0
		Local_u8UserNameLocation=(2*Local_u8PagesCounter)*HOME_USER_NAME_AND_PASS_MAX_LENGTh;
		EEPROM_voidSequentialRead(Local_u8UserNameLocation,HOME_USER_NAME_AND_PASS_MAX_LENGTh,&local_u8SavedUserName);
		EEPROM_voidSequentialRead((Local_u8UserNameLocation+HOME_USER_NAME_AND_PASS_MAX_LENGTh),HOME_USER_NAME_AND_PASS_MAX_LENGTh,&local_u8SavedUserPass);
		
		//loop on every byte of user name
		for(Local_u8NameByteCheckCounter=0;Local_u8NameByteCheckCounter<HOME_USER_NAME_AND_PASS_MAX_LENGTh;Local_u8NameByteCheckCounter++)
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	14 c0       	rjmp	.+40     	; 0x5fa <HOME_voidChangeUserNameAndPass+0x9e>
		{
			
			//check the byte stored with the entered	
			if(local_u8OldUserName[Local_u8NameByteCheckCounter]==local_u8SavedUserName[Local_u8NameByteCheckCounter])
     5d2:	82 2f       	mov	r24, r18
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	e1 e0       	ldi	r30, 0x01	; 1
     5d8:	f0 e0       	ldi	r31, 0x00	; 0
     5da:	ec 0f       	add	r30, r28
     5dc:	fd 1f       	adc	r31, r29
     5de:	e8 0f       	add	r30, r24
     5e0:	f9 1f       	adc	r31, r25
     5e2:	30 81       	ld	r19, Z
     5e4:	e1 e2       	ldi	r30, 0x21	; 33
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	ec 0f       	add	r30, r28
     5ea:	fd 1f       	adc	r31, r29
     5ec:	e8 0f       	add	r30, r24
     5ee:	f9 1f       	adc	r31, r25
     5f0:	80 81       	ld	r24, Z
     5f2:	38 13       	cpse	r19, r24
     5f4:	01 c0       	rjmp	.+2      	; 0x5f8 <HOME_voidChangeUserNameAndPass+0x9c>
			{
				
				Local_u8NameByteCheck++;
     5f6:	4f 5f       	subi	r20, 0xFF	; 255
		Local_u8UserNameLocation=(2*Local_u8PagesCounter)*HOME_USER_NAME_AND_PASS_MAX_LENGTh;
		EEPROM_voidSequentialRead(Local_u8UserNameLocation,HOME_USER_NAME_AND_PASS_MAX_LENGTh,&local_u8SavedUserName);
		EEPROM_voidSequentialRead((Local_u8UserNameLocation+HOME_USER_NAME_AND_PASS_MAX_LENGTh),HOME_USER_NAME_AND_PASS_MAX_LENGTh,&local_u8SavedUserPass);
		
		//loop on every byte of user name
		for(Local_u8NameByteCheckCounter=0;Local_u8NameByteCheckCounter<HOME_USER_NAME_AND_PASS_MAX_LENGTh;Local_u8NameByteCheckCounter++)
     5f8:	2f 5f       	subi	r18, 0xFF	; 255
     5fa:	28 30       	cpi	r18, 0x08	; 8
     5fc:	50 f3       	brcs	.-44     	; 0x5d2 <HOME_voidChangeUserNameAndPass+0x76>
				
			}
			
		}
	
		if(Local_u8NameByteCheck==HOME_USER_NAME_AND_PASS_MAX_LENGTh)
     5fe:	48 30       	cpi	r20, 0x08	; 8
     600:	e1 f4       	brne	.+56     	; 0x63a <HOME_voidChangeUserNameAndPass+0xde>
     602:	15 c0       	rjmp	.+42     	; 0x62e <HOME_voidChangeUserNameAndPass+0xd2>
		{
			//loop on every byte of password
			for(Local_u8PassByteCheckCounter=0;Local_u8PassByteCheckCounter<HOME_USER_NAME_AND_PASS_MAX_LENGTh;Local_u8PassByteCheckCounter++)
			{
				//check the byte stored with the entered
				if(local_u8OldUserPass[Local_u8PassByteCheckCounter]==local_u8SavedUserPass[Local_u8PassByteCheckCounter])
     604:	82 2f       	mov	r24, r18
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	e9 e0       	ldi	r30, 0x09	; 9
     60a:	f0 e0       	ldi	r31, 0x00	; 0
     60c:	ec 0f       	add	r30, r28
     60e:	fd 1f       	adc	r31, r29
     610:	e8 0f       	add	r30, r24
     612:	f9 1f       	adc	r31, r25
     614:	30 81       	ld	r19, Z
     616:	e9 e2       	ldi	r30, 0x29	; 41
     618:	f0 e0       	ldi	r31, 0x00	; 0
     61a:	ec 0f       	add	r30, r28
     61c:	fd 1f       	adc	r31, r29
     61e:	e8 0f       	add	r30, r24
     620:	f9 1f       	adc	r31, r25
     622:	80 81       	ld	r24, Z
     624:	38 13       	cpse	r19, r24
     626:	01 c0       	rjmp	.+2      	; 0x62a <HOME_voidChangeUserNameAndPass+0xce>
				{
					Local_u8PassByteCheck++;
     628:	4f 5f       	subi	r20, 0xFF	; 255
		}
	
		if(Local_u8NameByteCheck==HOME_USER_NAME_AND_PASS_MAX_LENGTh)
		{
			//loop on every byte of password
			for(Local_u8PassByteCheckCounter=0;Local_u8PassByteCheckCounter<HOME_USER_NAME_AND_PASS_MAX_LENGTh;Local_u8PassByteCheckCounter++)
     62a:	2f 5f       	subi	r18, 0xFF	; 255
     62c:	02 c0       	rjmp	.+4      	; 0x632 <HOME_voidChangeUserNameAndPass+0xd6>
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	40 e0       	ldi	r20, 0x00	; 0
     632:	28 30       	cpi	r18, 0x08	; 8
     634:	38 f3       	brcs	.-50     	; 0x604 <HOME_voidChangeUserNameAndPass+0xa8>
				}
						
			}
			
			//check the entry is right or wrong
			if(Local_u8PassByteCheck==HOME_USER_NAME_AND_PASS_MAX_LENGTh)
     636:	48 30       	cpi	r20, 0x08	; 8
     638:	31 f0       	breq	.+12     	; 0x646 <HOME_voidChangeUserNameAndPass+0xea>
	
	//get user name and pass from BL
	HOME_voidRemoteGetUserAndPass(&local_u8OldUserName,&local_u8OldUserPass);
	
	//loop on every user except admin
	for(Local_u8PagesCounter=0;Local_u8PagesCounter<((HOME_MAX_NUM_OF_LOCAL_USER*2)+1);Local_u8PagesCounter++)
     63a:	1f 5f       	subi	r17, 0xFF	; 255
     63c:	1b 30       	cpi	r17, 0x0B	; 11
     63e:	08 f4       	brcc	.+2      	; 0x642 <HOME_voidChangeUserNameAndPass+0xe6>
     640:	ac cf       	rjmp	.-168    	; 0x59a <HOME_voidChangeUserNameAndPass+0x3e>
{
	u8 local_u8OldUserName[HOME_USER_NAME_AND_PASS_MAX_LENGTh],local_u8OldUserPass[HOME_USER_NAME_AND_PASS_MAX_LENGTh];
	u8 local_u8TempUserName[HOME_USER_NAME_AND_PASS_MAX_LENGTh],local_u8TempUserPass[HOME_USER_NAME_AND_PASS_MAX_LENGTh];
	u8 local_u8SavedUserName[HOME_USER_NAME_AND_PASS_MAX_LENGTh],local_u8SavedUserPass[HOME_USER_NAME_AND_PASS_MAX_LENGTh];
	u8 Local_u8NameByteCheckCounter,Local_u8PagesCounter,Local_u8NameByteCheck,Local_u8PassByteCheck,Local_u8PassByteCheckCounter,
	Local_u8UserNameLocation,LocaL_u8RightEntery=0,Local_u8WrongUserPassCounter=0,Local_u8WrongUserNameCounter=0,Local_u8ReplaceCounter;
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	01 c0       	rjmp	.+2      	; 0x648 <HOME_voidChangeUserNameAndPass+0xec>
			//check the entry is right or wrong
			if(Local_u8PassByteCheck==HOME_USER_NAME_AND_PASS_MAX_LENGTh)
			{
				
			
				LocaL_u8RightEntery=1;
     646:	81 e0       	ldi	r24, 0x01	; 1
		}
			
	}
	
	//case of wright entry
	if(LocaL_u8RightEntery==1)
     648:	81 30       	cpi	r24, 0x01	; 1
     64a:	21 f5       	brne	.+72     	; 0x694 <HOME_voidChangeUserNameAndPass+0x138>
	{
		
		BL_voidTxString	("Please Enter The new User And Pass");
     64c:	88 ec       	ldi	r24, 0xC8	; 200
     64e:	91 e0       	ldi	r25, 0x01	; 1
     650:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
		BL_voidTxChar('\r');
     654:	8d e0       	ldi	r24, 0x0D	; 13
     656:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
		//get New user name and pass from BL
		HOME_voidRemoteGetUserAndPass(&local_u8TempUserName,&local_u8TempUserPass);
     65a:	be 01       	movw	r22, r28
     65c:	67 5e       	subi	r22, 0xE7	; 231
     65e:	7f 4f       	sbci	r23, 0xFF	; 255
     660:	ce 01       	movw	r24, r28
     662:	41 96       	adiw	r24, 0x11	; 17
     664:	0e 94 38 02 	call	0x470	; 0x470 <HOME_voidRemoteGetUserAndPass>
		//write the new user name & pass in EEPROM
		EEPROM_voidWritePage(Local_u8UserNameLocation,&local_u8TempUserName);
     668:	10 e0       	ldi	r17, 0x00	; 0
     66a:	be 01       	movw	r22, r28
     66c:	6f 5e       	subi	r22, 0xEF	; 239
     66e:	7f 4f       	sbci	r23, 0xFF	; 255
     670:	c8 01       	movw	r24, r16
     672:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
		EEPROM_voidWritePage((Local_u8UserNameLocation+HOME_USER_NAME_AND_PASS_MAX_LENGTh),&local_u8TempUserPass);
     676:	be 01       	movw	r22, r28
     678:	67 5e       	subi	r22, 0xE7	; 231
     67a:	7f 4f       	sbci	r23, 0xFF	; 255
     67c:	c8 01       	movw	r24, r16
     67e:	08 96       	adiw	r24, 0x08	; 8
     680:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <EEPROM_voidWritePage>
		BL_voidTxString	("User Data Changed Successfully");
     684:	8b ee       	ldi	r24, 0xEB	; 235
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
		BL_voidTxChar('\r');
     68c:	8d e0       	ldi	r24, 0x0D	; 13
     68e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
     692:	07 c0       	rjmp	.+14     	; 0x6a2 <HOME_voidChangeUserNameAndPass+0x146>
	}
	//is the entery was wrong 
	else 
	{

		BL_voidTxString	("Wrong User Name or password");
     694:	8a e0       	ldi	r24, 0x0A	; 10
     696:	92 e0       	ldi	r25, 0x02	; 2
     698:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
		BL_voidTxChar('\r');
     69c:	8d e0       	ldi	r24, 0x0D	; 13
     69e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>

	}

	
	
}
     6a2:	e0 96       	adiw	r28, 0x30	; 48
     6a4:	0f b6       	in	r0, 0x3f	; 63
     6a6:	f8 94       	cli
     6a8:	de bf       	out	0x3e, r29	; 62
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
     6b2:	1f 91       	pop	r17
     6b4:	0f 91       	pop	r16
     6b6:	ff 90       	pop	r15
     6b8:	ef 90       	pop	r14
     6ba:	08 95       	ret

000006bc <HOME_voidFireAnALarm>:


void HOME_voidFireAnALarm(u8 copy_pu8UserStatus)
{
     6bc:	cf 93       	push	r28
     6be:	df 93       	push	r29
     6c0:	00 d0       	rcall	.+0      	; 0x6c2 <HOME_voidFireAnALarm+0x6>
     6c2:	cd b7       	in	r28, 0x3d	; 61
     6c4:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8CheckAlarm,Local_u8ResetValue;
	
	// fire alarm if the user entry failed
	if(copy_pu8UserStatus==HOME_LOGIN_FAILED)
     6c6:	85 30       	cpi	r24, 0x05	; 5
     6c8:	29 f4       	brne	.+10     	; 0x6d4 <HOME_voidFireAnALarm+0x18>
	{
		EEPROM_voidWriteByte(HOME_ALARM_LOCATION,HOME_ALARM_VALUE);
     6ca:	6f ef       	ldi	r22, 0xFF	; 255
     6cc:	84 eb       	ldi	r24, 0xB4	; 180
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <EEPROM_voidWriteByte>
	}
	
	//check alarm status
	EEPROM_voidReadByte(HOME_ALARM_LOCATION,&Local_u8CheckAlarm);
     6d4:	be 01       	movw	r22, r28
     6d6:	6f 5f       	subi	r22, 0xFF	; 255
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	84 eb       	ldi	r24, 0xB4	; 180
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <EEPROM_voidReadByte>
	
	//block system if there is an alarm
	if(Local_u8CheckAlarm==HOME_ALARM_VALUE)
     6e2:	89 81       	ldd	r24, Y+1	; 0x01
     6e4:	8f 3f       	cpi	r24, 0xFF	; 255
     6e6:	29 f5       	brne	.+74     	; 0x732 <HOME_voidFireAnALarm+0x76>
	{
		while(1)
		{
			BL_voidTxString	("ACCESS DENIED");
     6e8:	80 e3       	ldi	r24, 0x30	; 48
     6ea:	91 e0       	ldi	r25, 0x01	; 1
     6ec:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
			BL_voidTxChar('\r');
     6f0:	8d e0       	ldi	r24, 0x0D	; 13
     6f2:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>

			BUZZER_voidOn(DIO_PORTD,DIO_PIN6);
     6f6:	66 e0       	ldi	r22, 0x06	; 6
     6f8:	83 e0       	ldi	r24, 0x03	; 3
     6fa:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <BUZZER_voidOn>
			
			LCD_voidClear();
     6fe:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
			LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,0);
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	81 e0       	ldi	r24, 0x01	; 1
     706:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
			LCD_voidDisplayString("ACCESS DENIED");
     70a:	80 e3       	ldi	r24, 0x30	; 48
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
			
			//if the user enter # end alarm
			BL_voidRxChar(&Local_u8ResetValue);
     712:	ce 01       	movw	r24, r28
     714:	02 96       	adiw	r24, 0x02	; 2
     716:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
			if(Local_u8ResetValue=='#')
     71a:	8a 81       	ldd	r24, Y+2	; 0x02
     71c:	83 32       	cpi	r24, 0x23	; 35
     71e:	21 f7       	brne	.-56     	; 0x6e8 <HOME_voidFireAnALarm+0x2c>
			{
				BUZZER_voidOff(DIO_PORTD,DIO_PIN6);
     720:	66 e0       	ldi	r22, 0x06	; 6
     722:	83 e0       	ldi	r24, 0x03	; 3
     724:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <BUZZER_voidOff>
				break;
			}
			
		}
		//clear alarm byte
		EEPROM_voidWriteByte(HOME_ALARM_LOCATION,HOME_ALARM_CLEAR_VALUE);
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	84 eb       	ldi	r24, 0xB4	; 180
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <EEPROM_voidWriteByte>
	}
}
     732:	0f 90       	pop	r0
     734:	0f 90       	pop	r0
     736:	df 91       	pop	r29
     738:	cf 91       	pop	r28
     73a:	08 95       	ret

0000073c <KPD_Interface_RemoteAdmin>:
void KPD_Interface_RemoteAdmin(void)
{
	// This function is for admin usertype for accessing the smart home remotely showing all options available for the admin//

	//setting the TRM0 ctc interrupt function
	TMR0_SetCallBackCTC(&Idle_RemoteAction);
     73c:	8e e6       	ldi	r24, 0x6E	; 110
     73e:	9b e0       	ldi	r25, 0x0B	; 11
     740:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <TMR0_SetCallBackCTC>
	BL_voidTxChar('\r');
     744:	8d e0       	ldi	r24, 0x0D	; 13
     746:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	BL_voidTxString("1-AC 2-light");
     74a:	86 e2       	ldi	r24, 0x26	; 38
     74c:	92 e0       	ldi	r25, 0x02	; 2
     74e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
     752:	8d e0       	ldi	r24, 0x0D	; 13
     754:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	BL_voidTxString("3-temp 4-Door");
     758:	83 e3       	ldi	r24, 0x33	; 51
     75a:	92 e0       	ldi	r25, 0x02	; 2
     75c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
     760:	8d e0       	ldi	r24, 0x0D	; 13
     762:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	BL_voidTxString("5- change username and password");
     766:	81 e4       	ldi	r24, 0x41	; 65
     768:	92 e0       	ldi	r25, 0x02	; 2
     76a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
     76e:	8d e0       	ldi	r24, 0x0D	; 13
     770:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	TMR0_voidStart();
     774:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
	//reciving user selection from BL
	BL_voidRxChar(&bluetooh_value);
     778:	82 e8       	ldi	r24, 0x82	; 130
     77a:	94 e0       	ldi	r25, 0x04	; 4
     77c:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
	TMR0_voidStop();
     780:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
	switch (bluetooh_value)
     784:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     788:	83 33       	cpi	r24, 0x33	; 51
     78a:	09 f4       	brne	.+2      	; 0x78e <KPD_Interface_RemoteAdmin+0x52>
     78c:	56 c3       	rjmp	.+1708   	; 0xe3a <__stack+0x5db>
     78e:	30 f4       	brcc	.+12     	; 0x79c <KPD_Interface_RemoteAdmin+0x60>
     790:	81 33       	cpi	r24, 0x31	; 49
     792:	59 f0       	breq	.+22     	; 0x7aa <KPD_Interface_RemoteAdmin+0x6e>
     794:	82 33       	cpi	r24, 0x32	; 50
     796:	09 f4       	brne	.+2      	; 0x79a <KPD_Interface_RemoteAdmin+0x5e>
     798:	3f c0       	rjmp	.+126    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     79a:	08 95       	ret
     79c:	84 33       	cpi	r24, 0x34	; 52
     79e:	09 f4       	brne	.+2      	; 0x7a2 <KPD_Interface_RemoteAdmin+0x66>
     7a0:	78 c3       	rjmp	.+1776   	; 0xe92 <__stack+0x633>
     7a2:	85 33       	cpi	r24, 0x35	; 53
     7a4:	09 f4       	brne	.+2      	; 0x7a8 <KPD_Interface_RemoteAdmin+0x6c>
     7a6:	c7 c3       	rjmp	.+1934   	; 0xf36 <__stack+0x6d7>
     7a8:	08 95       	ret
	{
	case ('1'):
		BL_voidTxString("AC Is On/off");
     7aa:	81 e6       	ldi	r24, 0x61	; 97
     7ac:	92 e0       	ldi	r25, 0x02	; 2
     7ae:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
        BL_voidTxChar('\r');
     7b2:	8d e0       	ldi	r24, 0x0D	; 13
     7b4:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
		//getting temp from ADC
        ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp); 
     7b8:	62 e7       	ldi	r22, 0x72	; 114
     7ba:	74 e0       	ldi	r23, 0x04	; 4
     7bc:	80 e0       	ldi	r24, 0x00	; 0
     7be:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
				//sprintf is used to format and store a string in a buffer
				sprintf(tempString, "Room Temp: %d c", local_temp);
     7c2:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <__data_end>
     7c6:	1f 92       	push	r1
     7c8:	8f 93       	push	r24
     7ca:	8e e6       	ldi	r24, 0x6E	; 110
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	9f 93       	push	r25
     7d0:	8f 93       	push	r24
     7d2:	87 e9       	ldi	r24, 0x97	; 151
     7d4:	94 e0       	ldi	r25, 0x04	; 4
     7d6:	9f 93       	push	r25
     7d8:	8f 93       	push	r24
     7da:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
				BL_voidTxString(tempString);
     7de:	87 e9       	ldi	r24, 0x97	; 151
     7e0:	94 e0       	ldi	r25, 0x04	; 4
     7e2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
     7e6:	8d e0       	ldi	r24, 0x0D	; 13
     7e8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				BL_voidTxString("0-go to home");
     7ec:	8e e7       	ldi	r24, 0x7E	; 126
     7ee:	92 e0       	ldi	r25, 0x02	; 2
     7f0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
     7f4:	8d e0       	ldi	r24, 0x0D	; 13
     7f6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				TMR0_voidStart();
     7fa:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
				BL_voidRxChar(&bluetooh_value);
     7fe:	82 e8       	ldi	r24, 0x82	; 130
     800:	94 e0       	ldi	r25, 0x04	; 4
     802:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
				TMR0_voidStop();
     806:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
				if (bluetooh_value=='0')
				{
					
				}
		break;
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	0f 90       	pop	r0
     810:	0f 90       	pop	r0
     812:	0f 90       	pop	r0
     814:	0f 90       	pop	r0
     816:	08 95       	ret
	
	case ('2'):

       
	   		BL_voidTxChar('\r');     
     818:	8d e0       	ldi	r24, 0x0D	; 13
     81a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
            BL_voidTxString("Choose light to");
     81e:	8b e8       	ldi	r24, 0x8B	; 139
     820:	92 e0       	ldi	r25, 0x02	; 2
     822:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
            BL_voidTxChar('\r');
     826:	8d e0       	ldi	r24, 0x0D	; 13
     828:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
            BL_voidTxString("control(1-6)");
     82c:	8b e9       	ldi	r24, 0x9B	; 155
     82e:	92 e0       	ldi	r25, 0x02	; 2
     830:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
			BL_voidTxChar('\r');
     834:	8d e0       	ldi	r24, 0x0D	; 13
     836:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
			BL_voidTxChar('\r');
     83a:	8d e0       	ldi	r24, 0x0D	; 13
     83c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
            TMR0_voidStart();
     840:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
			BL_voidRxChar(&bluetooh_value);
     844:	82 e8       	ldi	r24, 0x82	; 130
     846:	94 e0       	ldi	r25, 0x04	; 4
     848:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
            TMR0_voidStop();
     84c:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
            switch (bluetooh_value)
     850:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     854:	83 33       	cpi	r24, 0x33	; 51
     856:	09 f4       	brne	.+2      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     858:	a0 c0       	rjmp	.+320    	; 0x99a <__stack+0x13b>
     85a:	30 f4       	brcc	.+12     	; 0x868 <__stack+0x9>
     85c:	81 33       	cpi	r24, 0x31	; 49
     85e:	69 f0       	breq	.+26     	; 0x87a <__stack+0x1b>
     860:	82 33       	cpi	r24, 0x32	; 50
     862:	09 f4       	brne	.+2      	; 0x866 <__stack+0x7>
     864:	50 c0       	rjmp	.+160    	; 0x906 <__stack+0xa7>
     866:	08 95       	ret
     868:	85 33       	cpi	r24, 0x35	; 53
     86a:	09 f4       	brne	.+2      	; 0x86e <__stack+0xf>
     86c:	2a c1       	rjmp	.+596    	; 0xac2 <__stack+0x263>
     86e:	08 f4       	brcc	.+2      	; 0x872 <__stack+0x13>
     870:	de c0       	rjmp	.+444    	; 0xa2e <__stack+0x1cf>
     872:	86 33       	cpi	r24, 0x36	; 54
     874:	09 f4       	brne	.+2      	; 0x878 <__stack+0x19>
     876:	6f c1       	rjmp	.+734    	; 0xb56 <__stack+0x2f7>
     878:	08 95       	ret
            {
            case ('1'):
			//DIO_voidGetPinValue is used to check if the led is on or off before changing its state

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN3, &led_status);
     87a:	44 e7       	ldi	r20, 0x74	; 116
     87c:	54 e0       	ldi	r21, 0x04	; 4
     87e:	63 e0       	ldi	r22, 0x03	; 3
     880:	83 e0       	ldi	r24, 0x03	; 3
     882:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
     886:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
     88a:	81 30       	cpi	r24, 0x01	; 1
     88c:	e9 f4       	brne	.+58     	; 0x8c8 <__stack+0x69>
                {
                    BL_voidTxString("Light 1 is On");
     88e:	88 ea       	ldi	r24, 0xA8	; 168
     890:	92 e0       	ldi	r25, 0x02	; 2
     892:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     896:	8d e0       	ldi	r24, 0x0D	; 13
     898:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
     89c:	86 eb       	ldi	r24, 0xB6	; 182
     89e:	92 e0       	ldi	r25, 0x02	; 2
     8a0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     8a4:	8d e0       	ldi	r24, 0x0D	; 13
     8a6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     8aa:	82 e8       	ldi	r24, 0x82	; 130
     8ac:	94 e0       	ldi	r25, 0x04	; 4
     8ae:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
     8b2:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     8b6:	81 33       	cpi	r24, 0x31	; 49
     8b8:	09 f0       	breq	.+2      	; 0x8bc <__stack+0x5d>
     8ba:	3f c3       	rjmp	.+1662   	; 0xf3a <__stack+0x6db>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
     8bc:	41 e0       	ldi	r20, 0x01	; 1
     8be:	63 e0       	ldi	r22, 0x03	; 3
     8c0:	83 e0       	ldi	r24, 0x03	; 3
     8c2:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
     8c6:	08 95       	ret
                    }
                    
					break;
                }
                else if (led_status == 0)
     8c8:	81 11       	cpse	r24, r1
     8ca:	37 c3       	rjmp	.+1646   	; 0xf3a <__stack+0x6db>
                {
                    BL_voidTxString("Light 1 is OFF");
     8cc:	87 ec       	ldi	r24, 0xC7	; 199
     8ce:	92 e0       	ldi	r25, 0x02	; 2
     8d0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     8d4:	8d e0       	ldi	r24, 0x0D	; 13
     8d6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
     8da:	86 ed       	ldi	r24, 0xD6	; 214
     8dc:	92 e0       	ldi	r25, 0x02	; 2
     8de:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     8e2:	8d e0       	ldi	r24, 0x0D	; 13
     8e4:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     8e8:	82 e8       	ldi	r24, 0x82	; 130
     8ea:	94 e0       	ldi	r25, 0x04	; 4
     8ec:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
     8f0:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     8f4:	81 33       	cpi	r24, 0x31	; 49
     8f6:	09 f0       	breq	.+2      	; 0x8fa <__stack+0x9b>
     8f8:	20 c3       	rjmp	.+1600   	; 0xf3a <__stack+0x6db>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
     8fa:	41 e0       	ldi	r20, 0x01	; 1
     8fc:	63 e0       	ldi	r22, 0x03	; 3
     8fe:	83 e0       	ldi	r24, 0x03	; 3
     900:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
     904:	08 95       	ret
                }
                break;

            case ('2'):

                DIO_voidGetPinValue(DIO_PORTB, DIO_PIN0, &led_status);
     906:	44 e7       	ldi	r20, 0x74	; 116
     908:	54 e0       	ldi	r21, 0x04	; 4
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
     912:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
     916:	81 30       	cpi	r24, 0x01	; 1
     918:	f9 f4       	brne	.+62     	; 0x958 <__stack+0xf9>
                {
                    BL_voidTxString("Light 2 is On");
     91a:	86 ee       	ldi	r24, 0xE6	; 230
     91c:	92 e0       	ldi	r25, 0x02	; 2
     91e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     922:	8d e0       	ldi	r24, 0x0D	; 13
     924:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
     928:	86 eb       	ldi	r24, 0xB6	; 182
     92a:	92 e0       	ldi	r25, 0x02	; 2
     92c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     930:	8d e0       	ldi	r24, 0x0D	; 13
     932:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     936:	82 e8       	ldi	r24, 0x82	; 130
     938:	94 e0       	ldi	r25, 0x04	; 4
     93a:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
     93e:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     942:	81 33       	cpi	r24, 0x31	; 49
     944:	29 f4       	brne	.+10     	; 0x950 <__stack+0xf1>
                    {
                        LED_voidOff(DIO_PORTB, DIO_PIN0, LED_FORWARD_CONNECTION);
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	60 e0       	ldi	r22, 0x00	; 0
     94a:	81 e0       	ldi	r24, 0x01	; 1
     94c:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     950:	8f ef       	ldi	r24, 0xFF	; 255
     952:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     956:	08 95       	ret
                }
                else if (led_status == 0)
     958:	81 11       	cpse	r24, r1
     95a:	ef c2       	rjmp	.+1502   	; 0xf3a <__stack+0x6db>
                {
                    BL_voidTxString("Light 2 is OFF");
     95c:	84 ef       	ldi	r24, 0xF4	; 244
     95e:	92 e0       	ldi	r25, 0x02	; 2
     960:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     964:	8d e0       	ldi	r24, 0x0D	; 13
     966:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
     96a:	86 ed       	ldi	r24, 0xD6	; 214
     96c:	92 e0       	ldi	r25, 0x02	; 2
     96e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     972:	8d e0       	ldi	r24, 0x0D	; 13
     974:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     978:	82 e8       	ldi	r24, 0x82	; 130
     97a:	94 e0       	ldi	r25, 0x04	; 4
     97c:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
     980:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     984:	81 33       	cpi	r24, 0x31	; 49
     986:	29 f4       	brne	.+10     	; 0x992 <__stack+0x133>
                    {
                        LED_voidOn(DIO_PORTB, DIO_PIN0, LED_FORWARD_CONNECTION);
     988:	41 e0       	ldi	r20, 0x01	; 1
     98a:	60 e0       	ldi	r22, 0x00	; 0
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     992:	8f ef       	ldi	r24, 0xFF	; 255
     994:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     998:	08 95       	ret
                }
                break;

            case ('3'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN2, &led_status);
     99a:	44 e7       	ldi	r20, 0x74	; 116
     99c:	54 e0       	ldi	r21, 0x04	; 4
     99e:	62 e0       	ldi	r22, 0x02	; 2
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
     9a6:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
     9aa:	81 30       	cpi	r24, 0x01	; 1
     9ac:	f9 f4       	brne	.+62     	; 0x9ec <__stack+0x18d>
                {
                    BL_voidTxString("Light 3 is On");
     9ae:	83 e0       	ldi	r24, 0x03	; 3
     9b0:	93 e0       	ldi	r25, 0x03	; 3
     9b2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     9b6:	8d e0       	ldi	r24, 0x0D	; 13
     9b8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
     9bc:	86 eb       	ldi	r24, 0xB6	; 182
     9be:	92 e0       	ldi	r25, 0x02	; 2
     9c0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     9c4:	8d e0       	ldi	r24, 0x0D	; 13
     9c6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     9ca:	82 e8       	ldi	r24, 0x82	; 130
     9cc:	94 e0       	ldi	r25, 0x04	; 4
     9ce:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
     9d2:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     9d6:	81 33       	cpi	r24, 0x31	; 49
     9d8:	29 f4       	brne	.+10     	; 0x9e4 <__stack+0x185>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
     9da:	41 e0       	ldi	r20, 0x01	; 1
     9dc:	62 e0       	ldi	r22, 0x02	; 2
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     9e4:	8f ef       	ldi	r24, 0xFF	; 255
     9e6:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     9ea:	08 95       	ret
                }
                else if (led_status == 0)
     9ec:	81 11       	cpse	r24, r1
     9ee:	a5 c2       	rjmp	.+1354   	; 0xf3a <__stack+0x6db>
                {
                    BL_voidTxString("Light 3 is OFF");
     9f0:	81 e1       	ldi	r24, 0x11	; 17
     9f2:	93 e0       	ldi	r25, 0x03	; 3
     9f4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     9f8:	8d e0       	ldi	r24, 0x0D	; 13
     9fa:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
     9fe:	86 ed       	ldi	r24, 0xD6	; 214
     a00:	92 e0       	ldi	r25, 0x02	; 2
     a02:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     a06:	8d e0       	ldi	r24, 0x0D	; 13
     a08:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     a0c:	82 e8       	ldi	r24, 0x82	; 130
     a0e:	94 e0       	ldi	r25, 0x04	; 4
     a10:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
     a14:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     a18:	81 33       	cpi	r24, 0x31	; 49
     a1a:	29 f4       	brne	.+10     	; 0xa26 <__stack+0x1c7>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
     a1c:	41 e0       	ldi	r20, 0x01	; 1
     a1e:	62 e0       	ldi	r22, 0x02	; 2
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     a26:	8f ef       	ldi	r24, 0xFF	; 255
     a28:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     a2c:	08 95       	ret
                }
                break;

            case ('4'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN3, &led_status);
     a2e:	44 e7       	ldi	r20, 0x74	; 116
     a30:	54 e0       	ldi	r21, 0x04	; 4
     a32:	63 e0       	ldi	r22, 0x03	; 3
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
     a3a:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
     a3e:	81 30       	cpi	r24, 0x01	; 1
     a40:	f9 f4       	brne	.+62     	; 0xa80 <__stack+0x221>
                {
                    BL_voidTxString("Light 4 is On");
     a42:	80 e2       	ldi	r24, 0x20	; 32
     a44:	93 e0       	ldi	r25, 0x03	; 3
     a46:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     a4a:	8d e0       	ldi	r24, 0x0D	; 13
     a4c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
     a50:	86 eb       	ldi	r24, 0xB6	; 182
     a52:	92 e0       	ldi	r25, 0x02	; 2
     a54:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     a58:	8d e0       	ldi	r24, 0x0D	; 13
     a5a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     a5e:	82 e8       	ldi	r24, 0x82	; 130
     a60:	94 e0       	ldi	r25, 0x04	; 4
     a62:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
     a66:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     a6a:	81 33       	cpi	r24, 0x31	; 49
     a6c:	29 f4       	brne	.+10     	; 0xa78 <__stack+0x219>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
     a6e:	41 e0       	ldi	r20, 0x01	; 1
     a70:	63 e0       	ldi	r22, 0x03	; 3
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     a78:	8f ef       	ldi	r24, 0xFF	; 255
     a7a:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     a7e:	08 95       	ret
                }
                else if (led_status == 0)
     a80:	81 11       	cpse	r24, r1
     a82:	5b c2       	rjmp	.+1206   	; 0xf3a <__stack+0x6db>
                {
                    BL_voidTxString("Light 4 is OFF");
     a84:	8e e2       	ldi	r24, 0x2E	; 46
     a86:	93 e0       	ldi	r25, 0x03	; 3
     a88:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     a8c:	8d e0       	ldi	r24, 0x0D	; 13
     a8e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
     a92:	86 ed       	ldi	r24, 0xD6	; 214
     a94:	92 e0       	ldi	r25, 0x02	; 2
     a96:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     a9a:	8d e0       	ldi	r24, 0x0D	; 13
     a9c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     aa0:	82 e8       	ldi	r24, 0x82	; 130
     aa2:	94 e0       	ldi	r25, 0x04	; 4
     aa4:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
     aa8:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     aac:	81 33       	cpi	r24, 0x31	; 49
     aae:	29 f4       	brne	.+10     	; 0xaba <__stack+0x25b>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
     ab0:	41 e0       	ldi	r20, 0x01	; 1
     ab2:	63 e0       	ldi	r22, 0x03	; 3
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     aba:	8f ef       	ldi	r24, 0xFF	; 255
     abc:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     ac0:	08 95       	ret
                }
                break;

            case ('5'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN2, &led_status);
     ac2:	44 e7       	ldi	r20, 0x74	; 116
     ac4:	54 e0       	ldi	r21, 0x04	; 4
     ac6:	62 e0       	ldi	r22, 0x02	; 2
     ac8:	83 e0       	ldi	r24, 0x03	; 3
     aca:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
     ace:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
     ad2:	81 30       	cpi	r24, 0x01	; 1
     ad4:	f9 f4       	brne	.+62     	; 0xb14 <__stack+0x2b5>
                {
                    BL_voidTxString("Light 5 is On");
     ad6:	8d e3       	ldi	r24, 0x3D	; 61
     ad8:	93 e0       	ldi	r25, 0x03	; 3
     ada:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     ade:	8d e0       	ldi	r24, 0x0D	; 13
     ae0:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
     ae4:	86 eb       	ldi	r24, 0xB6	; 182
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     aec:	8d e0       	ldi	r24, 0x0D	; 13
     aee:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     af2:	82 e8       	ldi	r24, 0x82	; 130
     af4:	94 e0       	ldi	r25, 0x04	; 4
     af6:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
     afa:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     afe:	81 33       	cpi	r24, 0x31	; 49
     b00:	29 f4       	brne	.+10     	; 0xb0c <__stack+0x2ad>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
     b02:	41 e0       	ldi	r20, 0x01	; 1
     b04:	62 e0       	ldi	r22, 0x02	; 2
     b06:	83 e0       	ldi	r24, 0x03	; 3
     b08:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     b0c:	8f ef       	ldi	r24, 0xFF	; 255
     b0e:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     b12:	08 95       	ret
                }
                else if (led_status == 0)
     b14:	81 11       	cpse	r24, r1
     b16:	11 c2       	rjmp	.+1058   	; 0xf3a <__stack+0x6db>
                {
                    BL_voidTxString("Light 5 is OFF");
     b18:	8b e4       	ldi	r24, 0x4B	; 75
     b1a:	93 e0       	ldi	r25, 0x03	; 3
     b1c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     b20:	8d e0       	ldi	r24, 0x0D	; 13
     b22:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
     b26:	86 ed       	ldi	r24, 0xD6	; 214
     b28:	92 e0       	ldi	r25, 0x02	; 2
     b2a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     b2e:	8d e0       	ldi	r24, 0x0D	; 13
     b30:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     b34:	82 e8       	ldi	r24, 0x82	; 130
     b36:	94 e0       	ldi	r25, 0x04	; 4
     b38:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
     b3c:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     b40:	81 33       	cpi	r24, 0x31	; 49
     b42:	29 f4       	brne	.+10     	; 0xb4e <__stack+0x2ef>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
     b44:	41 e0       	ldi	r20, 0x01	; 1
     b46:	62 e0       	ldi	r22, 0x02	; 2
     b48:	83 e0       	ldi	r24, 0x03	; 3
     b4a:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
     b54:	08 95       	ret
                
			// if the user choose light 6 (DIMMER LED)

            case ('6'):
				// Dimmer can be controlled using TMR1 PWM mode range from 0 to 100 with -+10% step
                if (dimmer_brightness > 0)
     b56:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     b5a:	88 23       	and	r24, r24
     b5c:	09 f4       	brne	.+2      	; 0xb60 <__stack+0x301>
     b5e:	b1 c0       	rjmp	.+354    	; 0xcc2 <__stack+0x463>
                {
					 BL_voidTxChar('\r');
     b60:	8d e0       	ldi	r24, 0x0D	; 13
     b62:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("Light 6 is On");
     b66:	8a e5       	ldi	r24, 0x5A	; 90
     b68:	93 e0       	ldi	r25, 0x03	; 3
     b6a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     b6e:	8d e0       	ldi	r24, 0x0D	; 13
     b70:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
     b74:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     b78:	1f 92       	push	r1
     b7a:	8f 93       	push	r24
     b7c:	88 e6       	ldi	r24, 0x68	; 104
     b7e:	93 e0       	ldi	r25, 0x03	; 3
     b80:	9f 93       	push	r25
     b82:	8f 93       	push	r24
     b84:	83 e8       	ldi	r24, 0x83	; 131
     b86:	94 e0       	ldi	r25, 0x04	; 4
     b88:	9f 93       	push	r25
     b8a:	8f 93       	push	r24
     b8c:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
					BL_voidTxString(DimmerString);
     b90:	83 e8       	ldi	r24, 0x83	; 131
     b92:	94 e0       	ldi	r25, 0x04	; 4
     b94:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     b98:	8d e0       	ldi	r24, 0x0D	; 13
     b9a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1)+10 2)-10 0)H");
     b9e:	88 e7       	ldi	r24, 0x78	; 120
     ba0:	93 e0       	ldi	r25, 0x03	; 3
     ba2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     ba6:	8d e0       	ldi	r24, 0x0D	; 13
     ba8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     bac:	82 e8       	ldi	r24, 0x82	; 130
     bae:	94 e0       	ldi	r25, 0x04	; 4
     bb0:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
					while (bluetooh_value != 0)
     bb4:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     bb8:	0f 90       	pop	r0
     bba:	0f 90       	pop	r0
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
     bc4:	88 23       	and	r24, r24
     bc6:	09 f4       	brne	.+2      	; 0xbca <__stack+0x36b>
     bc8:	b8 c1       	rjmp	.+880    	; 0xf3a <__stack+0x6db>
					{
						if (bluetooh_value == '1')
     bca:	81 33       	cpi	r24, 0x31	; 49
     bcc:	09 f0       	breq	.+2      	; 0xbd0 <__stack+0x371>
     bce:	43 c0       	rjmp	.+134    	; 0xc56 <__stack+0x3f7>
						{
							dimmer_brightness += 10;
     bd0:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
     bd4:	66 5f       	subi	r22, 0xF6	; 246
     bd6:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
     be4:	ab 01       	movw	r20, r22
     be6:	bc 01       	movw	r22, r24
     be8:	88 ee       	ldi	r24, 0xE8	; 232
     bea:	93 e0       	ldi	r25, 0x03	; 3
     bec:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
     bf0:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     bf4:	1f 92       	push	r1
     bf6:	8f 93       	push	r24
     bf8:	88 e6       	ldi	r24, 0x68	; 104
     bfa:	93 e0       	ldi	r25, 0x03	; 3
     bfc:	9f 93       	push	r25
     bfe:	8f 93       	push	r24
     c00:	83 e8       	ldi	r24, 0x83	; 131
     c02:	94 e0       	ldi	r25, 0x04	; 4
     c04:	9f 93       	push	r25
     c06:	8f 93       	push	r24
     c08:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
     c0c:	83 e8       	ldi	r24, 0x83	; 131
     c0e:	94 e0       	ldi	r25, 0x04	; 4
     c10:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
     c14:	8d e0       	ldi	r24, 0x0D	; 13
     c16:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
     c1a:	88 e7       	ldi	r24, 0x78	; 120
     c1c:	93 e0       	ldi	r25, 0x03	; 3
     c1e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
     c22:	8d e0       	ldi	r24, 0x0D	; 13
     c24:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							// check if is the brightness is more than 100
							if (dimmer_brightness > 100)
     c28:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     c2c:	0f 90       	pop	r0
     c2e:	0f 90       	pop	r0
     c30:	0f 90       	pop	r0
     c32:	0f 90       	pop	r0
     c34:	0f 90       	pop	r0
     c36:	0f 90       	pop	r0
     c38:	85 36       	cpi	r24, 0x65	; 101
     c3a:	08 f4       	brcc	.+2      	; 0xc3e <__stack+0x3df>
     c3c:	7e c1       	rjmp	.+764    	; 0xf3a <__stack+0x6db>
							{
								//block increasing the brightness above 100
								dimmer_brightness = 100;
     c3e:	84 e6       	ldi	r24, 0x64	; 100
     c40:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	50 e0       	ldi	r21, 0x00	; 0
     c48:	68 ec       	ldi	r22, 0xC8	; 200
     c4a:	72 e4       	ldi	r23, 0x42	; 66
     c4c:	88 ee       	ldi	r24, 0xE8	; 232
     c4e:	93 e0       	ldi	r25, 0x03	; 3
     c50:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
     c54:	08 95       	ret
							}
							break;													
						}
						else if (bluetooh_value == '2')
     c56:	82 33       	cpi	r24, 0x32	; 50
     c58:	09 f0       	breq	.+2      	; 0xc5c <__stack+0x3fd>
     c5a:	6f c1       	rjmp	.+734    	; 0xf3a <__stack+0x6db>
						{
							dimmer_brightness -= 10;
     c5c:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
     c60:	6a 50       	subi	r22, 0x0A	; 10
     c62:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	80 e0       	ldi	r24, 0x00	; 0
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
     c70:	ab 01       	movw	r20, r22
     c72:	bc 01       	movw	r22, r24
     c74:	88 ee       	ldi	r24, 0xE8	; 232
     c76:	93 e0       	ldi	r25, 0x03	; 3
     c78:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
     c7c:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     c80:	1f 92       	push	r1
     c82:	8f 93       	push	r24
     c84:	88 e6       	ldi	r24, 0x68	; 104
     c86:	93 e0       	ldi	r25, 0x03	; 3
     c88:	9f 93       	push	r25
     c8a:	8f 93       	push	r24
     c8c:	83 e8       	ldi	r24, 0x83	; 131
     c8e:	94 e0       	ldi	r25, 0x04	; 4
     c90:	9f 93       	push	r25
     c92:	8f 93       	push	r24
     c94:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
     c98:	83 e8       	ldi	r24, 0x83	; 131
     c9a:	94 e0       	ldi	r25, 0x04	; 4
     c9c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
     ca0:	8d e0       	ldi	r24, 0x0D	; 13
     ca2:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
     ca6:	88 e7       	ldi	r24, 0x78	; 120
     ca8:	93 e0       	ldi	r25, 0x03	; 3
     caa:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
     cae:	8d e0       	ldi	r24, 0x0D	; 13
     cb0:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							{
								//block decreasing the brightness below 0
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
							break;
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
     cb8:	0f 90       	pop	r0
     cba:	0f 90       	pop	r0
     cbc:	0f 90       	pop	r0
     cbe:	0f 90       	pop	r0
     cc0:	08 95       	ret
						break;					
	
					}
					
                }
                else if (dimmer_brightness == 0)
     cc2:	81 11       	cpse	r24, r1
     cc4:	3a c1       	rjmp	.+628    	; 0xf3a <__stack+0x6db>
                {
                    BL_voidTxString("Light 6 is OFF");
     cc6:	88 e8       	ldi	r24, 0x88	; 136
     cc8:	93 e0       	ldi	r25, 0x03	; 3
     cca:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cce:	2f ef       	ldi	r18, 0xFF	; 255
     cd0:	83 ed       	ldi	r24, 0xD3	; 211
     cd2:	90 e3       	ldi	r25, 0x30	; 48
     cd4:	21 50       	subi	r18, 0x01	; 1
     cd6:	80 40       	sbci	r24, 0x00	; 0
     cd8:	90 40       	sbci	r25, 0x00	; 0
     cda:	e1 f7       	brne	.-8      	; 0xcd4 <__stack+0x475>
     cdc:	00 c0       	rjmp	.+0      	; 0xcde <__stack+0x47f>
     cde:	00 00       	nop
					_delay_ms(1000);
					BL_voidTxChar('\r');
     ce0:	8d e0       	ldi	r24, 0x0D	; 13
     ce2:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
     ce6:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     cea:	1f 92       	push	r1
     cec:	8f 93       	push	r24
     cee:	88 e6       	ldi	r24, 0x68	; 104
     cf0:	93 e0       	ldi	r25, 0x03	; 3
     cf2:	9f 93       	push	r25
     cf4:	8f 93       	push	r24
     cf6:	83 e8       	ldi	r24, 0x83	; 131
     cf8:	94 e0       	ldi	r25, 0x04	; 4
     cfa:	9f 93       	push	r25
     cfc:	8f 93       	push	r24
     cfe:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
					BL_voidTxString(DimmerString);
     d02:	83 e8       	ldi	r24, 0x83	; 131
     d04:	94 e0       	ldi	r25, 0x04	; 4
     d06:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
     d0a:	8d e0       	ldi	r24, 0x0D	; 13
     d0c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1)+10 2)-10 0)H");
     d10:	88 e7       	ldi	r24, 0x78	; 120
     d12:	93 e0       	ldi	r25, 0x03	; 3
     d14:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     d18:	8d e0       	ldi	r24, 0x0D	; 13
     d1a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     d1e:	82 e8       	ldi	r24, 0x82	; 130
     d20:	94 e0       	ldi	r25, 0x04	; 4
     d22:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
					while (bluetooh_value != 0)
     d26:	0f 90       	pop	r0
     d28:	0f 90       	pop	r0
     d2a:	0f 90       	pop	r0
     d2c:	0f 90       	pop	r0
     d2e:	0f 90       	pop	r0
     d30:	0f 90       	pop	r0
     d32:	7e c0       	rjmp	.+252    	; 0xe30 <__stack+0x5d1>
					{
						if (bluetooh_value == '1')
     d34:	81 33       	cpi	r24, 0x31	; 49
     d36:	09 f0       	breq	.+2      	; 0xd3a <__stack+0x4db>
     d38:	43 c0       	rjmp	.+134    	; 0xdc0 <__stack+0x561>
						{
							dimmer_brightness += 10;
     d3a:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
     d3e:	66 5f       	subi	r22, 0xF6	; 246
     d40:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
     d44:	70 e0       	ldi	r23, 0x00	; 0
     d46:	80 e0       	ldi	r24, 0x00	; 0
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
     d4e:	ab 01       	movw	r20, r22
     d50:	bc 01       	movw	r22, r24
     d52:	88 ee       	ldi	r24, 0xE8	; 232
     d54:	93 e0       	ldi	r25, 0x03	; 3
     d56:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
     d5a:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     d5e:	1f 92       	push	r1
     d60:	8f 93       	push	r24
     d62:	88 e6       	ldi	r24, 0x68	; 104
     d64:	93 e0       	ldi	r25, 0x03	; 3
     d66:	9f 93       	push	r25
     d68:	8f 93       	push	r24
     d6a:	83 e8       	ldi	r24, 0x83	; 131
     d6c:	94 e0       	ldi	r25, 0x04	; 4
     d6e:	9f 93       	push	r25
     d70:	8f 93       	push	r24
     d72:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
     d76:	83 e8       	ldi	r24, 0x83	; 131
     d78:	94 e0       	ldi	r25, 0x04	; 4
     d7a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
     d7e:	8d e0       	ldi	r24, 0x0D	; 13
     d80:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
     d84:	88 e7       	ldi	r24, 0x78	; 120
     d86:	93 e0       	ldi	r25, 0x03	; 3
     d88:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
     d8c:	8d e0       	ldi	r24, 0x0D	; 13
     d8e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							if (dimmer_brightness > 100)
     d92:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     d96:	0f 90       	pop	r0
     d98:	0f 90       	pop	r0
     d9a:	0f 90       	pop	r0
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	85 36       	cpi	r24, 0x65	; 101
     da4:	08 f4       	brcc	.+2      	; 0xda8 <__stack+0x549>
     da6:	c9 c0       	rjmp	.+402    	; 0xf3a <__stack+0x6db>
							{
								dimmer_brightness = 100;
     da8:	84 e6       	ldi	r24, 0x64	; 100
     daa:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
     dae:	40 e0       	ldi	r20, 0x00	; 0
     db0:	50 e0       	ldi	r21, 0x00	; 0
     db2:	68 ec       	ldi	r22, 0xC8	; 200
     db4:	72 e4       	ldi	r23, 0x42	; 66
     db6:	88 ee       	ldi	r24, 0xE8	; 232
     db8:	93 e0       	ldi	r25, 0x03	; 3
     dba:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
     dbe:	08 95       	ret
							}
							break;
						
							
						}
						else if (bluetooh_value == '2')
     dc0:	82 33       	cpi	r24, 0x32	; 50
     dc2:	99 f5       	brne	.+102    	; 0xe2a <__stack+0x5cb>
						{
							dimmer_brightness -= 10;
     dc4:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
     dc8:	6a 50       	subi	r22, 0x0A	; 10
     dca:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	80 e0       	ldi	r24, 0x00	; 0
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
     dd8:	ab 01       	movw	r20, r22
     dda:	bc 01       	movw	r22, r24
     ddc:	88 ee       	ldi	r24, 0xE8	; 232
     dde:	93 e0       	ldi	r25, 0x03	; 3
     de0:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
     de4:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
     de8:	1f 92       	push	r1
     dea:	8f 93       	push	r24
     dec:	88 e6       	ldi	r24, 0x68	; 104
     dee:	93 e0       	ldi	r25, 0x03	; 3
     df0:	9f 93       	push	r25
     df2:	8f 93       	push	r24
     df4:	83 e8       	ldi	r24, 0x83	; 131
     df6:	94 e0       	ldi	r25, 0x04	; 4
     df8:	9f 93       	push	r25
     dfa:	8f 93       	push	r24
     dfc:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
     e00:	83 e8       	ldi	r24, 0x83	; 131
     e02:	94 e0       	ldi	r25, 0x04	; 4
     e04:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
     e08:	8d e0       	ldi	r24, 0x0D	; 13
     e0a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
     e0e:	88 e7       	ldi	r24, 0x78	; 120
     e10:	93 e0       	ldi	r25, 0x03	; 3
     e12:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
     e16:	8d e0       	ldi	r24, 0x0D	; 13
     e18:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							if (dimmer_brightness < 0)
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
							break;
     e1c:	0f 90       	pop	r0
     e1e:	0f 90       	pop	r0
     e20:	0f 90       	pop	r0
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	0f 90       	pop	r0
     e28:	08 95       	ret
						}
						else if (bluetooh_value == '0')
     e2a:	80 33       	cpi	r24, 0x30	; 48
     e2c:	09 f4       	brne	.+2      	; 0xe30 <__stack+0x5d1>
     e2e:	85 c0       	rjmp	.+266    	; 0xf3a <__stack+0x6db>
					BL_voidTxString(DimmerString);
                    BL_voidTxChar('\r');
                    BL_voidTxString("1)+10 2)-10 0)H");
					BL_voidTxChar('\r');
					BL_voidRxChar(&bluetooh_value);
					while (bluetooh_value != 0)
     e30:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     e34:	81 11       	cpse	r24, r1
     e36:	7e cf       	rjmp	.-260    	; 0xd34 <__stack+0x4d5>
     e38:	08 95       	ret
			break;

			case ('3'):
			
				// checking the temperature from the ADC before displaying it
				ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp); 
     e3a:	62 e7       	ldi	r22, 0x72	; 114
     e3c:	74 e0       	ldi	r23, 0x04	; 4
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
				sprintf(tempString, "Room Temp: %d c", local_temp);
     e44:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <__data_end>
     e48:	1f 92       	push	r1
     e4a:	8f 93       	push	r24
     e4c:	8e e6       	ldi	r24, 0x6E	; 110
     e4e:	92 e0       	ldi	r25, 0x02	; 2
     e50:	9f 93       	push	r25
     e52:	8f 93       	push	r24
     e54:	87 e9       	ldi	r24, 0x97	; 151
     e56:	94 e0       	ldi	r25, 0x04	; 4
     e58:	9f 93       	push	r25
     e5a:	8f 93       	push	r24
     e5c:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
				BL_voidTxString(tempString);
     e60:	87 e9       	ldi	r24, 0x97	; 151
     e62:	94 e0       	ldi	r25, 0x04	; 4
     e64:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
     e68:	8d e0       	ldi	r24, 0x0D	; 13
     e6a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				BL_voidTxString("0-go to home");
     e6e:	8e e7       	ldi	r24, 0x7E	; 126
     e70:	92 e0       	ldi	r25, 0x02	; 2
     e72:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
     e76:	8d e0       	ldi	r24, 0x0D	; 13
     e78:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				BL_voidRxChar(&bluetooh_value);	
     e7c:	82 e8       	ldi	r24, 0x82	; 130
     e7e:	94 e0       	ldi	r25, 0x04	; 4
     e80:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
				if (bluetooh_value=='0')
				{
					
				}
				break;
     e84:	0f 90       	pop	r0
     e86:	0f 90       	pop	r0
     e88:	0f 90       	pop	r0
     e8a:	0f 90       	pop	r0
     e8c:	0f 90       	pop	r0
     e8e:	0f 90       	pop	r0
     e90:	08 95       	ret

			case ('4'):
				// checking the door status before displaying it
				if (door_angle==0)
     e92:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <door_angle>
     e96:	81 11       	cpse	r24, r1
     e98:	27 c0       	rjmp	.+78     	; 0xee8 <__stack+0x689>
				{
					BL_voidTxString("Door is closed");
     e9a:	87 e9       	ldi	r24, 0x97	; 151
     e9c:	93 e0       	ldi	r25, 0x03	; 3
     e9e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     ea2:	8d e0       	ldi	r24, 0x0D	; 13
     ea4:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidTxString("1-Open Door 0-Home");
     ea8:	86 ea       	ldi	r24, 0xA6	; 166
     eaa:	93 e0       	ldi	r25, 0x03	; 3
     eac:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     eb0:	8d e0       	ldi	r24, 0x0D	; 13
     eb2:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     eb6:	82 e8       	ldi	r24, 0x82	; 130
     eb8:	94 e0       	ldi	r25, 0x04	; 4
     eba:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
					BL_voidTxChar('\r');
     ebe:	8d e0       	ldi	r24, 0x0D	; 13
     ec0:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					if (bluetooh_value=='1')
     ec4:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     ec8:	81 33       	cpi	r24, 0x31	; 49
     eca:	b9 f5       	brne	.+110    	; 0xf3a <__stack+0x6db>
					{
						BL_voidTxString("Door is opening");
     ecc:	89 eb       	ldi	r24, 0xB9	; 185
     ece:	93 e0       	ldi	r25, 0x03	; 3
     ed0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
						SERVO_voidStartByAngle(90);
     ed4:	60 e0       	ldi	r22, 0x00	; 0
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	84 eb       	ldi	r24, 0xB4	; 180
     eda:	92 e4       	ldi	r25, 0x42	; 66
     edc:	0e 94 db 12 	call	0x25b6	; 0x25b6 <SERVO_voidStartByAngle>
						door_angle=90;
     ee0:	8a e5       	ldi	r24, 0x5A	; 90
     ee2:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <door_angle>
     ee6:	08 95       	ret
						break;
					}
					break;

				}
				else if (door_angle==90)
     ee8:	8a 35       	cpi	r24, 0x5A	; 90
     eea:	39 f5       	brne	.+78     	; 0xf3a <__stack+0x6db>
				{
					BL_voidTxString("Door is open");
     eec:	89 ec       	ldi	r24, 0xC9	; 201
     eee:	93 e0       	ldi	r25, 0x03	; 3
     ef0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     ef4:	8d e0       	ldi	r24, 0x0D	; 13
     ef6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidTxString("1-Close Door 0-Home");
     efa:	86 ed       	ldi	r24, 0xD6	; 214
     efc:	93 e0       	ldi	r25, 0x03	; 3
     efe:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
     f02:	8d e0       	ldi	r24, 0x0D	; 13
     f04:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
     f08:	82 e8       	ldi	r24, 0x82	; 130
     f0a:	94 e0       	ldi	r25, 0x04	; 4
     f0c:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
					BL_voidTxChar('\r');
     f10:	8d e0       	ldi	r24, 0x0D	; 13
     f12:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					if (bluetooh_value=='1')
     f16:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     f1a:	81 33       	cpi	r24, 0x31	; 49
     f1c:	71 f4       	brne	.+28     	; 0xf3a <__stack+0x6db>
					{
						BL_voidTxString("Door is closing");
     f1e:	8a ee       	ldi	r24, 0xEA	; 234
     f20:	93 e0       	ldi	r25, 0x03	; 3
     f22:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
						SERVO_voidStartByAngle(0);
     f26:	60 e0       	ldi	r22, 0x00	; 0
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	cb 01       	movw	r24, r22
     f2c:	0e 94 db 12 	call	0x25b6	; 0x25b6 <SERVO_voidStartByAngle>
						door_angle=0;
     f30:	10 92 75 04 	sts	0x0475, r1	; 0x800475 <door_angle>
     f34:	08 95       	ret
			break;


			case ('5'):
			// this case is only for admin to change the username and password (Admin is only remote typeuser)
			HOME_voidChangeUserNameAndPass();
     f36:	0e 94 ae 02 	call	0x55c	; 0x55c <HOME_voidChangeUserNameAndPass>
     f3a:	08 95       	ret

00000f3c <KPD_Interface_RemoteUser>:


void KPD_Interface_RemoteUser(void)
{
	//this is the remote user interface to control the smart home (same as the admin but with less options without(door control,changing username and password))
	TMR0_SetCallBackCTC(&Idle_RemoteAction);
     f3c:	8e e6       	ldi	r24, 0x6E	; 110
     f3e:	9b e0       	ldi	r25, 0x0B	; 11
     f40:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <TMR0_SetCallBackCTC>
	BL_voidTxChar('\r');
     f44:	8d e0       	ldi	r24, 0x0D	; 13
     f46:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	BL_voidTxString("1-AC 2-light");
     f4a:	86 e2       	ldi	r24, 0x26	; 38
     f4c:	92 e0       	ldi	r25, 0x02	; 2
     f4e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
     f52:	8d e0       	ldi	r24, 0x0D	; 13
     f54:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	BL_voidTxString("3-temp 4-Door");
     f58:	83 e3       	ldi	r24, 0x33	; 51
     f5a:	92 e0       	ldi	r25, 0x02	; 2
     f5c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
     f60:	8d e0       	ldi	r24, 0x0D	; 13
     f62:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	TMR0_voidStart();
     f66:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
	BL_voidRxChar(&bluetooh_value);
     f6a:	82 e8       	ldi	r24, 0x82	; 130
     f6c:	94 e0       	ldi	r25, 0x04	; 4
     f6e:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
	TMR0_voidStop();
     f72:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
	switch (bluetooh_value)
     f76:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
     f7a:	82 33       	cpi	r24, 0x32	; 50
     f7c:	e9 f1       	breq	.+122    	; 0xff8 <KPD_Interface_RemoteUser+0xbc>
     f7e:	83 33       	cpi	r24, 0x33	; 51
     f80:	09 f4       	brne	.+2      	; 0xf84 <KPD_Interface_RemoteUser+0x48>
     f82:	4a c3       	rjmp	.+1684   	; 0x1618 <KPD_Interface_RemoteUser+0x6dc>
     f84:	81 33       	cpi	r24, 0x31	; 49
     f86:	09 f0       	breq	.+2      	; 0xf8a <KPD_Interface_RemoteUser+0x4e>
     f88:	72 c3       	rjmp	.+1764   	; 0x166e <KPD_Interface_RemoteUser+0x732>
	{
	case ('1'):
		BL_voidTxString("AC Is On/off");
     f8a:	81 e6       	ldi	r24, 0x61	; 97
     f8c:	92 e0       	ldi	r25, 0x02	; 2
     f8e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
        BL_voidTxChar('\r');
     f92:	8d e0       	ldi	r24, 0x0D	; 13
     f94:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
        ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp); 
     f98:	62 e7       	ldi	r22, 0x72	; 114
     f9a:	74 e0       	ldi	r23, 0x04	; 4
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
				sprintf(tempString, "Room Temp: %d c", local_temp);
     fa2:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <__data_end>
     fa6:	1f 92       	push	r1
     fa8:	8f 93       	push	r24
     faa:	8e e6       	ldi	r24, 0x6E	; 110
     fac:	92 e0       	ldi	r25, 0x02	; 2
     fae:	9f 93       	push	r25
     fb0:	8f 93       	push	r24
     fb2:	87 e9       	ldi	r24, 0x97	; 151
     fb4:	94 e0       	ldi	r25, 0x04	; 4
     fb6:	9f 93       	push	r25
     fb8:	8f 93       	push	r24
     fba:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
				BL_voidTxString(tempString);
     fbe:	87 e9       	ldi	r24, 0x97	; 151
     fc0:	94 e0       	ldi	r25, 0x04	; 4
     fc2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
     fc6:	8d e0       	ldi	r24, 0x0D	; 13
     fc8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				BL_voidTxString("0-go to home");
     fcc:	8e e7       	ldi	r24, 0x7E	; 126
     fce:	92 e0       	ldi	r25, 0x02	; 2
     fd0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
     fd4:	8d e0       	ldi	r24, 0x0D	; 13
     fd6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				TMR0_voidStart();
     fda:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
				BL_voidRxChar(&bluetooh_value);
     fde:	82 e8       	ldi	r24, 0x82	; 130
     fe0:	94 e0       	ldi	r25, 0x04	; 4
     fe2:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
				TMR0_voidStop();
     fe6:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
				if (bluetooh_value=='0')
				{
					
				}
		break;
     fea:	0f 90       	pop	r0
     fec:	0f 90       	pop	r0
     fee:	0f 90       	pop	r0
     ff0:	0f 90       	pop	r0
     ff2:	0f 90       	pop	r0
     ff4:	0f 90       	pop	r0
     ff6:	08 95       	ret
	
	case ('2'):

       
	   		BL_voidTxChar('\r');     
     ff8:	8d e0       	ldi	r24, 0x0D	; 13
     ffa:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
            BL_voidTxString("Choose light to");
     ffe:	8b e8       	ldi	r24, 0x8B	; 139
    1000:	92 e0       	ldi	r25, 0x02	; 2
    1002:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
            BL_voidTxChar('\r');
    1006:	8d e0       	ldi	r24, 0x0D	; 13
    1008:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
            BL_voidTxString("control(1-6)");
    100c:	8b e9       	ldi	r24, 0x9B	; 155
    100e:	92 e0       	ldi	r25, 0x02	; 2
    1010:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
			BL_voidTxChar('\r');
    1014:	8d e0       	ldi	r24, 0x0D	; 13
    1016:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
			BL_voidTxChar('\r');
    101a:	8d e0       	ldi	r24, 0x0D	; 13
    101c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
            TMR0_voidStart();
    1020:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
			BL_voidRxChar(&bluetooh_value);
    1024:	82 e8       	ldi	r24, 0x82	; 130
    1026:	94 e0       	ldi	r25, 0x04	; 4
    1028:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
            TMR0_voidStop();
    102c:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
            switch (bluetooh_value)
    1030:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1034:	83 33       	cpi	r24, 0x33	; 51
    1036:	09 f4       	brne	.+2      	; 0x103a <KPD_Interface_RemoteUser+0xfe>
    1038:	a0 c0       	rjmp	.+320    	; 0x117a <KPD_Interface_RemoteUser+0x23e>
    103a:	30 f4       	brcc	.+12     	; 0x1048 <KPD_Interface_RemoteUser+0x10c>
    103c:	81 33       	cpi	r24, 0x31	; 49
    103e:	69 f0       	breq	.+26     	; 0x105a <KPD_Interface_RemoteUser+0x11e>
    1040:	82 33       	cpi	r24, 0x32	; 50
    1042:	09 f4       	brne	.+2      	; 0x1046 <KPD_Interface_RemoteUser+0x10a>
    1044:	50 c0       	rjmp	.+160    	; 0x10e6 <KPD_Interface_RemoteUser+0x1aa>
    1046:	08 95       	ret
    1048:	85 33       	cpi	r24, 0x35	; 53
    104a:	09 f4       	brne	.+2      	; 0x104e <KPD_Interface_RemoteUser+0x112>
    104c:	2a c1       	rjmp	.+596    	; 0x12a2 <KPD_Interface_RemoteUser+0x366>
    104e:	08 f4       	brcc	.+2      	; 0x1052 <KPD_Interface_RemoteUser+0x116>
    1050:	de c0       	rjmp	.+444    	; 0x120e <KPD_Interface_RemoteUser+0x2d2>
    1052:	86 33       	cpi	r24, 0x36	; 54
    1054:	09 f4       	brne	.+2      	; 0x1058 <KPD_Interface_RemoteUser+0x11c>
    1056:	6f c1       	rjmp	.+734    	; 0x1336 <KPD_Interface_RemoteUser+0x3fa>
    1058:	08 95       	ret
            {
            case ('1'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN3, &led_status);
    105a:	44 e7       	ldi	r20, 0x74	; 116
    105c:	54 e0       	ldi	r21, 0x04	; 4
    105e:	63 e0       	ldi	r22, 0x03	; 3
    1060:	83 e0       	ldi	r24, 0x03	; 3
    1062:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
    1066:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    106a:	81 30       	cpi	r24, 0x01	; 1
    106c:	e9 f4       	brne	.+58     	; 0x10a8 <KPD_Interface_RemoteUser+0x16c>
                {
                    BL_voidTxString("Light 1 is On");
    106e:	88 ea       	ldi	r24, 0xA8	; 168
    1070:	92 e0       	ldi	r25, 0x02	; 2
    1072:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    1076:	8d e0       	ldi	r24, 0x0D	; 13
    1078:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
    107c:	86 eb       	ldi	r24, 0xB6	; 182
    107e:	92 e0       	ldi	r25, 0x02	; 2
    1080:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    1084:	8d e0       	ldi	r24, 0x0D	; 13
    1086:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    108a:	82 e8       	ldi	r24, 0x82	; 130
    108c:	94 e0       	ldi	r25, 0x04	; 4
    108e:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
    1092:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1096:	81 33       	cpi	r24, 0x31	; 49
    1098:	09 f0       	breq	.+2      	; 0x109c <KPD_Interface_RemoteUser+0x160>
    109a:	e9 c2       	rjmp	.+1490   	; 0x166e <KPD_Interface_RemoteUser+0x732>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
    109c:	41 e0       	ldi	r20, 0x01	; 1
    109e:	63 e0       	ldi	r22, 0x03	; 3
    10a0:	83 e0       	ldi	r24, 0x03	; 3
    10a2:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
    10a6:	08 95       	ret
                    }
                    
					break;
                }
                else if (led_status == 0)
    10a8:	81 11       	cpse	r24, r1
    10aa:	e1 c2       	rjmp	.+1474   	; 0x166e <KPD_Interface_RemoteUser+0x732>
                {
                    BL_voidTxString("Light 1 is OFF");
    10ac:	87 ec       	ldi	r24, 0xC7	; 199
    10ae:	92 e0       	ldi	r25, 0x02	; 2
    10b0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    10b4:	8d e0       	ldi	r24, 0x0D	; 13
    10b6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
    10ba:	86 ed       	ldi	r24, 0xD6	; 214
    10bc:	92 e0       	ldi	r25, 0x02	; 2
    10be:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    10c2:	8d e0       	ldi	r24, 0x0D	; 13
    10c4:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    10c8:	82 e8       	ldi	r24, 0x82	; 130
    10ca:	94 e0       	ldi	r25, 0x04	; 4
    10cc:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
    10d0:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    10d4:	81 33       	cpi	r24, 0x31	; 49
    10d6:	09 f0       	breq	.+2      	; 0x10da <KPD_Interface_RemoteUser+0x19e>
    10d8:	ca c2       	rjmp	.+1428   	; 0x166e <KPD_Interface_RemoteUser+0x732>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
    10da:	41 e0       	ldi	r20, 0x01	; 1
    10dc:	63 e0       	ldi	r22, 0x03	; 3
    10de:	83 e0       	ldi	r24, 0x03	; 3
    10e0:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
    10e4:	08 95       	ret
                }
                break;

            case ('2'):

                DIO_voidGetPinValue(DIO_PORTB, DIO_PIN0, &led_status);
    10e6:	44 e7       	ldi	r20, 0x74	; 116
    10e8:	54 e0       	ldi	r21, 0x04	; 4
    10ea:	60 e0       	ldi	r22, 0x00	; 0
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
    10f2:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    10f6:	81 30       	cpi	r24, 0x01	; 1
    10f8:	f9 f4       	brne	.+62     	; 0x1138 <KPD_Interface_RemoteUser+0x1fc>
                {
                    BL_voidTxString("Light 2 is On");
    10fa:	86 ee       	ldi	r24, 0xE6	; 230
    10fc:	92 e0       	ldi	r25, 0x02	; 2
    10fe:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    1102:	8d e0       	ldi	r24, 0x0D	; 13
    1104:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
    1108:	86 eb       	ldi	r24, 0xB6	; 182
    110a:	92 e0       	ldi	r25, 0x02	; 2
    110c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    1110:	8d e0       	ldi	r24, 0x0D	; 13
    1112:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    1116:	82 e8       	ldi	r24, 0x82	; 130
    1118:	94 e0       	ldi	r25, 0x04	; 4
    111a:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
    111e:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1122:	81 33       	cpi	r24, 0x31	; 49
    1124:	29 f4       	brne	.+10     	; 0x1130 <KPD_Interface_RemoteUser+0x1f4>
                    {
                        LED_voidOff(DIO_PORTB, DIO_PIN0, LED_FORWARD_CONNECTION);
    1126:	41 e0       	ldi	r20, 0x01	; 1
    1128:	60 e0       	ldi	r22, 0x00	; 0
    112a:	81 e0       	ldi	r24, 0x01	; 1
    112c:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    1130:	8f ef       	ldi	r24, 0xFF	; 255
    1132:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    1136:	08 95       	ret
                }
                else if (led_status == 0)
    1138:	81 11       	cpse	r24, r1
    113a:	99 c2       	rjmp	.+1330   	; 0x166e <KPD_Interface_RemoteUser+0x732>
                {
                    BL_voidTxString("Light 2 is OFF");
    113c:	84 ef       	ldi	r24, 0xF4	; 244
    113e:	92 e0       	ldi	r25, 0x02	; 2
    1140:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    1144:	8d e0       	ldi	r24, 0x0D	; 13
    1146:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
    114a:	86 ed       	ldi	r24, 0xD6	; 214
    114c:	92 e0       	ldi	r25, 0x02	; 2
    114e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    1152:	8d e0       	ldi	r24, 0x0D	; 13
    1154:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    1158:	82 e8       	ldi	r24, 0x82	; 130
    115a:	94 e0       	ldi	r25, 0x04	; 4
    115c:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
                    if (bluetooh_value == '1')
    1160:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1164:	81 33       	cpi	r24, 0x31	; 49
    1166:	29 f4       	brne	.+10     	; 0x1172 <KPD_Interface_RemoteUser+0x236>
                    {
                        LED_voidOn(DIO_PORTB, DIO_PIN0, LED_FORWARD_CONNECTION);
    1168:	41 e0       	ldi	r20, 0x01	; 1
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    1172:	8f ef       	ldi	r24, 0xFF	; 255
    1174:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    1178:	08 95       	ret
                }
                break;

            case ('3'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN2, &led_status);
    117a:	44 e7       	ldi	r20, 0x74	; 116
    117c:	54 e0       	ldi	r21, 0x04	; 4
    117e:	62 e0       	ldi	r22, 0x02	; 2
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
    1186:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    118a:	81 30       	cpi	r24, 0x01	; 1
    118c:	f9 f4       	brne	.+62     	; 0x11cc <KPD_Interface_RemoteUser+0x290>
                {
                    BL_voidTxString("Light 3 is On");
    118e:	83 e0       	ldi	r24, 0x03	; 3
    1190:	93 e0       	ldi	r25, 0x03	; 3
    1192:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    1196:	8d e0       	ldi	r24, 0x0D	; 13
    1198:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
    119c:	86 eb       	ldi	r24, 0xB6	; 182
    119e:	92 e0       	ldi	r25, 0x02	; 2
    11a0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    11a4:	8d e0       	ldi	r24, 0x0D	; 13
    11a6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    11aa:	82 e8       	ldi	r24, 0x82	; 130
    11ac:	94 e0       	ldi	r25, 0x04	; 4
    11ae:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
    11b2:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    11b6:	81 33       	cpi	r24, 0x31	; 49
    11b8:	29 f4       	brne	.+10     	; 0x11c4 <KPD_Interface_RemoteUser+0x288>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
    11ba:	41 e0       	ldi	r20, 0x01	; 1
    11bc:	62 e0       	ldi	r22, 0x02	; 2
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    11c4:	8f ef       	ldi	r24, 0xFF	; 255
    11c6:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    11ca:	08 95       	ret
                }
                else if (led_status == 0)
    11cc:	81 11       	cpse	r24, r1
    11ce:	4f c2       	rjmp	.+1182   	; 0x166e <KPD_Interface_RemoteUser+0x732>
                {
                    BL_voidTxString("Light 3 is OFF");
    11d0:	81 e1       	ldi	r24, 0x11	; 17
    11d2:	93 e0       	ldi	r25, 0x03	; 3
    11d4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    11d8:	8d e0       	ldi	r24, 0x0D	; 13
    11da:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
    11de:	86 ed       	ldi	r24, 0xD6	; 214
    11e0:	92 e0       	ldi	r25, 0x02	; 2
    11e2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    11e6:	8d e0       	ldi	r24, 0x0D	; 13
    11e8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    11ec:	82 e8       	ldi	r24, 0x82	; 130
    11ee:	94 e0       	ldi	r25, 0x04	; 4
    11f0:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
    11f4:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    11f8:	81 33       	cpi	r24, 0x31	; 49
    11fa:	29 f4       	brne	.+10     	; 0x1206 <KPD_Interface_RemoteUser+0x2ca>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
    11fc:	41 e0       	ldi	r20, 0x01	; 1
    11fe:	62 e0       	ldi	r22, 0x02	; 2
    1200:	80 e0       	ldi	r24, 0x00	; 0
    1202:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    1206:	8f ef       	ldi	r24, 0xFF	; 255
    1208:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    120c:	08 95       	ret
                }
                break;

            case ('4'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN3, &led_status);
    120e:	44 e7       	ldi	r20, 0x74	; 116
    1210:	54 e0       	ldi	r21, 0x04	; 4
    1212:	63 e0       	ldi	r22, 0x03	; 3
    1214:	80 e0       	ldi	r24, 0x00	; 0
    1216:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
    121a:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    121e:	81 30       	cpi	r24, 0x01	; 1
    1220:	f9 f4       	brne	.+62     	; 0x1260 <KPD_Interface_RemoteUser+0x324>
                {
                    BL_voidTxString("Light 4 is On");
    1222:	80 e2       	ldi	r24, 0x20	; 32
    1224:	93 e0       	ldi	r25, 0x03	; 3
    1226:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    122a:	8d e0       	ldi	r24, 0x0D	; 13
    122c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
    1230:	86 eb       	ldi	r24, 0xB6	; 182
    1232:	92 e0       	ldi	r25, 0x02	; 2
    1234:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    1238:	8d e0       	ldi	r24, 0x0D	; 13
    123a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    123e:	82 e8       	ldi	r24, 0x82	; 130
    1240:	94 e0       	ldi	r25, 0x04	; 4
    1242:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
    1246:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    124a:	81 33       	cpi	r24, 0x31	; 49
    124c:	29 f4       	brne	.+10     	; 0x1258 <KPD_Interface_RemoteUser+0x31c>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
    124e:	41 e0       	ldi	r20, 0x01	; 1
    1250:	63 e0       	ldi	r22, 0x03	; 3
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    1258:	8f ef       	ldi	r24, 0xFF	; 255
    125a:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    125e:	08 95       	ret
                }
                else if (led_status == 0)
    1260:	81 11       	cpse	r24, r1
    1262:	05 c2       	rjmp	.+1034   	; 0x166e <KPD_Interface_RemoteUser+0x732>
                {
                    BL_voidTxString("Light 4 is OFF");
    1264:	8e e2       	ldi	r24, 0x2E	; 46
    1266:	93 e0       	ldi	r25, 0x03	; 3
    1268:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    126c:	8d e0       	ldi	r24, 0x0D	; 13
    126e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
    1272:	86 ed       	ldi	r24, 0xD6	; 214
    1274:	92 e0       	ldi	r25, 0x02	; 2
    1276:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    127a:	8d e0       	ldi	r24, 0x0D	; 13
    127c:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    1280:	82 e8       	ldi	r24, 0x82	; 130
    1282:	94 e0       	ldi	r25, 0x04	; 4
    1284:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
    1288:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    128c:	81 33       	cpi	r24, 0x31	; 49
    128e:	29 f4       	brne	.+10     	; 0x129a <KPD_Interface_RemoteUser+0x35e>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
    1290:	41 e0       	ldi	r20, 0x01	; 1
    1292:	63 e0       	ldi	r22, 0x03	; 3
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    129a:	8f ef       	ldi	r24, 0xFF	; 255
    129c:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    12a0:	08 95       	ret
                }
                break;

            case ('5'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN2, &led_status);
    12a2:	44 e7       	ldi	r20, 0x74	; 116
    12a4:	54 e0       	ldi	r21, 0x04	; 4
    12a6:	62 e0       	ldi	r22, 0x02	; 2
    12a8:	83 e0       	ldi	r24, 0x03	; 3
    12aa:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                
                if (led_status == 1)
    12ae:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    12b2:	81 30       	cpi	r24, 0x01	; 1
    12b4:	f9 f4       	brne	.+62     	; 0x12f4 <KPD_Interface_RemoteUser+0x3b8>
                {
                    BL_voidTxString("Light 5 is On");
    12b6:	8d e3       	ldi	r24, 0x3D	; 61
    12b8:	93 e0       	ldi	r25, 0x03	; 3
    12ba:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    12be:	8d e0       	ldi	r24, 0x0D	; 13
    12c0:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It Off");
    12c4:	86 eb       	ldi	r24, 0xB6	; 182
    12c6:	92 e0       	ldi	r25, 0x02	; 2
    12c8:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    12cc:	8d e0       	ldi	r24, 0x0D	; 13
    12ce:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    12d2:	82 e8       	ldi	r24, 0x82	; 130
    12d4:	94 e0       	ldi	r25, 0x04	; 4
    12d6:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
    12da:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    12de:	81 33       	cpi	r24, 0x31	; 49
    12e0:	29 f4       	brne	.+10     	; 0x12ec <KPD_Interface_RemoteUser+0x3b0>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
    12e2:	41 e0       	ldi	r20, 0x01	; 1
    12e4:	62 e0       	ldi	r22, 0x02	; 2
    12e6:	83 e0       	ldi	r24, 0x03	; 3
    12e8:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    12ec:	8f ef       	ldi	r24, 0xFF	; 255
    12ee:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    12f2:	08 95       	ret
                }
                else if (led_status == 0)
    12f4:	81 11       	cpse	r24, r1
    12f6:	bb c1       	rjmp	.+886    	; 0x166e <KPD_Interface_RemoteUser+0x732>
                {
                    BL_voidTxString("Light 5 is OFF");
    12f8:	8b e4       	ldi	r24, 0x4B	; 75
    12fa:	93 e0       	ldi	r25, 0x03	; 3
    12fc:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    1300:	8d e0       	ldi	r24, 0x0D	; 13
    1302:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1-To Turn It On");
    1306:	86 ed       	ldi	r24, 0xD6	; 214
    1308:	92 e0       	ldi	r25, 0x02	; 2
    130a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    130e:	8d e0       	ldi	r24, 0x0D	; 13
    1310:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    1314:	82 e8       	ldi	r24, 0x82	; 130
    1316:	94 e0       	ldi	r25, 0x04	; 4
    1318:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>

                    if (bluetooh_value == '1')
    131c:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1320:	81 33       	cpi	r24, 0x31	; 49
    1322:	29 f4       	brne	.+10     	; 0x132e <KPD_Interface_RemoteUser+0x3f2>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
    1324:	41 e0       	ldi	r20, 0x01	; 1
    1326:	62 e0       	ldi	r22, 0x02	; 2
    1328:	83 e0       	ldi	r24, 0x03	; 3
    132a:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    bluetooh_value = KPD_Not_Pressed;
    132e:	8f ef       	ldi	r24, 0xFF	; 255
    1330:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <bluetooh_value>
    1334:	08 95       	ret

            case ('6'):
				
                
				
                if (dimmer_brightness > 0)
    1336:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    133a:	88 23       	and	r24, r24
    133c:	09 f4       	brne	.+2      	; 0x1340 <KPD_Interface_RemoteUser+0x404>
    133e:	b1 c0       	rjmp	.+354    	; 0x14a2 <KPD_Interface_RemoteUser+0x566>
                {
					 BL_voidTxChar('\r');
    1340:	8d e0       	ldi	r24, 0x0D	; 13
    1342:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("Light 6 is On");
    1346:	8a e5       	ldi	r24, 0x5A	; 90
    1348:	93 e0       	ldi	r25, 0x03	; 3
    134a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    134e:	8d e0       	ldi	r24, 0x0D	; 13
    1350:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
    1354:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    1358:	1f 92       	push	r1
    135a:	8f 93       	push	r24
    135c:	88 e6       	ldi	r24, 0x68	; 104
    135e:	93 e0       	ldi	r25, 0x03	; 3
    1360:	9f 93       	push	r25
    1362:	8f 93       	push	r24
    1364:	83 e8       	ldi	r24, 0x83	; 131
    1366:	94 e0       	ldi	r25, 0x04	; 4
    1368:	9f 93       	push	r25
    136a:	8f 93       	push	r24
    136c:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
					BL_voidTxString(DimmerString);
    1370:	83 e8       	ldi	r24, 0x83	; 131
    1372:	94 e0       	ldi	r25, 0x04	; 4
    1374:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    1378:	8d e0       	ldi	r24, 0x0D	; 13
    137a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1)+10 2)-10 0)H");
    137e:	88 e7       	ldi	r24, 0x78	; 120
    1380:	93 e0       	ldi	r25, 0x03	; 3
    1382:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    1386:	8d e0       	ldi	r24, 0x0D	; 13
    1388:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    138c:	82 e8       	ldi	r24, 0x82	; 130
    138e:	94 e0       	ldi	r25, 0x04	; 4
    1390:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
					while (bluetooh_value != 0)
    1394:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1398:	0f 90       	pop	r0
    139a:	0f 90       	pop	r0
    139c:	0f 90       	pop	r0
    139e:	0f 90       	pop	r0
    13a0:	0f 90       	pop	r0
    13a2:	0f 90       	pop	r0
    13a4:	88 23       	and	r24, r24
    13a6:	09 f4       	brne	.+2      	; 0x13aa <KPD_Interface_RemoteUser+0x46e>
    13a8:	62 c1       	rjmp	.+708    	; 0x166e <KPD_Interface_RemoteUser+0x732>
					{
						if (bluetooh_value == '1')
    13aa:	81 33       	cpi	r24, 0x31	; 49
    13ac:	09 f0       	breq	.+2      	; 0x13b0 <KPD_Interface_RemoteUser+0x474>
    13ae:	43 c0       	rjmp	.+134    	; 0x1436 <KPD_Interface_RemoteUser+0x4fa>
						{
							dimmer_brightness += 10;
    13b0:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    13b4:	66 5f       	subi	r22, 0xF6	; 246
    13b6:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	80 e0       	ldi	r24, 0x00	; 0
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    13c4:	ab 01       	movw	r20, r22
    13c6:	bc 01       	movw	r22, r24
    13c8:	88 ee       	ldi	r24, 0xE8	; 232
    13ca:	93 e0       	ldi	r25, 0x03	; 3
    13cc:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
    13d0:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    13d4:	1f 92       	push	r1
    13d6:	8f 93       	push	r24
    13d8:	88 e6       	ldi	r24, 0x68	; 104
    13da:	93 e0       	ldi	r25, 0x03	; 3
    13dc:	9f 93       	push	r25
    13de:	8f 93       	push	r24
    13e0:	83 e8       	ldi	r24, 0x83	; 131
    13e2:	94 e0       	ldi	r25, 0x04	; 4
    13e4:	9f 93       	push	r25
    13e6:	8f 93       	push	r24
    13e8:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
    13ec:	83 e8       	ldi	r24, 0x83	; 131
    13ee:	94 e0       	ldi	r25, 0x04	; 4
    13f0:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
    13f4:	8d e0       	ldi	r24, 0x0D	; 13
    13f6:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
    13fa:	88 e7       	ldi	r24, 0x78	; 120
    13fc:	93 e0       	ldi	r25, 0x03	; 3
    13fe:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
    1402:	8d e0       	ldi	r24, 0x0D	; 13
    1404:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							if (dimmer_brightness > 100)
    1408:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    140c:	0f 90       	pop	r0
    140e:	0f 90       	pop	r0
    1410:	0f 90       	pop	r0
    1412:	0f 90       	pop	r0
    1414:	0f 90       	pop	r0
    1416:	0f 90       	pop	r0
    1418:	85 36       	cpi	r24, 0x65	; 101
    141a:	08 f4       	brcc	.+2      	; 0x141e <KPD_Interface_RemoteUser+0x4e2>
    141c:	28 c1       	rjmp	.+592    	; 0x166e <KPD_Interface_RemoteUser+0x732>
							{
								dimmer_brightness = 100;
    141e:	84 e6       	ldi	r24, 0x64	; 100
    1420:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1424:	40 e0       	ldi	r20, 0x00	; 0
    1426:	50 e0       	ldi	r21, 0x00	; 0
    1428:	68 ec       	ldi	r22, 0xC8	; 200
    142a:	72 e4       	ldi	r23, 0x42	; 66
    142c:	88 ee       	ldi	r24, 0xE8	; 232
    142e:	93 e0       	ldi	r25, 0x03	; 3
    1430:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
    1434:	08 95       	ret
							}
							break;													
						}
						else if (bluetooh_value == '2')
    1436:	82 33       	cpi	r24, 0x32	; 50
    1438:	09 f0       	breq	.+2      	; 0x143c <KPD_Interface_RemoteUser+0x500>
    143a:	19 c1       	rjmp	.+562    	; 0x166e <KPD_Interface_RemoteUser+0x732>
						{
							dimmer_brightness -= 10;
    143c:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1440:	6a 50       	subi	r22, 0x0A	; 10
    1442:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1446:	70 e0       	ldi	r23, 0x00	; 0
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    1450:	ab 01       	movw	r20, r22
    1452:	bc 01       	movw	r22, r24
    1454:	88 ee       	ldi	r24, 0xE8	; 232
    1456:	93 e0       	ldi	r25, 0x03	; 3
    1458:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
    145c:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    1460:	1f 92       	push	r1
    1462:	8f 93       	push	r24
    1464:	88 e6       	ldi	r24, 0x68	; 104
    1466:	93 e0       	ldi	r25, 0x03	; 3
    1468:	9f 93       	push	r25
    146a:	8f 93       	push	r24
    146c:	83 e8       	ldi	r24, 0x83	; 131
    146e:	94 e0       	ldi	r25, 0x04	; 4
    1470:	9f 93       	push	r25
    1472:	8f 93       	push	r24
    1474:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
    1478:	83 e8       	ldi	r24, 0x83	; 131
    147a:	94 e0       	ldi	r25, 0x04	; 4
    147c:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
    1480:	8d e0       	ldi	r24, 0x0D	; 13
    1482:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
    1486:	88 e7       	ldi	r24, 0x78	; 120
    1488:	93 e0       	ldi	r25, 0x03	; 3
    148a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
    148e:	8d e0       	ldi	r24, 0x0D	; 13
    1490:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							if (dimmer_brightness < 0)
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
							break;
    1494:	0f 90       	pop	r0
    1496:	0f 90       	pop	r0
    1498:	0f 90       	pop	r0
    149a:	0f 90       	pop	r0
    149c:	0f 90       	pop	r0
    149e:	0f 90       	pop	r0
    14a0:	08 95       	ret
						break;					
	
					}
					
                }
                else if (dimmer_brightness == 0)
    14a2:	81 11       	cpse	r24, r1
    14a4:	e4 c0       	rjmp	.+456    	; 0x166e <KPD_Interface_RemoteUser+0x732>
                {
                    BL_voidTxString("Light 6 is OFF");
    14a6:	88 e8       	ldi	r24, 0x88	; 136
    14a8:	93 e0       	ldi	r25, 0x03	; 3
    14aa:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
    14ae:	2f ef       	ldi	r18, 0xFF	; 255
    14b0:	83 ed       	ldi	r24, 0xD3	; 211
    14b2:	90 e3       	ldi	r25, 0x30	; 48
    14b4:	21 50       	subi	r18, 0x01	; 1
    14b6:	80 40       	sbci	r24, 0x00	; 0
    14b8:	90 40       	sbci	r25, 0x00	; 0
    14ba:	e1 f7       	brne	.-8      	; 0x14b4 <KPD_Interface_RemoteUser+0x578>
    14bc:	00 c0       	rjmp	.+0      	; 0x14be <KPD_Interface_RemoteUser+0x582>
    14be:	00 00       	nop
					_delay_ms(1000);
					BL_voidTxChar('\r');
    14c0:	8d e0       	ldi	r24, 0x0D	; 13
    14c2:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
    14c6:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    14ca:	1f 92       	push	r1
    14cc:	8f 93       	push	r24
    14ce:	88 e6       	ldi	r24, 0x68	; 104
    14d0:	93 e0       	ldi	r25, 0x03	; 3
    14d2:	9f 93       	push	r25
    14d4:	8f 93       	push	r24
    14d6:	83 e8       	ldi	r24, 0x83	; 131
    14d8:	94 e0       	ldi	r25, 0x04	; 4
    14da:	9f 93       	push	r25
    14dc:	8f 93       	push	r24
    14de:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
					BL_voidTxString(DimmerString);
    14e2:	83 e8       	ldi	r24, 0x83	; 131
    14e4:	94 e0       	ldi	r25, 0x04	; 4
    14e6:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    BL_voidTxChar('\r');
    14ea:	8d e0       	ldi	r24, 0x0D	; 13
    14ec:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    BL_voidTxString("1)+10 2)-10 0)H");
    14f0:	88 e7       	ldi	r24, 0x78	; 120
    14f2:	93 e0       	ldi	r25, 0x03	; 3
    14f4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
					BL_voidTxChar('\r');
    14f8:	8d e0       	ldi	r24, 0x0D	; 13
    14fa:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
					BL_voidRxChar(&bluetooh_value);
    14fe:	82 e8       	ldi	r24, 0x82	; 130
    1500:	94 e0       	ldi	r25, 0x04	; 4
    1502:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
					while (bluetooh_value != 0)
    1506:	0f 90       	pop	r0
    1508:	0f 90       	pop	r0
    150a:	0f 90       	pop	r0
    150c:	0f 90       	pop	r0
    150e:	0f 90       	pop	r0
    1510:	0f 90       	pop	r0
    1512:	7d c0       	rjmp	.+250    	; 0x160e <KPD_Interface_RemoteUser+0x6d2>
					{
						if (bluetooh_value == '1')
    1514:	81 33       	cpi	r24, 0x31	; 49
    1516:	09 f0       	breq	.+2      	; 0x151a <KPD_Interface_RemoteUser+0x5de>
    1518:	43 c0       	rjmp	.+134    	; 0x15a0 <KPD_Interface_RemoteUser+0x664>
						{
							dimmer_brightness += 10;
    151a:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    151e:	66 5f       	subi	r22, 0xF6	; 246
    1520:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1524:	70 e0       	ldi	r23, 0x00	; 0
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    152e:	ab 01       	movw	r20, r22
    1530:	bc 01       	movw	r22, r24
    1532:	88 ee       	ldi	r24, 0xE8	; 232
    1534:	93 e0       	ldi	r25, 0x03	; 3
    1536:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
    153a:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    153e:	1f 92       	push	r1
    1540:	8f 93       	push	r24
    1542:	88 e6       	ldi	r24, 0x68	; 104
    1544:	93 e0       	ldi	r25, 0x03	; 3
    1546:	9f 93       	push	r25
    1548:	8f 93       	push	r24
    154a:	83 e8       	ldi	r24, 0x83	; 131
    154c:	94 e0       	ldi	r25, 0x04	; 4
    154e:	9f 93       	push	r25
    1550:	8f 93       	push	r24
    1552:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
    1556:	83 e8       	ldi	r24, 0x83	; 131
    1558:	94 e0       	ldi	r25, 0x04	; 4
    155a:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
    155e:	8d e0       	ldi	r24, 0x0D	; 13
    1560:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
    1564:	88 e7       	ldi	r24, 0x78	; 120
    1566:	93 e0       	ldi	r25, 0x03	; 3
    1568:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
    156c:	8d e0       	ldi	r24, 0x0D	; 13
    156e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							if (dimmer_brightness > 100)
    1572:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    1576:	0f 90       	pop	r0
    1578:	0f 90       	pop	r0
    157a:	0f 90       	pop	r0
    157c:	0f 90       	pop	r0
    157e:	0f 90       	pop	r0
    1580:	0f 90       	pop	r0
    1582:	85 36       	cpi	r24, 0x65	; 101
    1584:	08 f4       	brcc	.+2      	; 0x1588 <KPD_Interface_RemoteUser+0x64c>
    1586:	73 c0       	rjmp	.+230    	; 0x166e <KPD_Interface_RemoteUser+0x732>
							{
								dimmer_brightness = 100;
    1588:	84 e6       	ldi	r24, 0x64	; 100
    158a:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    158e:	40 e0       	ldi	r20, 0x00	; 0
    1590:	50 e0       	ldi	r21, 0x00	; 0
    1592:	68 ec       	ldi	r22, 0xC8	; 200
    1594:	72 e4       	ldi	r23, 0x42	; 66
    1596:	88 ee       	ldi	r24, 0xE8	; 232
    1598:	93 e0       	ldi	r25, 0x03	; 3
    159a:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
    159e:	08 95       	ret
							}
							break;
						
							
						}
						else if (bluetooh_value == '2')
    15a0:	82 33       	cpi	r24, 0x32	; 50
    15a2:	99 f5       	brne	.+102    	; 0x160a <KPD_Interface_RemoteUser+0x6ce>
						{
							dimmer_brightness -= 10;
    15a4:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    15a8:	6a 50       	subi	r22, 0x0A	; 10
    15aa:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    15b8:	ab 01       	movw	r20, r22
    15ba:	bc 01       	movw	r22, r24
    15bc:	88 ee       	ldi	r24, 0xE8	; 232
    15be:	93 e0       	ldi	r25, 0x03	; 3
    15c0:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							sprintf(DimmerString, "Brightness: %d%", dimmer_brightness);
    15c4:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    15c8:	1f 92       	push	r1
    15ca:	8f 93       	push	r24
    15cc:	88 e6       	ldi	r24, 0x68	; 104
    15ce:	93 e0       	ldi	r25, 0x03	; 3
    15d0:	9f 93       	push	r25
    15d2:	8f 93       	push	r24
    15d4:	83 e8       	ldi	r24, 0x83	; 131
    15d6:	94 e0       	ldi	r25, 0x04	; 4
    15d8:	9f 93       	push	r25
    15da:	8f 93       	push	r24
    15dc:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
							BL_voidTxString(DimmerString);
    15e0:	83 e8       	ldi	r24, 0x83	; 131
    15e2:	94 e0       	ldi	r25, 0x04	; 4
    15e4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
                    		BL_voidTxChar('\r');
    15e8:	8d e0       	ldi	r24, 0x0D	; 13
    15ea:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
                    		BL_voidTxString("1)+10 2)-10 0)H");
    15ee:	88 e7       	ldi	r24, 0x78	; 120
    15f0:	93 e0       	ldi	r25, 0x03	; 3
    15f2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
							BL_voidTxChar('\r');
    15f6:	8d e0       	ldi	r24, 0x0D	; 13
    15f8:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
							if (dimmer_brightness < 0)
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
							break;
    15fc:	0f 90       	pop	r0
    15fe:	0f 90       	pop	r0
    1600:	0f 90       	pop	r0
    1602:	0f 90       	pop	r0
    1604:	0f 90       	pop	r0
    1606:	0f 90       	pop	r0
    1608:	08 95       	ret
						}
						else if (bluetooh_value == '0')
    160a:	80 33       	cpi	r24, 0x30	; 48
    160c:	81 f1       	breq	.+96     	; 0x166e <KPD_Interface_RemoteUser+0x732>
					BL_voidTxString(DimmerString);
                    BL_voidTxChar('\r');
                    BL_voidTxString("1)+10 2)-10 0)H");
					BL_voidTxChar('\r');
					BL_voidRxChar(&bluetooh_value);
					while (bluetooh_value != 0)
    160e:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1612:	81 11       	cpse	r24, r1
    1614:	7f cf       	rjmp	.-258    	; 0x1514 <KPD_Interface_RemoteUser+0x5d8>
    1616:	08 95       	ret
			break;

			case ('3'):
			
				
				ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp); 
    1618:	62 e7       	ldi	r22, 0x72	; 114
    161a:	74 e0       	ldi	r23, 0x04	; 4
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
				sprintf(tempString, "Room Temp: %d c", local_temp);
    1622:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <__data_end>
    1626:	1f 92       	push	r1
    1628:	8f 93       	push	r24
    162a:	8e e6       	ldi	r24, 0x6E	; 110
    162c:	92 e0       	ldi	r25, 0x02	; 2
    162e:	9f 93       	push	r25
    1630:	8f 93       	push	r24
    1632:	87 e9       	ldi	r24, 0x97	; 151
    1634:	94 e0       	ldi	r25, 0x04	; 4
    1636:	9f 93       	push	r25
    1638:	8f 93       	push	r24
    163a:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
				BL_voidTxString(tempString);
    163e:	87 e9       	ldi	r24, 0x97	; 151
    1640:	94 e0       	ldi	r25, 0x04	; 4
    1642:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
    1646:	8d e0       	ldi	r24, 0x0D	; 13
    1648:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				BL_voidTxString("0-go to home");
    164c:	8e e7       	ldi	r24, 0x7E	; 126
    164e:	92 e0       	ldi	r25, 0x02	; 2
    1650:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
				BL_voidTxChar('\r');
    1654:	8d e0       	ldi	r24, 0x0D	; 13
    1656:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
				BL_voidRxChar(&bluetooh_value);	
    165a:	82 e8       	ldi	r24, 0x82	; 130
    165c:	94 e0       	ldi	r25, 0x04	; 4
    165e:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
				{
					
				}

					
        break;
    1662:	0f 90       	pop	r0
    1664:	0f 90       	pop	r0
    1666:	0f 90       	pop	r0
    1668:	0f 90       	pop	r0
    166a:	0f 90       	pop	r0
    166c:	0f 90       	pop	r0
    166e:	08 95       	ret

00001670 <WelcomeScreen>:
}

void WelcomeScreen()
// this function is for greeting the user in local user interface
{
    LCD_voidDisplayStringDelay((u8 *)" Welcome to your");
    1670:	8a ef       	ldi	r24, 0xFA	; 250
    1672:	93 e0       	ldi	r25, 0x03	; 3
    1674:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
    LCD_voidSendCommand(Write_SecondLine);
    1678:	80 ec       	ldi	r24, 0xC0	; 192
    167a:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    LCD_voidDisplayStringDelay((u8 *)"   Smart Home");
    167e:	8b e0       	ldi	r24, 0x0B	; 11
    1680:	94 e0       	ldi	r25, 0x04	; 4
    1682:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
    1686:	2f ef       	ldi	r18, 0xFF	; 255
    1688:	83 ed       	ldi	r24, 0xD3	; 211
    168a:	90 e3       	ldi	r25, 0x30	; 48
    168c:	21 50       	subi	r18, 0x01	; 1
    168e:	80 40       	sbci	r24, 0x00	; 0
    1690:	90 40       	sbci	r25, 0x00	; 0
    1692:	e1 f7       	brne	.-8      	; 0x168c <WelcomeScreen+0x1c>
    1694:	00 c0       	rjmp	.+0      	; 0x1696 <WelcomeScreen+0x26>
    1696:	00 00       	nop
    1698:	08 95       	ret

0000169a <Display_Remotetemp>:
}

void Display_Remotetemp(void)
//function for getting temp value from temp sensor and displaying it for remote user
{
	ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp); 
    169a:	62 e7       	ldi	r22, 0x72	; 114
    169c:	74 e0       	ldi	r23, 0x04	; 4
    169e:	80 e0       	ldi	r24, 0x00	; 0
    16a0:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
	sprintf(tempString, "Room Temp: %d c", local_temp);
    16a4:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <__data_end>
    16a8:	1f 92       	push	r1
    16aa:	8f 93       	push	r24
    16ac:	8e e6       	ldi	r24, 0x6E	; 110
    16ae:	92 e0       	ldi	r25, 0x02	; 2
    16b0:	9f 93       	push	r25
    16b2:	8f 93       	push	r24
    16b4:	87 e9       	ldi	r24, 0x97	; 151
    16b6:	94 e0       	ldi	r25, 0x04	; 4
    16b8:	9f 93       	push	r25
    16ba:	8f 93       	push	r24
    16bc:	0e 94 00 1a 	call	0x3400	; 0x3400 <sprintf>
	BL_voidTxString(tempString);
    16c0:	87 e9       	ldi	r24, 0x97	; 151
    16c2:	94 e0       	ldi	r25, 0x04	; 4
    16c4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
    16c8:	8d e0       	ldi	r24, 0x0D	; 13
    16ca:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
}
    16ce:	0f 90       	pop	r0
    16d0:	0f 90       	pop	r0
    16d2:	0f 90       	pop	r0
    16d4:	0f 90       	pop	r0
    16d6:	0f 90       	pop	r0
    16d8:	0f 90       	pop	r0
    16da:	08 95       	ret

000016dc <Idle_RemoteAction>:

void Idle_RemoteAction()
//this function is for the remote user interface to go to the idle function after 5 sec of inactivity
// tmr0 interrupt function for the remote user 
{ 
    BL_voidTxChar('\r');
    16dc:	8d e0       	ldi	r24, 0x0D	; 13
    16de:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	Display_Remotetemp();
    16e2:	0e 94 4d 0b 	call	0x169a	; 0x169a <Display_Remotetemp>
	BL_voidTxString("0-Go to Home");
    16e6:	89 e1       	ldi	r24, 0x19	; 25
    16e8:	94 e0       	ldi	r25, 0x04	; 4
    16ea:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <BL_voidTxString>
	BL_voidTxChar('\r');
    16ee:	8d e0       	ldi	r24, 0x0D	; 13
    16f0:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <BL_voidTxChar>
	BL_voidRxChar(&bluetooh_value);
    16f4:	82 e8       	ldi	r24, 0x82	; 130
    16f6:	94 e0       	ldi	r25, 0x04	; 4
    16f8:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <BL_voidRxChar>
    if (bluetooh_value == '0')
    16fc:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <bluetooh_value>
    1700:	80 33       	cpi	r24, 0x30	; 48
    1702:	11 f4       	brne	.+4      	; 0x1708 <Idle_RemoteAction+0x2c>
    {
        TMR0clear_flag();
    1704:	0e 94 cd 15 	call	0x2b9a	; 0x2b9a <TMR0clear_flag>
    1708:	08 95       	ret

0000170a <Display_temp>:
}

void Display_temp(void)
//function for getting temp value from temp sensor and displaying it for local user
{
	ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    170a:	62 e7       	ldi	r22, 0x72	; 114
    170c:	74 e0       	ldi	r23, 0x04	; 4
    170e:	80 e0       	ldi	r24, 0x00	; 0
    1710:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
	LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,11);
    1714:	6b e0       	ldi	r22, 0x0B	; 11
    1716:	81 e0       	ldi	r24, 0x01	; 1
    1718:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
	LCD_voidDisplayNumber(local_temp);
    171c:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <__data_end>
    1720:	70 e0       	ldi	r23, 0x00	; 0
    1722:	80 e0       	ldi	r24, 0x00	; 0
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
    172a:	08 95       	ret

0000172c <Idle_Action>:

void Idle_Action()
//this function is for the local user interface to go to the idle function after 5 sec of inactivity
// tmr0 interrupt function for the local user
{ 
    LCD_voidClear();
    172c:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
	LCD_voidSendCommand(Write_FirstLine);
    1730:	80 e8       	ldi	r24, 0x80	; 128
    1732:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
	LCD_voidDisplayString((u8 *)"Room Temp:   c");
    1736:	86 e2       	ldi	r24, 0x26	; 38
    1738:	94 e0       	ldi	r25, 0x04	; 4
    173a:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
	Display_temp();
    173e:	0e 94 85 0b 	call	0x170a	; 0x170a <Display_temp>
	LCD_voidSendCommand(Write_SecondLine);
    1742:	80 ec       	ldi	r24, 0xC0	; 192
    1744:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
	LCD_voidDisplayString("0-Go to Home");
    1748:	89 e1       	ldi	r24, 0x19	; 25
    174a:	94 e0       	ldi	r25, 0x04	; 4
    174c:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
	
    while (local_KPDIdleValue == KPD_Not_Pressed)
    1750:	06 c0       	rjmp	.+12     	; 0x175e <Idle_Action+0x32>
    {
        KPD_voidGetValue(&local_KPDIdleValue);
    1752:	81 e6       	ldi	r24, 0x61	; 97
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
		Display_temp();
    175a:	0e 94 85 0b 	call	0x170a	; 0x170a <Display_temp>
	LCD_voidDisplayString((u8 *)"Room Temp:   c");
	Display_temp();
	LCD_voidSendCommand(Write_SecondLine);
	LCD_voidDisplayString("0-Go to Home");
	
    while (local_KPDIdleValue == KPD_Not_Pressed)
    175e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    1762:	8f 3f       	cpi	r24, 0xFF	; 255
    1764:	b1 f3       	breq	.-20     	; 0x1752 <Idle_Action+0x26>
        KPD_voidGetValue(&local_KPDIdleValue);
		Display_temp();

        
    }
    if (local_KPDIdleValue == '0')
    1766:	80 33       	cpi	r24, 0x30	; 48
    1768:	11 f4       	brne	.+4      	; 0x176e <Idle_Action+0x42>
    {
        LCD_voidClear();
    176a:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
    }
    TMR0clear_flag();
    176e:	0e 94 cd 15 	call	0x2b9a	; 0x2b9a <TMR0clear_flag>
    LCD_voidClear();
    1772:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
    1776:	08 95       	ret

00001778 <Reset_AllKPDValues>:
}

void Reset_AllKPDValues()
//function for reseting all KPD values for new values to be entered
{
    Local_copyKPDValue = KPD_Not_Pressed;
    1778:	8f ef       	ldi	r24, 0xFF	; 255
    177a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <Local_copyKPDValue>
    local_lightNum = KPD_Not_Pressed;
    177e:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <local_lightNum>
    local_lightStatus = KPD_Not_Pressed;
    1782:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
	local_KPDIdleValue = KPD_Not_Pressed;
    1786:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <local_KPDIdleValue>
    178a:	08 95       	ret

0000178c <KPD_Interface_Localuser>:

void KPD_Interface_Localuser(void)
{
	//this is the local user interface to control the smart home all user allowed functions using lcd to display options and KPD for interaction
		//reseting all KPD variables for new values to be entered
        Reset_AllKPDValues();
    178c:	0e 94 bc 0b 	call	0x1778	; 0x1778 <Reset_AllKPDValues>
		2-start tmr0 before busy wait for KPD to avoid starting the tmr0 counter when the lcd didnt finish printing the options
		3-after the wihle loop is finished make sure to stop the tmr0 to avoid going to the idle function
		*/
	
		//setting the TRM0 ctc interrupt function
        TMR0_SetCallBackCTC(&Idle_Action);
    1790:	86 e9       	ldi	r24, 0x96	; 150
    1792:	9b e0       	ldi	r25, 0x0B	; 11
    1794:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <TMR0_SetCallBackCTC>
		//starting the timer0
        TMR0_voidStart();
    1798:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
        LCD_voidClear();
    179c:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
        LCD_voidDisplayString((u8 *)"1-AC 2-light");
    17a0:	86 e2       	ldi	r24, 0x26	; 38
    17a2:	92 e0       	ldi	r25, 0x02	; 2
    17a4:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
        LCD_voidSendCommand(Write_SecondLine);
    17a8:	80 ec       	ldi	r24, 0xC0	; 192
    17aa:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
        LCD_voidDisplayString((u8 *)"3-temp 4-Door");
    17ae:	83 e3       	ldi	r24, 0x33	; 51
    17b0:	92 e0       	ldi	r25, 0x02	; 2
    17b2:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
        Reset_AllKPDValues();
    17b6:	0e 94 bc 0b 	call	0x1778	; 0x1778 <Reset_AllKPDValues>

        // busy wait for KPD to get the value. timr0 is still counting for the 5 sec idle to go to interrupt function
        while (Local_copyKPDValue == KPD_Not_Pressed)
    17ba:	0c c0       	rjmp	.+24     	; 0x17d4 <KPD_Interface_Localuser+0x48>
        {
            if (local_KPDIdleValue == '0')
    17bc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    17c0:	80 33       	cpi	r24, 0x30	; 48
    17c2:	21 f4       	brne	.+8      	; 0x17cc <KPD_Interface_Localuser+0x40>
            {
                local_KPDIdleValue = KPD_Not_Pressed;
    17c4:	8f ef       	ldi	r24, 0xFF	; 255
    17c6:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <local_KPDIdleValue>
                break;
    17ca:	08 c0       	rjmp	.+16     	; 0x17dc <KPD_Interface_Localuser+0x50>
            }
            else
            {
                KPD_voidGetValue(&Local_copyKPDValue);
    17cc:	84 e6       	ldi	r24, 0x64	; 100
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
        LCD_voidSendCommand(Write_SecondLine);
        LCD_voidDisplayString((u8 *)"3-temp 4-Door");
        Reset_AllKPDValues();

        // busy wait for KPD to get the value. timr0 is still counting for the 5 sec idle to go to interrupt function
        while (Local_copyKPDValue == KPD_Not_Pressed)
    17d4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <Local_copyKPDValue>
    17d8:	8f 3f       	cpi	r24, 0xFF	; 255
    17da:	81 f3       	breq	.-32     	; 0x17bc <KPD_Interface_Localuser+0x30>
            {
                KPD_voidGetValue(&Local_copyKPDValue);
            }
        }
		//stopping timer after reciving the value to avoid tmr0 from going to idle function
        TMR0_voidStop();
    17dc:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
        switch (Local_copyKPDValue)
    17e0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <Local_copyKPDValue>
    17e4:	82 33       	cpi	r24, 0x32	; 50
    17e6:	09 f4       	brne	.+2      	; 0x17ea <KPD_Interface_Localuser+0x5e>
    17e8:	45 c0       	rjmp	.+138    	; 0x1874 <KPD_Interface_Localuser+0xe8>
    17ea:	83 33       	cpi	r24, 0x33	; 51
    17ec:	09 f4       	brne	.+2      	; 0x17f0 <KPD_Interface_Localuser+0x64>
    17ee:	06 c3       	rjmp	.+1548   	; 0x1dfc <KPD_Interface_Localuser+0x670>
    17f0:	81 33       	cpi	r24, 0x31	; 49
    17f2:	09 f0       	breq	.+2      	; 0x17f6 <KPD_Interface_Localuser+0x6a>
    17f4:	35 c3       	rjmp	.+1642   	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
        {
        case ('1'):

            LCD_voidClear();
    17f6:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
            LCD_voidDisplayStringDelay((u8 *)"AC Is On/off 0-H");
    17fa:	85 e3       	ldi	r24, 0x35	; 53
    17fc:	94 e0       	ldi	r25, 0x04	; 4
    17fe:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
            LCD_voidSendCommand(Write_SecondLine);
    1802:	80 ec       	ldi	r24, 0xC0	; 192
    1804:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
			ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    1808:	62 e7       	ldi	r22, 0x72	; 114
    180a:	74 e0       	ldi	r23, 0x04	; 4
    180c:	80 e0       	ldi	r24, 0x00	; 0
    180e:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
            LCD_voidDisplayStringDelay((u8 *)"Room Temp:  c");
    1812:	86 e4       	ldi	r24, 0x46	; 70
    1814:	94 e0       	ldi	r25, 0x04	; 4
    1816:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
			LCD_voidGoTOSpecificPosition(LCD_LINE_TWO, 12);
    181a:	6c e0       	ldi	r22, 0x0C	; 12
    181c:	82 e0       	ldi	r24, 0x02	; 2
    181e:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
			LCD_voidDisplayNumber(local_temp);
    1822:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <__data_end>
    1826:	70 e0       	ldi	r23, 0x00	; 0
    1828:	80 e0       	ldi	r24, 0x00	; 0
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
			while (local_KPDSelectValue == KPD_Not_Pressed)
    1830:	1c c0       	rjmp	.+56     	; 0x186a <KPD_Interface_Localuser+0xde>
			{
				KPD_voidGetValue(&local_KPDSelectValue);
    1832:	80 e6       	ldi	r24, 0x60	; 96
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
				ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    183a:	62 e7       	ldi	r22, 0x72	; 114
    183c:	74 e0       	ldi	r23, 0x04	; 4
    183e:	80 e0       	ldi	r24, 0x00	; 0
    1840:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
				LCD_voidGoTOSpecificPosition(LCD_LINE_TWO, 12);
    1844:	6c e0       	ldi	r22, 0x0C	; 12
    1846:	82 e0       	ldi	r24, 0x02	; 2
    1848:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
				LCD_voidDisplayNumber(local_temp);
    184c:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <__data_end>
    1850:	70 e0       	ldi	r23, 0x00	; 0
    1852:	80 e0       	ldi	r24, 0x00	; 0
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
				if (local_KPDSelectValue == '0')
    185a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    185e:	80 33       	cpi	r24, 0x30	; 48
    1860:	21 f4       	brne	.+8      	; 0x186a <KPD_Interface_Localuser+0xde>
				{
					local_KPDSelectValue = KPD_Not_Pressed;
    1862:	8f ef       	ldi	r24, 0xFF	; 255
    1864:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					break;
    1868:	08 95       	ret
            LCD_voidSendCommand(Write_SecondLine);
			ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
            LCD_voidDisplayStringDelay((u8 *)"Room Temp:  c");
			LCD_voidGoTOSpecificPosition(LCD_LINE_TWO, 12);
			LCD_voidDisplayNumber(local_temp);
			while (local_KPDSelectValue == KPD_Not_Pressed)
    186a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    186e:	8f 3f       	cpi	r24, 0xFF	; 255
    1870:	01 f3       	breq	.-64     	; 0x1832 <KPD_Interface_Localuser+0xa6>
    1872:	08 95       	ret
            break;
			

        case ('2'):

            LCD_voidClear();
    1874:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
            LCD_voidDisplayStringDelay((u8 *)"Choose light to");
    1878:	8b e8       	ldi	r24, 0x8B	; 139
    187a:	92 e0       	ldi	r25, 0x02	; 2
    187c:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
            LCD_voidSendCommand(Write_SecondLine);
    1880:	80 ec       	ldi	r24, 0xC0	; 192
    1882:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
            LCD_voidDisplayStringDelay((u8 *)"control(1-6)");
    1886:	8b e9       	ldi	r24, 0x9B	; 155
    1888:	92 e0       	ldi	r25, 0x02	; 2
    188a:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>

            TMR0_SetCallBackCTC(&Idle_Action);
    188e:	86 e9       	ldi	r24, 0x96	; 150
    1890:	9b e0       	ldi	r25, 0x0B	; 11
    1892:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <TMR0_SetCallBackCTC>
            TMR0_voidStart();
    1896:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <TMR0_voidStart>
            // busy wait for KPD
            while (local_lightNum == KPD_Not_Pressed)
    189a:	0c c0       	rjmp	.+24     	; 0x18b4 <KPD_Interface_Localuser+0x128>
            {
                KPD_voidGetValue(&local_lightNum);
    189c:	83 e6       	ldi	r24, 0x63	; 99
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                if(local_KPDIdleValue=='0')
    18a4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    18a8:	80 33       	cpi	r24, 0x30	; 48
    18aa:	21 f4       	brne	.+8      	; 0x18b4 <KPD_Interface_Localuser+0x128>
                {
                    local_KPDIdleValue=KPD_Not_Pressed;
    18ac:	8f ef       	ldi	r24, 0xFF	; 255
    18ae:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <local_KPDIdleValue>
                    break;
    18b2:	04 c0       	rjmp	.+8      	; 0x18bc <KPD_Interface_Localuser+0x130>
            LCD_voidDisplayStringDelay((u8 *)"control(1-6)");

            TMR0_SetCallBackCTC(&Idle_Action);
            TMR0_voidStart();
            // busy wait for KPD
            while (local_lightNum == KPD_Not_Pressed)
    18b4:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <local_lightNum>
    18b8:	8f 3f       	cpi	r24, 0xFF	; 255
    18ba:	81 f3       	breq	.-32     	; 0x189c <KPD_Interface_Localuser+0x110>
                {
                    local_KPDIdleValue=KPD_Not_Pressed;
                    break;
                }
            }
            TMR0_voidStop();
    18bc:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <TMR0_voidStop>
            switch (local_lightNum)
    18c0:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <local_lightNum>
    18c4:	83 33       	cpi	r24, 0x33	; 51
    18c6:	09 f4       	brne	.+2      	; 0x18ca <KPD_Interface_Localuser+0x13e>
    18c8:	a6 c0       	rjmp	.+332    	; 0x1a16 <KPD_Interface_Localuser+0x28a>
    18ca:	30 f4       	brcc	.+12     	; 0x18d8 <KPD_Interface_Localuser+0x14c>
    18cc:	81 33       	cpi	r24, 0x31	; 49
    18ce:	69 f0       	breq	.+26     	; 0x18ea <KPD_Interface_Localuser+0x15e>
    18d0:	82 33       	cpi	r24, 0x32	; 50
    18d2:	09 f4       	brne	.+2      	; 0x18d6 <KPD_Interface_Localuser+0x14a>
    18d4:	54 c0       	rjmp	.+168    	; 0x197e <KPD_Interface_Localuser+0x1f2>
    18d6:	08 95       	ret
    18d8:	85 33       	cpi	r24, 0x35	; 53
    18da:	09 f4       	brne	.+2      	; 0x18de <KPD_Interface_Localuser+0x152>
    18dc:	34 c1       	rjmp	.+616    	; 0x1b46 <KPD_Interface_Localuser+0x3ba>
    18de:	08 f4       	brcc	.+2      	; 0x18e2 <KPD_Interface_Localuser+0x156>
    18e0:	e6 c0       	rjmp	.+460    	; 0x1aae <KPD_Interface_Localuser+0x322>
    18e2:	86 33       	cpi	r24, 0x36	; 54
    18e4:	09 f4       	brne	.+2      	; 0x18e8 <KPD_Interface_Localuser+0x15c>
    18e6:	7b c1       	rjmp	.+758    	; 0x1bde <KPD_Interface_Localuser+0x452>
    18e8:	08 95       	ret
            {
            case ('1'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN3, &led_status);
    18ea:	44 e7       	ldi	r20, 0x74	; 116
    18ec:	54 e0       	ldi	r21, 0x04	; 4
    18ee:	63 e0       	ldi	r22, 0x03	; 3
    18f0:	83 e0       	ldi	r24, 0x03	; 3
    18f2:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                LCD_voidClear();
    18f6:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
                if (led_status == 1)
    18fa:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    18fe:	81 30       	cpi	r24, 0x01	; 1
    1900:	f1 f4       	brne	.+60     	; 0x193e <KPD_Interface_Localuser+0x1b2>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is On");
    1902:	88 ea       	ldi	r24, 0xA8	; 168
    1904:	92 e0       	ldi	r25, 0x02	; 2
    1906:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    190a:	80 ec       	ldi	r24, 0xC0	; 192
    190c:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1910:	86 eb       	ldi	r24, 0xB6	; 182
    1912:	92 e0       	ldi	r25, 0x02	; 2
    1914:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1918:	04 c0       	rjmp	.+8      	; 0x1922 <KPD_Interface_Localuser+0x196>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    191a:	82 e6       	ldi	r24, 0x62	; 98
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    1922:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1926:	8f 3f       	cpi	r24, 0xFF	; 255
    1928:	c1 f3       	breq	.-16     	; 0x191a <KPD_Interface_Localuser+0x18e>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    192a:	81 33       	cpi	r24, 0x31	; 49
    192c:	29 f4       	brne	.+10     	; 0x1938 <KPD_Interface_Localuser+0x1ac>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
    192e:	41 e0       	ldi	r20, 0x01	; 1
    1930:	63 e0       	ldi	r22, 0x03	; 3
    1932:	83 e0       	ldi	r24, 0x03	; 3
    1934:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    Reset_AllKPDValues();
    1938:	0e 94 bc 0b 	call	0x1778	; 0x1778 <Reset_AllKPDValues>
					break;
    193c:	08 95       	ret
                }
                else if (led_status == 0)
    193e:	81 11       	cpse	r24, r1
    1940:	8f c2       	rjmp	.+1310   	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is OFF");
    1942:	87 ec       	ldi	r24, 0xC7	; 199
    1944:	92 e0       	ldi	r25, 0x02	; 2
    1946:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    194a:	80 ec       	ldi	r24, 0xC0	; 192
    194c:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    1950:	86 ed       	ldi	r24, 0xD6	; 214
    1952:	92 e0       	ldi	r25, 0x02	; 2
    1954:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1958:	04 c0       	rjmp	.+8      	; 0x1962 <KPD_Interface_Localuser+0x1d6>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    195a:	82 e6       	ldi	r24, 0x62	; 98
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 1 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    1962:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1966:	8f 3f       	cpi	r24, 0xFF	; 255
    1968:	c1 f3       	breq	.-16     	; 0x195a <KPD_Interface_Localuser+0x1ce>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    196a:	81 33       	cpi	r24, 0x31	; 49
    196c:	29 f4       	brne	.+10     	; 0x1978 <KPD_Interface_Localuser+0x1ec>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN3, LED_FORWARD_CONNECTION);
    196e:	41 e0       	ldi	r20, 0x01	; 1
    1970:	63 e0       	ldi	r22, 0x03	; 3
    1972:	83 e0       	ldi	r24, 0x03	; 3
    1974:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    Reset_AllKPDValues();
    1978:	0e 94 bc 0b 	call	0x1778	; 0x1778 <Reset_AllKPDValues>
    197c:	08 95       	ret
                }
                break;

            case ('2'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN4, &led_status);
    197e:	44 e7       	ldi	r20, 0x74	; 116
    1980:	54 e0       	ldi	r21, 0x04	; 4
    1982:	64 e0       	ldi	r22, 0x04	; 4
    1984:	83 e0       	ldi	r24, 0x03	; 3
    1986:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                LCD_voidClear();
    198a:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
                if (led_status == 1)
    198e:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    1992:	81 30       	cpi	r24, 0x01	; 1
    1994:	f9 f4       	brne	.+62     	; 0x19d4 <KPD_Interface_Localuser+0x248>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is On");
    1996:	86 ee       	ldi	r24, 0xE6	; 230
    1998:	92 e0       	ldi	r25, 0x02	; 2
    199a:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    199e:	80 ec       	ldi	r24, 0xC0	; 192
    19a0:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    19a4:	86 eb       	ldi	r24, 0xB6	; 182
    19a6:	92 e0       	ldi	r25, 0x02	; 2
    19a8:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    19ac:	04 c0       	rjmp	.+8      	; 0x19b6 <KPD_Interface_Localuser+0x22a>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    19ae:	82 e6       	ldi	r24, 0x62	; 98
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    19b6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    19ba:	8f 3f       	cpi	r24, 0xFF	; 255
    19bc:	c1 f3       	breq	.-16     	; 0x19ae <KPD_Interface_Localuser+0x222>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    19be:	81 33       	cpi	r24, 0x31	; 49
    19c0:	29 f4       	brne	.+10     	; 0x19cc <KPD_Interface_Localuser+0x240>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN4, LED_FORWARD_CONNECTION);
    19c2:	41 e0       	ldi	r20, 0x01	; 1
    19c4:	64 e0       	ldi	r22, 0x04	; 4
    19c6:	83 e0       	ldi	r24, 0x03	; 3
    19c8:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    19cc:	8f ef       	ldi	r24, 0xFF	; 255
    19ce:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    19d2:	08 95       	ret
                }
                else if (led_status == 0)
    19d4:	81 11       	cpse	r24, r1
    19d6:	44 c2       	rjmp	.+1160   	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is OFF");
    19d8:	84 ef       	ldi	r24, 0xF4	; 244
    19da:	92 e0       	ldi	r25, 0x02	; 2
    19dc:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    19e0:	80 ec       	ldi	r24, 0xC0	; 192
    19e2:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    19e6:	86 ed       	ldi	r24, 0xD6	; 214
    19e8:	92 e0       	ldi	r25, 0x02	; 2
    19ea:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    19ee:	04 c0       	rjmp	.+8      	; 0x19f8 <KPD_Interface_Localuser+0x26c>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    19f0:	82 e6       	ldi	r24, 0x62	; 98
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 2 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    19f8:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    19fc:	8f 3f       	cpi	r24, 0xFF	; 255
    19fe:	c1 f3       	breq	.-16     	; 0x19f0 <KPD_Interface_Localuser+0x264>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }
                    if (local_lightStatus == '1')
    1a00:	81 33       	cpi	r24, 0x31	; 49
    1a02:	29 f4       	brne	.+10     	; 0x1a0e <KPD_Interface_Localuser+0x282>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN4, LED_FORWARD_CONNECTION);
    1a04:	41 e0       	ldi	r20, 0x01	; 1
    1a06:	64 e0       	ldi	r22, 0x04	; 4
    1a08:	83 e0       	ldi	r24, 0x03	; 3
    1a0a:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1a0e:	8f ef       	ldi	r24, 0xFF	; 255
    1a10:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1a14:	08 95       	ret
                }
                break;

            case ('3'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN2, &led_status);
    1a16:	44 e7       	ldi	r20, 0x74	; 116
    1a18:	54 e0       	ldi	r21, 0x04	; 4
    1a1a:	62 e0       	ldi	r22, 0x02	; 2
    1a1c:	80 e0       	ldi	r24, 0x00	; 0
    1a1e:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                LCD_voidClear();
    1a22:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
                if (led_status == 1)
    1a26:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    1a2a:	81 30       	cpi	r24, 0x01	; 1
    1a2c:	f9 f4       	brne	.+62     	; 0x1a6c <KPD_Interface_Localuser+0x2e0>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is On");
    1a2e:	83 e0       	ldi	r24, 0x03	; 3
    1a30:	93 e0       	ldi	r25, 0x03	; 3
    1a32:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1a36:	80 ec       	ldi	r24, 0xC0	; 192
    1a38:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1a3c:	86 eb       	ldi	r24, 0xB6	; 182
    1a3e:	92 e0       	ldi	r25, 0x02	; 2
    1a40:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1a44:	04 c0       	rjmp	.+8      	; 0x1a4e <KPD_Interface_Localuser+0x2c2>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1a46:	82 e6       	ldi	r24, 0x62	; 98
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    1a4e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1a52:	8f 3f       	cpi	r24, 0xFF	; 255
    1a54:	c1 f3       	breq	.-16     	; 0x1a46 <KPD_Interface_Localuser+0x2ba>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1a56:	81 33       	cpi	r24, 0x31	; 49
    1a58:	29 f4       	brne	.+10     	; 0x1a64 <KPD_Interface_Localuser+0x2d8>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
    1a5a:	41 e0       	ldi	r20, 0x01	; 1
    1a5c:	62 e0       	ldi	r22, 0x02	; 2
    1a5e:	80 e0       	ldi	r24, 0x00	; 0
    1a60:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1a64:	8f ef       	ldi	r24, 0xFF	; 255
    1a66:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1a6a:	08 95       	ret
                }
                else if (led_status == 0)
    1a6c:	81 11       	cpse	r24, r1
    1a6e:	f8 c1       	rjmp	.+1008   	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is OFF");
    1a70:	81 e1       	ldi	r24, 0x11	; 17
    1a72:	93 e0       	ldi	r25, 0x03	; 3
    1a74:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1a78:	80 ec       	ldi	r24, 0xC0	; 192
    1a7a:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    1a7e:	86 ed       	ldi	r24, 0xD6	; 214
    1a80:	92 e0       	ldi	r25, 0x02	; 2
    1a82:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1a86:	04 c0       	rjmp	.+8      	; 0x1a90 <KPD_Interface_Localuser+0x304>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1a88:	82 e6       	ldi	r24, 0x62	; 98
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 3 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    1a90:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1a94:	8f 3f       	cpi	r24, 0xFF	; 255
    1a96:	c1 f3       	breq	.-16     	; 0x1a88 <KPD_Interface_Localuser+0x2fc>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1a98:	81 33       	cpi	r24, 0x31	; 49
    1a9a:	29 f4       	brne	.+10     	; 0x1aa6 <KPD_Interface_Localuser+0x31a>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN2, LED_FORWARD_CONNECTION);
    1a9c:	41 e0       	ldi	r20, 0x01	; 1
    1a9e:	62 e0       	ldi	r22, 0x02	; 2
    1aa0:	80 e0       	ldi	r24, 0x00	; 0
    1aa2:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1aa6:	8f ef       	ldi	r24, 0xFF	; 255
    1aa8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1aac:	08 95       	ret
                }
                break;

            case ('4'):

                DIO_voidGetPinValue(DIO_PORTA, DIO_PIN3, &led_status);
    1aae:	44 e7       	ldi	r20, 0x74	; 116
    1ab0:	54 e0       	ldi	r21, 0x04	; 4
    1ab2:	63 e0       	ldi	r22, 0x03	; 3
    1ab4:	80 e0       	ldi	r24, 0x00	; 0
    1ab6:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                LCD_voidClear();
    1aba:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
                if (led_status == 1)
    1abe:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    1ac2:	81 30       	cpi	r24, 0x01	; 1
    1ac4:	f9 f4       	brne	.+62     	; 0x1b04 <KPD_Interface_Localuser+0x378>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is On");
    1ac6:	80 e2       	ldi	r24, 0x20	; 32
    1ac8:	93 e0       	ldi	r25, 0x03	; 3
    1aca:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1ace:	80 ec       	ldi	r24, 0xC0	; 192
    1ad0:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1ad4:	86 eb       	ldi	r24, 0xB6	; 182
    1ad6:	92 e0       	ldi	r25, 0x02	; 2
    1ad8:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1adc:	04 c0       	rjmp	.+8      	; 0x1ae6 <KPD_Interface_Localuser+0x35a>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1ade:	82 e6       	ldi	r24, 0x62	; 98
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    1ae6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1aea:	8f 3f       	cpi	r24, 0xFF	; 255
    1aec:	c1 f3       	breq	.-16     	; 0x1ade <KPD_Interface_Localuser+0x352>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1aee:	81 33       	cpi	r24, 0x31	; 49
    1af0:	29 f4       	brne	.+10     	; 0x1afc <KPD_Interface_Localuser+0x370>
                    {
                        LED_voidOff(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
    1af2:	41 e0       	ldi	r20, 0x01	; 1
    1af4:	63 e0       	ldi	r22, 0x03	; 3
    1af6:	80 e0       	ldi	r24, 0x00	; 0
    1af8:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1afc:	8f ef       	ldi	r24, 0xFF	; 255
    1afe:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1b02:	08 95       	ret
                }
                else if (led_status == 0)
    1b04:	81 11       	cpse	r24, r1
    1b06:	ac c1       	rjmp	.+856    	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is OFF");
    1b08:	8e e2       	ldi	r24, 0x2E	; 46
    1b0a:	93 e0       	ldi	r25, 0x03	; 3
    1b0c:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1b10:	80 ec       	ldi	r24, 0xC0	; 192
    1b12:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    1b16:	86 ed       	ldi	r24, 0xD6	; 214
    1b18:	92 e0       	ldi	r25, 0x02	; 2
    1b1a:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1b1e:	04 c0       	rjmp	.+8      	; 0x1b28 <KPD_Interface_Localuser+0x39c>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1b20:	82 e6       	ldi	r24, 0x62	; 98
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 4 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    1b28:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1b2c:	8f 3f       	cpi	r24, 0xFF	; 255
    1b2e:	c1 f3       	breq	.-16     	; 0x1b20 <KPD_Interface_Localuser+0x394>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1b30:	81 33       	cpi	r24, 0x31	; 49
    1b32:	29 f4       	brne	.+10     	; 0x1b3e <KPD_Interface_Localuser+0x3b2>
                    {
                        LED_voidOn(DIO_PORTA, DIO_PIN3, LED_FORWARD_CONNECTION);
    1b34:	41 e0       	ldi	r20, 0x01	; 1
    1b36:	63 e0       	ldi	r22, 0x03	; 3
    1b38:	80 e0       	ldi	r24, 0x00	; 0
    1b3a:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1b3e:	8f ef       	ldi	r24, 0xFF	; 255
    1b40:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1b44:	08 95       	ret
                }
                break;

            case ('5'):

                DIO_voidGetPinValue(DIO_PORTD, DIO_PIN2, &led_status);
    1b46:	44 e7       	ldi	r20, 0x74	; 116
    1b48:	54 e0       	ldi	r21, 0x04	; 4
    1b4a:	62 e0       	ldi	r22, 0x02	; 2
    1b4c:	83 e0       	ldi	r24, 0x03	; 3
    1b4e:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
                LCD_voidClear();
    1b52:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
                if (led_status == 1)
    1b56:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    1b5a:	81 30       	cpi	r24, 0x01	; 1
    1b5c:	f9 f4       	brne	.+62     	; 0x1b9c <KPD_Interface_Localuser+0x410>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is On");
    1b5e:	8d e3       	ldi	r24, 0x3D	; 61
    1b60:	93 e0       	ldi	r25, 0x03	; 3
    1b62:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1b66:	80 ec       	ldi	r24, 0xC0	; 192
    1b68:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
    1b6c:	86 eb       	ldi	r24, 0xB6	; 182
    1b6e:	92 e0       	ldi	r25, 0x02	; 2
    1b70:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1b74:	04 c0       	rjmp	.+8      	; 0x1b7e <KPD_Interface_Localuser+0x3f2>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1b76:	82 e6       	ldi	r24, 0x62	; 98
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                if (led_status == 1)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is On");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It Off");
                    while (local_lightStatus == KPD_Not_Pressed)
    1b7e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1b82:	8f 3f       	cpi	r24, 0xFF	; 255
    1b84:	c1 f3       	breq	.-16     	; 0x1b76 <KPD_Interface_Localuser+0x3ea>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1b86:	81 33       	cpi	r24, 0x31	; 49
    1b88:	29 f4       	brne	.+10     	; 0x1b94 <KPD_Interface_Localuser+0x408>
                    {
                        LED_voidOff(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
    1b8a:	41 e0       	ldi	r20, 0x01	; 1
    1b8c:	62 e0       	ldi	r22, 0x02	; 2
    1b8e:	83 e0       	ldi	r24, 0x03	; 3
    1b90:	0e 94 c8 12 	call	0x2590	; 0x2590 <LED_voidOff>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1b94:	8f ef       	ldi	r24, 0xFF	; 255
    1b96:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1b9a:	08 95       	ret
                }
                else if (led_status == 0)
    1b9c:	81 11       	cpse	r24, r1
    1b9e:	60 c1       	rjmp	.+704    	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is OFF");
    1ba0:	8b e4       	ldi	r24, 0x4B	; 75
    1ba2:	93 e0       	ldi	r25, 0x03	; 3
    1ba4:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    LCD_voidSendCommand(Write_SecondLine);
    1ba8:	80 ec       	ldi	r24, 0xC0	; 192
    1baa:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
    1bae:	86 ed       	ldi	r24, 0xD6	; 214
    1bb0:	92 e0       	ldi	r25, 0x02	; 2
    1bb2:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
                    while (local_lightStatus == KPD_Not_Pressed)
    1bb6:	04 c0       	rjmp	.+8      	; 0x1bc0 <KPD_Interface_Localuser+0x434>
                    {
                        KPD_voidGetValue(&local_lightStatus);
    1bb8:	82 e6       	ldi	r24, 0x62	; 98
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
                else if (led_status == 0)
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 5 is OFF");
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1-To Turn It On");
                    while (local_lightStatus == KPD_Not_Pressed)
    1bc0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1bc4:	8f 3f       	cpi	r24, 0xFF	; 255
    1bc6:	c1 f3       	breq	.-16     	; 0x1bb8 <KPD_Interface_Localuser+0x42c>
                    {
                        KPD_voidGetValue(&local_lightStatus);
                    }

                    if (local_lightStatus == '1')
    1bc8:	81 33       	cpi	r24, 0x31	; 49
    1bca:	29 f4       	brne	.+10     	; 0x1bd6 <KPD_Interface_Localuser+0x44a>
                    {
                        LED_voidOn(DIO_PORTD, DIO_PIN2, LED_FORWARD_CONNECTION);
    1bcc:	41 e0       	ldi	r20, 0x01	; 1
    1bce:	62 e0       	ldi	r22, 0x02	; 2
    1bd0:	83 e0       	ldi	r24, 0x03	; 3
    1bd2:	0e 94 bb 12 	call	0x2576	; 0x2576 <LED_voidOn>
                    }
                    local_lightStatus = KPD_Not_Pressed;
    1bd6:	8f ef       	ldi	r24, 0xFF	; 255
    1bd8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <local_lightStatus>
    1bdc:	08 95       	ret
                
			// if the user choose light 6 (DIMMER LED)

            case ('6'):

                LCD_voidClear();
    1bde:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
				
                if (dimmer_brightness > 0)
    1be2:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    1be6:	88 23       	and	r24, r24
    1be8:	09 f4       	brne	.+2      	; 0x1bec <KPD_Interface_Localuser+0x460>
    1bea:	82 c0       	rjmp	.+260    	; 0x1cf0 <KPD_Interface_Localuser+0x564>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 6 is On");
    1bec:	8a e5       	ldi	r24, 0x5A	; 90
    1bee:	93 e0       	ldi	r25, 0x03	; 3
    1bf0:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
    1bf4:	2f ef       	ldi	r18, 0xFF	; 255
    1bf6:	83 ed       	ldi	r24, 0xD3	; 211
    1bf8:	90 e3       	ldi	r25, 0x30	; 48
    1bfa:	21 50       	subi	r18, 0x01	; 1
    1bfc:	80 40       	sbci	r24, 0x00	; 0
    1bfe:	90 40       	sbci	r25, 0x00	; 0
    1c00:	e1 f7       	brne	.-8      	; 0x1bfa <KPD_Interface_Localuser+0x46e>
    1c02:	00 c0       	rjmp	.+0      	; 0x1c04 <KPD_Interface_Localuser+0x478>
    1c04:	00 00       	nop
					_delay_ms(1000);
					LCD_voidClear();
    1c06:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
					LCD_voidDisplayString("Brightness:  %");
    1c0a:	84 e5       	ldi	r24, 0x54	; 84
    1c0c:	94 e0       	ldi	r25, 0x04	; 4
    1c0e:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1c12:	6d e0       	ldi	r22, 0x0D	; 13
    1c14:	81 e0       	ldi	r24, 0x01	; 1
    1c16:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
					LCD_voidDisplayNumber(dimmer_brightness);
    1c1a:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1c1e:	70 e0       	ldi	r23, 0x00	; 0
    1c20:	80 e0       	ldi	r24, 0x00	; 0
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
                    LCD_voidSendCommand(Write_SecondLine);
    1c28:	80 ec       	ldi	r24, 0xC0	; 192
    1c2a:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
    1c2e:	88 e7       	ldi	r24, 0x78	; 120
    1c30:	93 e0       	ldi	r25, 0x03	; 3
    1c32:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
					while (local_lightStatus == KPD_Not_Pressed)
    1c36:	56 c0       	rjmp	.+172    	; 0x1ce4 <KPD_Interface_Localuser+0x558>
					{
						KPD_voidGetValue(&local_lightStatus);
    1c38:	82 e6       	ldi	r24, 0x62	; 98
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
						if (local_lightStatus == '1')
    1c40:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1c44:	81 33       	cpi	r24, 0x31	; 49
    1c46:	59 f5       	brne	.+86     	; 0x1c9e <KPD_Interface_Localuser+0x512>
						{
							dimmer_brightness += 10;
    1c48:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1c4c:	66 5f       	subi	r22, 0xF6	; 246
    1c4e:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1c52:	70 e0       	ldi	r23, 0x00	; 0
    1c54:	80 e0       	ldi	r24, 0x00	; 0
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    1c5c:	ab 01       	movw	r20, r22
    1c5e:	bc 01       	movw	r22, r24
    1c60:	88 ee       	ldi	r24, 0xE8	; 232
    1c62:	93 e0       	ldi	r25, 0x03	; 3
    1c64:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1c68:	6d e0       	ldi	r22, 0x0D	; 13
    1c6a:	81 e0       	ldi	r24, 0x01	; 1
    1c6c:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1c70:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1c74:	70 e0       	ldi	r23, 0x00	; 0
    1c76:	80 e0       	ldi	r24, 0x00	; 0
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
							if (dimmer_brightness > 100)
    1c7e:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    1c82:	85 36       	cpi	r24, 0x65	; 101
    1c84:	78 f1       	brcs	.+94     	; 0x1ce4 <KPD_Interface_Localuser+0x558>
							{
								dimmer_brightness = 100;
    1c86:	84 e6       	ldi	r24, 0x64	; 100
    1c88:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1c8c:	40 e0       	ldi	r20, 0x00	; 0
    1c8e:	50 e0       	ldi	r21, 0x00	; 0
    1c90:	68 ec       	ldi	r22, 0xC8	; 200
    1c92:	72 e4       	ldi	r23, 0x42	; 66
    1c94:	88 ee       	ldi	r24, 0xE8	; 232
    1c96:	93 e0       	ldi	r25, 0x03	; 3
    1c98:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
    1c9c:	23 c0       	rjmp	.+70     	; 0x1ce4 <KPD_Interface_Localuser+0x558>
							}
						
							
						}
						else if (local_lightStatus == '2')
    1c9e:	82 33       	cpi	r24, 0x32	; 50
    1ca0:	e1 f4       	brne	.+56     	; 0x1cda <KPD_Interface_Localuser+0x54e>
						{
							dimmer_brightness -= 10;
    1ca2:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1ca6:	6a 50       	subi	r22, 0x0A	; 10
    1ca8:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1cac:	70 e0       	ldi	r23, 0x00	; 0
    1cae:	80 e0       	ldi	r24, 0x00	; 0
    1cb0:	90 e0       	ldi	r25, 0x00	; 0
    1cb2:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    1cb6:	ab 01       	movw	r20, r22
    1cb8:	bc 01       	movw	r22, r24
    1cba:	88 ee       	ldi	r24, 0xE8	; 232
    1cbc:	93 e0       	ldi	r25, 0x03	; 3
    1cbe:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1cc2:	6d e0       	ldi	r22, 0x0D	; 13
    1cc4:	81 e0       	ldi	r24, 0x01	; 1
    1cc6:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1cca:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1cce:	70 e0       	ldi	r23, 0x00	; 0
    1cd0:	80 e0       	ldi	r24, 0x00	; 0
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
    1cd8:	05 c0       	rjmp	.+10     	; 0x1ce4 <KPD_Interface_Localuser+0x558>
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
						}
						else if (local_lightStatus == '0')
    1cda:	80 33       	cpi	r24, 0x30	; 48
    1cdc:	19 f4       	brne	.+6      	; 0x1ce4 <KPD_Interface_Localuser+0x558>
						{
							LCD_voidClear();
    1cde:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
							break;
    1ce2:	08 95       	ret
					LCD_voidDisplayString("Brightness:  %");
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
					LCD_voidDisplayNumber(dimmer_brightness);
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
					while (local_lightStatus == KPD_Not_Pressed)
    1ce4:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1ce8:	8f 3f       	cpi	r24, 0xFF	; 255
    1cea:	09 f4       	brne	.+2      	; 0x1cee <KPD_Interface_Localuser+0x562>
    1cec:	a5 cf       	rjmp	.-182    	; 0x1c38 <KPD_Interface_Localuser+0x4ac>
    1cee:	08 95       	ret
						}						
						
					}
					
                }
                else if (led_status == 0)
    1cf0:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <led_status>
    1cf4:	81 11       	cpse	r24, r1
    1cf6:	b4 c0       	rjmp	.+360    	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
                {
                    LCD_voidDisplayStringDelay((u8 *)"Light 6 is OFF");
    1cf8:	88 e8       	ldi	r24, 0x88	; 136
    1cfa:	93 e0       	ldi	r25, 0x03	; 3
    1cfc:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
    1d00:	2f ef       	ldi	r18, 0xFF	; 255
    1d02:	83 ed       	ldi	r24, 0xD3	; 211
    1d04:	90 e3       	ldi	r25, 0x30	; 48
    1d06:	21 50       	subi	r18, 0x01	; 1
    1d08:	80 40       	sbci	r24, 0x00	; 0
    1d0a:	90 40       	sbci	r25, 0x00	; 0
    1d0c:	e1 f7       	brne	.-8      	; 0x1d06 <KPD_Interface_Localuser+0x57a>
    1d0e:	00 c0       	rjmp	.+0      	; 0x1d10 <KPD_Interface_Localuser+0x584>
    1d10:	00 00       	nop
					_delay_ms(1000);
                    LCD_voidClear();
    1d12:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
					LCD_voidDisplayString("Brightness:  %");
    1d16:	84 e5       	ldi	r24, 0x54	; 84
    1d18:	94 e0       	ldi	r25, 0x04	; 4
    1d1a:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1d1e:	6d e0       	ldi	r22, 0x0D	; 13
    1d20:	81 e0       	ldi	r24, 0x01	; 1
    1d22:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
					LCD_voidDisplayNumber(dimmer_brightness);
    1d26:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1d2a:	70 e0       	ldi	r23, 0x00	; 0
    1d2c:	80 e0       	ldi	r24, 0x00	; 0
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
                    LCD_voidSendCommand(Write_SecondLine);
    1d34:	80 ec       	ldi	r24, 0xC0	; 192
    1d36:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
    1d3a:	88 e7       	ldi	r24, 0x78	; 120
    1d3c:	93 e0       	ldi	r25, 0x03	; 3
    1d3e:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
					while (local_lightStatus == KPD_Not_Pressed)
    1d42:	56 c0       	rjmp	.+172    	; 0x1df0 <KPD_Interface_Localuser+0x664>
					{
						KPD_voidGetValue(&local_lightStatus);
    1d44:	82 e6       	ldi	r24, 0x62	; 98
    1d46:	90 e0       	ldi	r25, 0x00	; 0
    1d48:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
						if (local_lightStatus == '1')
    1d4c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1d50:	81 33       	cpi	r24, 0x31	; 49
    1d52:	59 f5       	brne	.+86     	; 0x1daa <KPD_Interface_Localuser+0x61e>
						{
							dimmer_brightness += 10;
    1d54:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1d58:	66 5f       	subi	r22, 0xF6	; 246
    1d5a:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1d5e:	70 e0       	ldi	r23, 0x00	; 0
    1d60:	80 e0       	ldi	r24, 0x00	; 0
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    1d68:	ab 01       	movw	r20, r22
    1d6a:	bc 01       	movw	r22, r24
    1d6c:	88 ee       	ldi	r24, 0xE8	; 232
    1d6e:	93 e0       	ldi	r25, 0x03	; 3
    1d70:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1d74:	6d e0       	ldi	r22, 0x0D	; 13
    1d76:	81 e0       	ldi	r24, 0x01	; 1
    1d78:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1d7c:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1d80:	70 e0       	ldi	r23, 0x00	; 0
    1d82:	80 e0       	ldi	r24, 0x00	; 0
    1d84:	90 e0       	ldi	r25, 0x00	; 0
    1d86:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
							if (dimmer_brightness > 100)
    1d8a:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <dimmer_brightness>
    1d8e:	85 36       	cpi	r24, 0x65	; 101
    1d90:	78 f1       	brcs	.+94     	; 0x1df0 <KPD_Interface_Localuser+0x664>
							{
								dimmer_brightness = 100;
    1d92:	84 e6       	ldi	r24, 0x64	; 100
    1d94:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <dimmer_brightness>
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1d98:	40 e0       	ldi	r20, 0x00	; 0
    1d9a:	50 e0       	ldi	r21, 0x00	; 0
    1d9c:	68 ec       	ldi	r22, 0xC8	; 200
    1d9e:	72 e4       	ldi	r23, 0x42	; 66
    1da0:	88 ee       	ldi	r24, 0xE8	; 232
    1da2:	93 e0       	ldi	r25, 0x03	; 3
    1da4:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
    1da8:	23 c0       	rjmp	.+70     	; 0x1df0 <KPD_Interface_Localuser+0x664>
							}
						
							
						}
						else if (local_lightStatus == '2')
    1daa:	82 33       	cpi	r24, 0x32	; 50
    1dac:	e1 f4       	brne	.+56     	; 0x1de6 <KPD_Interface_Localuser+0x65a>
						{
							dimmer_brightness -= 10;
    1dae:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1db2:	6a 50       	subi	r22, 0x0A	; 10
    1db4:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <dimmer_brightness>
							PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
    1db8:	70 e0       	ldi	r23, 0x00	; 0
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    1dc2:	ab 01       	movw	r20, r22
    1dc4:	bc 01       	movw	r22, r24
    1dc6:	88 ee       	ldi	r24, 0xE8	; 232
    1dc8:	93 e0       	ldi	r25, 0x03	; 3
    1dca:	0e 94 04 15 	call	0x2a08	; 0x2a08 <PWM_voidGenerateChannel_1A>
							LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
    1dce:	6d e0       	ldi	r22, 0x0D	; 13
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
							LCD_voidDisplayNumber(dimmer_brightness);
    1dd6:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <dimmer_brightness>
    1dda:	70 e0       	ldi	r23, 0x00	; 0
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
    1de4:	05 c0       	rjmp	.+10     	; 0x1df0 <KPD_Interface_Localuser+0x664>
							{
								dimmer_brightness = 0;
								PWM_voidGenerateChannel_1A(1000, dimmer_brightness);
							}
						}
						else if (local_lightStatus == '0')
    1de6:	80 33       	cpi	r24, 0x30	; 48
    1de8:	19 f4       	brne	.+6      	; 0x1df0 <KPD_Interface_Localuser+0x664>
						{
							LCD_voidClear();
    1dea:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
							break;
    1dee:	08 95       	ret
					LCD_voidDisplayString("Brightness:  %");
					LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,13);
					LCD_voidDisplayNumber(dimmer_brightness);
                    LCD_voidSendCommand(Write_SecondLine);
                    LCD_voidDisplayStringDelay((u8 *)"1)+10 2)-10 0)H");
					while (local_lightStatus == KPD_Not_Pressed)
    1df0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <local_lightStatus>
    1df4:	8f 3f       	cpi	r24, 0xFF	; 255
    1df6:	09 f4       	brne	.+2      	; 0x1dfa <KPD_Interface_Localuser+0x66e>
    1df8:	a5 cf       	rjmp	.-182    	; 0x1d44 <KPD_Interface_Localuser+0x5b8>
    1dfa:	08 95       	ret
            }
			break;

			case ('3'):
			
				LCD_voidClear();
    1dfc:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
				ADC_voidGetDigitalValue(ADC_CHANNEL_0, &local_temp);
    1e00:	62 e7       	ldi	r22, 0x72	; 114
    1e02:	74 e0       	ldi	r23, 0x04	; 4
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	0e 94 4c 13 	call	0x2698	; 0x2698 <ADC_voidGetDigitalValue>
				LCD_voidSendCommand(Write_FirstLine);
    1e0a:	80 e8       	ldi	r24, 0x80	; 128
    1e0c:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
				LCD_voidDisplayString((u8 *)"Room Temp:  c");
    1e10:	86 e4       	ldi	r24, 0x46	; 70
    1e12:	94 e0       	ldi	r25, 0x04	; 4
    1e14:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
				LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,11);
    1e18:	6b e0       	ldi	r22, 0x0B	; 11
    1e1a:	81 e0       	ldi	r24, 0x01	; 1
    1e1c:	0e 94 9c 12 	call	0x2538	; 0x2538 <LCD_voidGoTOSpecificPosition>
				LCD_voidDisplayNumber(local_temp);
    1e20:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <__data_end>
    1e24:	70 e0       	ldi	r23, 0x00	; 0
    1e26:	80 e0       	ldi	r24, 0x00	; 0
    1e28:	90 e0       	ldi	r25, 0x00	; 0
    1e2a:	0e 94 18 12 	call	0x2430	; 0x2430 <LCD_voidDisplayNumber>
				LCD_voidDisplayChar('c');
    1e2e:	83 e6       	ldi	r24, 0x63	; 99
    1e30:	0e 94 ad 11 	call	0x235a	; 0x235a <LCD_voidDisplayChar>
				LCD_voidSendCommand(Write_SecondLine);
    1e34:	80 ec       	ldi	r24, 0xC0	; 192
    1e36:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
				LCD_voidDisplayStringDelay((u8 *)"0-go to home");
    1e3a:	8e e7       	ldi	r24, 0x7E	; 126
    1e3c:	92 e0       	ldi	r25, 0x02	; 2
    1e3e:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <LCD_voidDisplayStringDelay>
				while(local_KPDIdleValue==KPD_Not_Pressed)
    1e42:	06 c0       	rjmp	.+12     	; 0x1e50 <KPD_Interface_Localuser+0x6c4>
				{
					KPD_voidGetValue(&local_KPDIdleValue);
    1e44:	81 e6       	ldi	r24, 0x61	; 97
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	0e 94 31 10 	call	0x2062	; 0x2062 <KPD_voidGetValue>
					Display_temp();
    1e4c:	0e 94 85 0b 	call	0x170a	; 0x170a <Display_temp>
				LCD_voidGoTOSpecificPosition(LCD_LINE_ONE,11);
				LCD_voidDisplayNumber(local_temp);
				LCD_voidDisplayChar('c');
				LCD_voidSendCommand(Write_SecondLine);
				LCD_voidDisplayStringDelay((u8 *)"0-go to home");
				while(local_KPDIdleValue==KPD_Not_Pressed)
    1e50:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <local_KPDIdleValue>
    1e54:	8f 3f       	cpi	r24, 0xFF	; 255
    1e56:	b1 f3       	breq	.-20     	; 0x1e44 <KPD_Interface_Localuser+0x6b8>
				{
					KPD_voidGetValue(&local_KPDIdleValue);
					Display_temp();
				}	
				if (local_KPDIdleValue=='0')
    1e58:	80 33       	cpi	r24, 0x30	; 48
    1e5a:	11 f4       	brne	.+4      	; 0x1e60 <KPD_Interface_Localuser+0x6d4>
				{
					LCD_voidClear();
    1e5c:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <LCD_voidClear>
    1e60:	08 95       	ret

00001e62 <BL_voidInit>:
	
}

BL_voidRxCharWithTimeout(u8* copy_pu8BlRxData)
{
	 UART_voidRxCharWithTimeout(copy_pu8BlRxData);
    1e62:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <UART_voidInit>
    1e66:	08 95       	ret

00001e68 <BL_voidTxChar>:
    1e68:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <UART_voidTxChar>
    1e6c:	08 95       	ret

00001e6e <BL_voidRxChar>:
    1e6e:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <UART_voidRxChar>
    1e72:	08 95       	ret

00001e74 <BL_voidTxString>:
}

void BL_voidTxString(u8* copy_pu8BlTxString)
{
	UART_voidTxString(copy_pu8BlTxString);
    1e74:	0e 94 96 17 	call	0x2f2c	; 0x2f2c <UART_voidTxString>
    1e78:	08 95       	ret

00001e7a <BUZZER_voidInit>:
    1e7a:	41 e0       	ldi	r20, 0x01	; 1
    1e7c:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    1e80:	08 95       	ret

00001e82 <BUZZER_voidOn>:
    1e82:	41 e0       	ldi	r20, 0x01	; 1
    1e84:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    1e88:	08 95       	ret

00001e8a <BUZZER_voidOff>:
    1e8a:	40 e0       	ldi	r20, 0x00	; 0
    1e8c:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    1e90:	08 95       	ret

00001e92 <EEPROM_voidInit>:
    1e92:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <TWI_voidInitMaster>
    1e96:	08 95       	ret

00001e98 <EEPROM_voidWriteByte>:
    1e98:	1f 93       	push	r17
    1e9a:	cf 93       	push	r28
    1e9c:	df 93       	push	r29
    1e9e:	d8 2f       	mov	r29, r24
    1ea0:	c6 2f       	mov	r28, r22
    1ea2:	19 2f       	mov	r17, r25
    1ea4:	10 65       	ori	r17, 0x50	; 80
    1ea6:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <TWI_voidSendStartCondition>
    1eaa:	81 2f       	mov	r24, r17
    1eac:	0e 94 1d 17 	call	0x2e3a	; 0x2e3a <TWI_voidSendSlaveAddWithWrite>
    1eb0:	8d 2f       	mov	r24, r29
    1eb2:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <TWI_voidTransmitMasterDataByte>
    1eb6:	8c 2f       	mov	r24, r28
    1eb8:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <TWI_voidTransmitMasterDataByte>
    1ebc:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <TWI_voidSendStopCondition>
    1ec0:	8f e1       	ldi	r24, 0x1F	; 31
    1ec2:	9e e4       	ldi	r25, 0x4E	; 78
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	f1 f7       	brne	.-4      	; 0x1ec4 <EEPROM_voidWriteByte+0x2c>
    1ec8:	00 c0       	rjmp	.+0      	; 0x1eca <EEPROM_voidWriteByte+0x32>
    1eca:	00 00       	nop
    1ecc:	df 91       	pop	r29
    1ece:	cf 91       	pop	r28
    1ed0:	1f 91       	pop	r17
    1ed2:	08 95       	ret

00001ed4 <EEPROM_voidWritePage>:
    1ed4:	0f 93       	push	r16
    1ed6:	1f 93       	push	r17
    1ed8:	cf 93       	push	r28
    1eda:	df 93       	push	r29
    1edc:	61 15       	cp	r22, r1
    1ede:	71 05       	cpc	r23, r1
    1ee0:	f9 f0       	breq	.+62     	; 0x1f20 <EEPROM_voidWritePage+0x4c>
    1ee2:	8b 01       	movw	r16, r22
    1ee4:	d8 2f       	mov	r29, r24
    1ee6:	c9 2f       	mov	r28, r25
    1ee8:	c0 65       	ori	r28, 0x50	; 80
    1eea:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <TWI_voidSendStartCondition>
    1eee:	8c 2f       	mov	r24, r28
    1ef0:	0e 94 1d 17 	call	0x2e3a	; 0x2e3a <TWI_voidSendSlaveAddWithWrite>
    1ef4:	8d 2f       	mov	r24, r29
    1ef6:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <TWI_voidTransmitMasterDataByte>
    1efa:	c0 e0       	ldi	r28, 0x00	; 0
    1efc:	07 c0       	rjmp	.+14     	; 0x1f0c <EEPROM_voidWritePage+0x38>
    1efe:	f8 01       	movw	r30, r16
    1f00:	ec 0f       	add	r30, r28
    1f02:	f1 1d       	adc	r31, r1
    1f04:	80 81       	ld	r24, Z
    1f06:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <TWI_voidTransmitMasterDataByte>
    1f0a:	cf 5f       	subi	r28, 0xFF	; 255
    1f0c:	c8 30       	cpi	r28, 0x08	; 8
    1f0e:	b8 f3       	brcs	.-18     	; 0x1efe <EEPROM_voidWritePage+0x2a>
    1f10:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <TWI_voidSendStopCondition>
    1f14:	8f e1       	ldi	r24, 0x1F	; 31
    1f16:	9e e4       	ldi	r25, 0x4E	; 78
    1f18:	01 97       	sbiw	r24, 0x01	; 1
    1f1a:	f1 f7       	brne	.-4      	; 0x1f18 <EEPROM_voidWritePage+0x44>
    1f1c:	00 c0       	rjmp	.+0      	; 0x1f1e <EEPROM_voidWritePage+0x4a>
    1f1e:	00 00       	nop
    1f20:	df 91       	pop	r29
    1f22:	cf 91       	pop	r28
    1f24:	1f 91       	pop	r17
    1f26:	0f 91       	pop	r16
    1f28:	08 95       	ret

00001f2a <EEPROM_voidReadByte>:
    1f2a:	0f 93       	push	r16
    1f2c:	1f 93       	push	r17
    1f2e:	cf 93       	push	r28
    1f30:	df 93       	push	r29
    1f32:	61 15       	cp	r22, r1
    1f34:	71 05       	cpc	r23, r1
    1f36:	e1 f0       	breq	.+56     	; 0x1f70 <EEPROM_voidReadByte+0x46>
    1f38:	8b 01       	movw	r16, r22
    1f3a:	d8 2f       	mov	r29, r24
    1f3c:	c9 2f       	mov	r28, r25
    1f3e:	c0 65       	ori	r28, 0x50	; 80
    1f40:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <TWI_voidSendStartCondition>
    1f44:	8c 2f       	mov	r24, r28
    1f46:	0e 94 1d 17 	call	0x2e3a	; 0x2e3a <TWI_voidSendSlaveAddWithWrite>
    1f4a:	8d 2f       	mov	r24, r29
    1f4c:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <TWI_voidTransmitMasterDataByte>
    1f50:	0e 94 08 17 	call	0x2e10	; 0x2e10 <TWI_voidSendRepeatedStartCondition>
    1f54:	8c 2f       	mov	r24, r28
    1f56:	0e 94 32 17 	call	0x2e64	; 0x2e64 <TWI_voidSendSlaveAddWithRead>
    1f5a:	c8 01       	movw	r24, r16
    1f5c:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <TWI_voidRecieveMasterDataByteWithNAch>
    1f60:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <TWI_voidSendStopCondition>
    1f64:	8f e1       	ldi	r24, 0x1F	; 31
    1f66:	9e e4       	ldi	r25, 0x4E	; 78
    1f68:	01 97       	sbiw	r24, 0x01	; 1
    1f6a:	f1 f7       	brne	.-4      	; 0x1f68 <EEPROM_voidReadByte+0x3e>
    1f6c:	00 c0       	rjmp	.+0      	; 0x1f6e <EEPROM_voidReadByte+0x44>
    1f6e:	00 00       	nop
    1f70:	df 91       	pop	r29
    1f72:	cf 91       	pop	r28
    1f74:	1f 91       	pop	r17
    1f76:	0f 91       	pop	r16
    1f78:	08 95       	ret

00001f7a <EEPROM_voidSequentialRead>:
    1f7a:	ef 92       	push	r14
    1f7c:	ff 92       	push	r15
    1f7e:	0f 93       	push	r16
    1f80:	1f 93       	push	r17
    1f82:	cf 93       	push	r28
    1f84:	df 93       	push	r29
    1f86:	41 15       	cp	r20, r1
    1f88:	51 05       	cpc	r21, r1
    1f8a:	81 f1       	breq	.+96     	; 0x1fec <EEPROM_voidSequentialRead+0x72>
    1f8c:	61 15       	cp	r22, r1
    1f8e:	22 e0       	ldi	r18, 0x02	; 2
    1f90:	72 07       	cpc	r23, r18
    1f92:	60 f5       	brcc	.+88     	; 0x1fec <EEPROM_voidSequentialRead+0x72>
    1f94:	8a 01       	movw	r16, r20
    1f96:	7b 01       	movw	r14, r22
    1f98:	d8 2f       	mov	r29, r24
    1f9a:	c9 2f       	mov	r28, r25
    1f9c:	c0 65       	ori	r28, 0x50	; 80
    1f9e:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <TWI_voidSendStartCondition>
    1fa2:	8c 2f       	mov	r24, r28
    1fa4:	0e 94 1d 17 	call	0x2e3a	; 0x2e3a <TWI_voidSendSlaveAddWithWrite>
    1fa8:	8d 2f       	mov	r24, r29
    1faa:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <TWI_voidTransmitMasterDataByte>
    1fae:	0e 94 08 17 	call	0x2e10	; 0x2e10 <TWI_voidSendRepeatedStartCondition>
    1fb2:	8c 2f       	mov	r24, r28
    1fb4:	0e 94 32 17 	call	0x2e64	; 0x2e64 <TWI_voidSendSlaveAddWithRead>
    1fb8:	c0 e0       	ldi	r28, 0x00	; 0
    1fba:	d0 e0       	ldi	r29, 0x00	; 0
    1fbc:	06 c0       	rjmp	.+12     	; 0x1fca <EEPROM_voidSequentialRead+0x50>
    1fbe:	c8 01       	movw	r24, r16
    1fc0:	8c 0f       	add	r24, r28
    1fc2:	9d 1f       	adc	r25, r29
    1fc4:	0e 94 53 17 	call	0x2ea6	; 0x2ea6 <TWI_voidRecieveMasterDataByteWithAch>
    1fc8:	21 96       	adiw	r28, 0x01	; 1
    1fca:	c7 01       	movw	r24, r14
    1fcc:	01 97       	sbiw	r24, 0x01	; 1
    1fce:	c8 17       	cp	r28, r24
    1fd0:	d9 07       	cpc	r29, r25
    1fd2:	a8 f3       	brcs	.-22     	; 0x1fbe <EEPROM_voidSequentialRead+0x44>
    1fd4:	80 0f       	add	r24, r16
    1fd6:	91 1f       	adc	r25, r17
    1fd8:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <TWI_voidRecieveMasterDataByteWithNAch>
    1fdc:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <TWI_voidSendStopCondition>
    1fe0:	8f e1       	ldi	r24, 0x1F	; 31
    1fe2:	9e e4       	ldi	r25, 0x4E	; 78
    1fe4:	01 97       	sbiw	r24, 0x01	; 1
    1fe6:	f1 f7       	brne	.-4      	; 0x1fe4 <EEPROM_voidSequentialRead+0x6a>
    1fe8:	00 c0       	rjmp	.+0      	; 0x1fea <EEPROM_voidSequentialRead+0x70>
    1fea:	00 00       	nop
    1fec:	df 91       	pop	r29
    1fee:	cf 91       	pop	r28
    1ff0:	1f 91       	pop	r17
    1ff2:	0f 91       	pop	r16
    1ff4:	ff 90       	pop	r15
    1ff6:	ef 90       	pop	r14
    1ff8:	08 95       	ret

00001ffa <KPD_voidInit>:
    1ffa:	41 e0       	ldi	r20, 0x01	; 1
    1ffc:	64 e0       	ldi	r22, 0x04	; 4
    1ffe:	81 e0       	ldi	r24, 0x01	; 1
    2000:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    2004:	41 e0       	ldi	r20, 0x01	; 1
    2006:	65 e0       	ldi	r22, 0x05	; 5
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    200e:	41 e0       	ldi	r20, 0x01	; 1
    2010:	66 e0       	ldi	r22, 0x06	; 6
    2012:	81 e0       	ldi	r24, 0x01	; 1
    2014:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    2018:	40 e0       	ldi	r20, 0x00	; 0
    201a:	63 e0       	ldi	r22, 0x03	; 3
    201c:	82 e0       	ldi	r24, 0x02	; 2
    201e:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    2022:	40 e0       	ldi	r20, 0x00	; 0
    2024:	64 e0       	ldi	r22, 0x04	; 4
    2026:	82 e0       	ldi	r24, 0x02	; 2
    2028:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    202c:	40 e0       	ldi	r20, 0x00	; 0
    202e:	65 e0       	ldi	r22, 0x05	; 5
    2030:	82 e0       	ldi	r24, 0x02	; 2
    2032:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    2036:	40 e0       	ldi	r20, 0x00	; 0
    2038:	66 e0       	ldi	r22, 0x06	; 6
    203a:	82 e0       	ldi	r24, 0x02	; 2
    203c:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    2040:	63 e0       	ldi	r22, 0x03	; 3
    2042:	82 e0       	ldi	r24, 0x02	; 2
    2044:	0e 94 a2 14 	call	0x2944	; 0x2944 <DIO_voidActivePinInPullUpResistance>
    2048:	64 e0       	ldi	r22, 0x04	; 4
    204a:	82 e0       	ldi	r24, 0x02	; 2
    204c:	0e 94 a2 14 	call	0x2944	; 0x2944 <DIO_voidActivePinInPullUpResistance>
    2050:	65 e0       	ldi	r22, 0x05	; 5
    2052:	82 e0       	ldi	r24, 0x02	; 2
    2054:	0e 94 a2 14 	call	0x2944	; 0x2944 <DIO_voidActivePinInPullUpResistance>
    2058:	66 e0       	ldi	r22, 0x06	; 6
    205a:	82 e0       	ldi	r24, 0x02	; 2
    205c:	0e 94 a2 14 	call	0x2944	; 0x2944 <DIO_voidActivePinInPullUpResistance>
    2060:	08 95       	ret

00002062 <KPD_voidGetValue>:
    2062:	6f 92       	push	r6
    2064:	7f 92       	push	r7
    2066:	8f 92       	push	r8
    2068:	9f 92       	push	r9
    206a:	af 92       	push	r10
    206c:	bf 92       	push	r11
    206e:	cf 92       	push	r12
    2070:	df 92       	push	r13
    2072:	ef 92       	push	r14
    2074:	ff 92       	push	r15
    2076:	0f 93       	push	r16
    2078:	1f 93       	push	r17
    207a:	cf 93       	push	r28
    207c:	df 93       	push	r29
    207e:	cd b7       	in	r28, 0x3d	; 61
    2080:	de b7       	in	r29, 0x3e	; 62
    2082:	6b 97       	sbiw	r28, 0x1b	; 27
    2084:	0f b6       	in	r0, 0x3f	; 63
    2086:	f8 94       	cli
    2088:	de bf       	out	0x3e, r29	; 62
    208a:	0f be       	out	0x3f, r0	; 63
    208c:	cd bf       	out	0x3d, r28	; 61
    208e:	00 97       	sbiw	r24, 0x00	; 0
    2090:	09 f4       	brne	.+2      	; 0x2094 <KPD_voidGetValue+0x32>
    2092:	7e c0       	rjmp	.+252    	; 0x2190 <KPD_voidGetValue+0x12e>
    2094:	5c 01       	movw	r10, r24
    2096:	81 e0       	ldi	r24, 0x01	; 1
    2098:	88 8f       	std	Y+24, r24	; 0x18
    209a:	89 8f       	std	Y+25, r24	; 0x19
    209c:	8a 8f       	std	Y+26, r24	; 0x1a
    209e:	34 e0       	ldi	r19, 0x04	; 4
    20a0:	3d 8b       	std	Y+21, r19	; 0x15
    20a2:	25 e0       	ldi	r18, 0x05	; 5
    20a4:	2e 8b       	std	Y+22, r18	; 0x16
    20a6:	96 e0       	ldi	r25, 0x06	; 6
    20a8:	9f 8b       	std	Y+23, r25	; 0x17
    20aa:	82 e0       	ldi	r24, 0x02	; 2
    20ac:	89 8b       	std	Y+17, r24	; 0x11
    20ae:	8a 8b       	std	Y+18, r24	; 0x12
    20b0:	8b 8b       	std	Y+19, r24	; 0x13
    20b2:	8c 8b       	std	Y+20, r24	; 0x14
    20b4:	83 e0       	ldi	r24, 0x03	; 3
    20b6:	8d 87       	std	Y+13, r24	; 0x0d
    20b8:	3e 87       	std	Y+14, r19	; 0x0e
    20ba:	2f 87       	std	Y+15, r18	; 0x0f
    20bc:	98 8b       	std	Y+16, r25	; 0x10
    20be:	8c e0       	ldi	r24, 0x0C	; 12
    20c0:	e7 e6       	ldi	r30, 0x67	; 103
    20c2:	f0 e0       	ldi	r31, 0x00	; 0
    20c4:	de 01       	movw	r26, r28
    20c6:	11 96       	adiw	r26, 0x01	; 1
    20c8:	01 90       	ld	r0, Z+
    20ca:	0d 92       	st	X+, r0
    20cc:	8a 95       	dec	r24
    20ce:	e1 f7       	brne	.-8      	; 0x20c8 <KPD_voidGetValue+0x66>
    20d0:	8f ef       	ldi	r24, 0xFF	; 255
    20d2:	f5 01       	movw	r30, r10
    20d4:	80 83       	st	Z, r24
    20d6:	81 2c       	mov	r8, r1
    20d8:	57 c0       	rjmp	.+174    	; 0x2188 <KPD_voidGetValue+0x126>
    20da:	c8 2c       	mov	r12, r8
    20dc:	d1 2c       	mov	r13, r1
    20de:	e5 e1       	ldi	r30, 0x15	; 21
    20e0:	f0 e0       	ldi	r31, 0x00	; 0
    20e2:	ec 0f       	add	r30, r28
    20e4:	fd 1f       	adc	r31, r29
    20e6:	ec 0d       	add	r30, r12
    20e8:	fd 1d       	adc	r31, r13
    20ea:	60 80       	ld	r6, Z
    20ec:	e8 e1       	ldi	r30, 0x18	; 24
    20ee:	f0 e0       	ldi	r31, 0x00	; 0
    20f0:	ec 0f       	add	r30, r28
    20f2:	fd 1f       	adc	r31, r29
    20f4:	ec 0d       	add	r30, r12
    20f6:	fd 1d       	adc	r31, r13
    20f8:	70 80       	ld	r7, Z
    20fa:	40 e0       	ldi	r20, 0x00	; 0
    20fc:	66 2d       	mov	r22, r6
    20fe:	87 2d       	mov	r24, r7
    2100:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2104:	10 e0       	ldi	r17, 0x00	; 0
    2106:	38 c0       	rjmp	.+112    	; 0x2178 <KPD_voidGetValue+0x116>
    2108:	e1 2e       	mov	r14, r17
    210a:	f1 2c       	mov	r15, r1
    210c:	ed e0       	ldi	r30, 0x0D	; 13
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	ec 0f       	add	r30, r28
    2112:	fd 1f       	adc	r31, r29
    2114:	ee 0d       	add	r30, r14
    2116:	ff 1d       	adc	r31, r15
    2118:	00 81       	ld	r16, Z
    211a:	e1 e1       	ldi	r30, 0x11	; 17
    211c:	f0 e0       	ldi	r31, 0x00	; 0
    211e:	ec 0f       	add	r30, r28
    2120:	fd 1f       	adc	r31, r29
    2122:	ee 0d       	add	r30, r14
    2124:	ff 1d       	adc	r31, r15
    2126:	90 80       	ld	r9, Z
    2128:	ae 01       	movw	r20, r28
    212a:	45 5e       	subi	r20, 0xE5	; 229
    212c:	5f 4f       	sbci	r21, 0xFF	; 255
    212e:	60 2f       	mov	r22, r16
    2130:	89 2d       	mov	r24, r9
    2132:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
    2136:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2138:	81 11       	cpse	r24, r1
    213a:	1d c0       	rjmp	.+58     	; 0x2176 <KPD_voidGetValue+0x114>
    213c:	07 c0       	rjmp	.+14     	; 0x214c <KPD_voidGetValue+0xea>
    213e:	ae 01       	movw	r20, r28
    2140:	45 5e       	subi	r20, 0xE5	; 229
    2142:	5f 4f       	sbci	r21, 0xFF	; 255
    2144:	60 2f       	mov	r22, r16
    2146:	89 2d       	mov	r24, r9
    2148:	0e 94 67 14 	call	0x28ce	; 0x28ce <DIO_voidGetPinValue>
    214c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    214e:	88 23       	and	r24, r24
    2150:	b1 f3       	breq	.-20     	; 0x213e <KPD_voidGetValue+0xdc>
    2152:	c7 01       	movw	r24, r14
    2154:	88 0f       	add	r24, r24
    2156:	99 1f       	adc	r25, r25
    2158:	e8 0e       	add	r14, r24
    215a:	f9 1e       	adc	r15, r25
    215c:	81 e0       	ldi	r24, 0x01	; 1
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	8c 0f       	add	r24, r28
    2162:	9d 1f       	adc	r25, r29
    2164:	e8 0e       	add	r14, r24
    2166:	f9 1e       	adc	r15, r25
    2168:	f7 01       	movw	r30, r14
    216a:	ec 0d       	add	r30, r12
    216c:	fd 1d       	adc	r31, r13
    216e:	80 81       	ld	r24, Z
    2170:	f5 01       	movw	r30, r10
    2172:	80 83       	st	Z, r24
    2174:	0d c0       	rjmp	.+26     	; 0x2190 <KPD_voidGetValue+0x12e>
    2176:	1f 5f       	subi	r17, 0xFF	; 255
    2178:	14 30       	cpi	r17, 0x04	; 4
    217a:	30 f2       	brcs	.-116    	; 0x2108 <KPD_voidGetValue+0xa6>
    217c:	41 e0       	ldi	r20, 0x01	; 1
    217e:	66 2d       	mov	r22, r6
    2180:	87 2d       	mov	r24, r7
    2182:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2186:	83 94       	inc	r8
    2188:	f2 e0       	ldi	r31, 0x02	; 2
    218a:	f8 15       	cp	r31, r8
    218c:	08 f0       	brcs	.+2      	; 0x2190 <KPD_voidGetValue+0x12e>
    218e:	a5 cf       	rjmp	.-182    	; 0x20da <KPD_voidGetValue+0x78>
    2190:	6b 96       	adiw	r28, 0x1b	; 27
    2192:	0f b6       	in	r0, 0x3f	; 63
    2194:	f8 94       	cli
    2196:	de bf       	out	0x3e, r29	; 62
    2198:	0f be       	out	0x3f, r0	; 63
    219a:	cd bf       	out	0x3d, r28	; 61
    219c:	df 91       	pop	r29
    219e:	cf 91       	pop	r28
    21a0:	1f 91       	pop	r17
    21a2:	0f 91       	pop	r16
    21a4:	ff 90       	pop	r15
    21a6:	ef 90       	pop	r14
    21a8:	df 90       	pop	r13
    21aa:	cf 90       	pop	r12
    21ac:	bf 90       	pop	r11
    21ae:	af 90       	pop	r10
    21b0:	9f 90       	pop	r9
    21b2:	8f 90       	pop	r8
    21b4:	7f 90       	pop	r7
    21b6:	6f 90       	pop	r6
    21b8:	08 95       	ret

000021ba <PRV_voidWriteHalfPort>:
    21ba:	cf 93       	push	r28
    21bc:	c8 2f       	mov	r28, r24
    21be:	80 ff       	sbrs	r24, 0
    21c0:	06 c0       	rjmp	.+12     	; 0x21ce <PRV_voidWriteHalfPort+0x14>
    21c2:	41 e0       	ldi	r20, 0x01	; 1
    21c4:	64 e0       	ldi	r22, 0x04	; 4
    21c6:	80 e0       	ldi	r24, 0x00	; 0
    21c8:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    21cc:	05 c0       	rjmp	.+10     	; 0x21d8 <PRV_voidWriteHalfPort+0x1e>
    21ce:	40 e0       	ldi	r20, 0x00	; 0
    21d0:	64 e0       	ldi	r22, 0x04	; 4
    21d2:	80 e0       	ldi	r24, 0x00	; 0
    21d4:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    21d8:	c1 ff       	sbrs	r28, 1
    21da:	06 c0       	rjmp	.+12     	; 0x21e8 <PRV_voidWriteHalfPort+0x2e>
    21dc:	41 e0       	ldi	r20, 0x01	; 1
    21de:	65 e0       	ldi	r22, 0x05	; 5
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    21e6:	05 c0       	rjmp	.+10     	; 0x21f2 <PRV_voidWriteHalfPort+0x38>
    21e8:	40 e0       	ldi	r20, 0x00	; 0
    21ea:	65 e0       	ldi	r22, 0x05	; 5
    21ec:	80 e0       	ldi	r24, 0x00	; 0
    21ee:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    21f2:	c2 ff       	sbrs	r28, 2
    21f4:	06 c0       	rjmp	.+12     	; 0x2202 <PRV_voidWriteHalfPort+0x48>
    21f6:	41 e0       	ldi	r20, 0x01	; 1
    21f8:	66 e0       	ldi	r22, 0x06	; 6
    21fa:	80 e0       	ldi	r24, 0x00	; 0
    21fc:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2200:	05 c0       	rjmp	.+10     	; 0x220c <PRV_voidWriteHalfPort+0x52>
    2202:	40 e0       	ldi	r20, 0x00	; 0
    2204:	66 e0       	ldi	r22, 0x06	; 6
    2206:	80 e0       	ldi	r24, 0x00	; 0
    2208:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    220c:	c3 ff       	sbrs	r28, 3
    220e:	06 c0       	rjmp	.+12     	; 0x221c <PRV_voidWriteHalfPort+0x62>
    2210:	41 e0       	ldi	r20, 0x01	; 1
    2212:	67 e0       	ldi	r22, 0x07	; 7
    2214:	80 e0       	ldi	r24, 0x00	; 0
    2216:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    221a:	05 c0       	rjmp	.+10     	; 0x2226 <PRV_voidWriteHalfPort+0x6c>
    221c:	40 e0       	ldi	r20, 0x00	; 0
    221e:	67 e0       	ldi	r22, 0x07	; 7
    2220:	80 e0       	ldi	r24, 0x00	; 0
    2222:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2226:	cf 91       	pop	r28
    2228:	08 95       	ret

0000222a <LCD_voidSendCommand>:
    222a:	cf 93       	push	r28
    222c:	c8 2f       	mov	r28, r24
    222e:	40 e0       	ldi	r20, 0x00	; 0
    2230:	61 e0       	ldi	r22, 0x01	; 1
    2232:	81 e0       	ldi	r24, 0x01	; 1
    2234:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2238:	40 e0       	ldi	r20, 0x00	; 0
    223a:	62 e0       	ldi	r22, 0x02	; 2
    223c:	81 e0       	ldi	r24, 0x01	; 1
    223e:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2242:	8c 2f       	mov	r24, r28
    2244:	82 95       	swap	r24
    2246:	8f 70       	andi	r24, 0x0F	; 15
    2248:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    224c:	41 e0       	ldi	r20, 0x01	; 1
    224e:	63 e0       	ldi	r22, 0x03	; 3
    2250:	81 e0       	ldi	r24, 0x01	; 1
    2252:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2256:	8f e9       	ldi	r24, 0x9F	; 159
    2258:	9f e0       	ldi	r25, 0x0F	; 15
    225a:	01 97       	sbiw	r24, 0x01	; 1
    225c:	f1 f7       	brne	.-4      	; 0x225a <LCD_voidSendCommand+0x30>
    225e:	00 c0       	rjmp	.+0      	; 0x2260 <LCD_voidSendCommand+0x36>
    2260:	00 00       	nop
    2262:	40 e0       	ldi	r20, 0x00	; 0
    2264:	63 e0       	ldi	r22, 0x03	; 3
    2266:	81 e0       	ldi	r24, 0x01	; 1
    2268:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    226c:	8c 2f       	mov	r24, r28
    226e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    2272:	41 e0       	ldi	r20, 0x01	; 1
    2274:	63 e0       	ldi	r22, 0x03	; 3
    2276:	81 e0       	ldi	r24, 0x01	; 1
    2278:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    227c:	8f e9       	ldi	r24, 0x9F	; 159
    227e:	9f e0       	ldi	r25, 0x0F	; 15
    2280:	01 97       	sbiw	r24, 0x01	; 1
    2282:	f1 f7       	brne	.-4      	; 0x2280 <LCD_voidSendCommand+0x56>
    2284:	00 c0       	rjmp	.+0      	; 0x2286 <LCD_voidSendCommand+0x5c>
    2286:	00 00       	nop
    2288:	40 e0       	ldi	r20, 0x00	; 0
    228a:	63 e0       	ldi	r22, 0x03	; 3
    228c:	81 e0       	ldi	r24, 0x01	; 1
    228e:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2292:	cf 91       	pop	r28
    2294:	08 95       	ret

00002296 <LCD_voidInit>:
    2296:	41 e0       	ldi	r20, 0x01	; 1
    2298:	61 e0       	ldi	r22, 0x01	; 1
    229a:	81 e0       	ldi	r24, 0x01	; 1
    229c:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22a0:	41 e0       	ldi	r20, 0x01	; 1
    22a2:	62 e0       	ldi	r22, 0x02	; 2
    22a4:	81 e0       	ldi	r24, 0x01	; 1
    22a6:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22aa:	41 e0       	ldi	r20, 0x01	; 1
    22ac:	63 e0       	ldi	r22, 0x03	; 3
    22ae:	81 e0       	ldi	r24, 0x01	; 1
    22b0:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22b4:	41 e0       	ldi	r20, 0x01	; 1
    22b6:	64 e0       	ldi	r22, 0x04	; 4
    22b8:	80 e0       	ldi	r24, 0x00	; 0
    22ba:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22be:	41 e0       	ldi	r20, 0x01	; 1
    22c0:	65 e0       	ldi	r22, 0x05	; 5
    22c2:	80 e0       	ldi	r24, 0x00	; 0
    22c4:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22c8:	41 e0       	ldi	r20, 0x01	; 1
    22ca:	66 e0       	ldi	r22, 0x06	; 6
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22d2:	41 e0       	ldi	r20, 0x01	; 1
    22d4:	67 e0       	ldi	r22, 0x07	; 7
    22d6:	80 e0       	ldi	r24, 0x00	; 0
    22d8:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    22dc:	2f e7       	ldi	r18, 0x7F	; 127
    22de:	85 eb       	ldi	r24, 0xB5	; 181
    22e0:	91 e0       	ldi	r25, 0x01	; 1
    22e2:	21 50       	subi	r18, 0x01	; 1
    22e4:	80 40       	sbci	r24, 0x00	; 0
    22e6:	90 40       	sbci	r25, 0x00	; 0
    22e8:	e1 f7       	brne	.-8      	; 0x22e2 <LCD_voidInit+0x4c>
    22ea:	00 c0       	rjmp	.+0      	; 0x22ec <LCD_voidInit+0x56>
    22ec:	00 00       	nop
    22ee:	40 e0       	ldi	r20, 0x00	; 0
    22f0:	61 e0       	ldi	r22, 0x01	; 1
    22f2:	81 e0       	ldi	r24, 0x01	; 1
    22f4:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    22f8:	40 e0       	ldi	r20, 0x00	; 0
    22fa:	62 e0       	ldi	r22, 0x02	; 2
    22fc:	81 e0       	ldi	r24, 0x01	; 1
    22fe:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2302:	82 e0       	ldi	r24, 0x02	; 2
    2304:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    2308:	41 e0       	ldi	r20, 0x01	; 1
    230a:	63 e0       	ldi	r22, 0x03	; 3
    230c:	81 e0       	ldi	r24, 0x01	; 1
    230e:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2312:	8f e9       	ldi	r24, 0x9F	; 159
    2314:	9f e0       	ldi	r25, 0x0F	; 15
    2316:	01 97       	sbiw	r24, 0x01	; 1
    2318:	f1 f7       	brne	.-4      	; 0x2316 <LCD_voidInit+0x80>
    231a:	00 c0       	rjmp	.+0      	; 0x231c <LCD_voidInit+0x86>
    231c:	00 00       	nop
    231e:	40 e0       	ldi	r20, 0x00	; 0
    2320:	63 e0       	ldi	r22, 0x03	; 3
    2322:	81 e0       	ldi	r24, 0x01	; 1
    2324:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2328:	88 e2       	ldi	r24, 0x28	; 40
    232a:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    232e:	90 ef       	ldi	r25, 0xF0	; 240
    2330:	9a 95       	dec	r25
    2332:	f1 f7       	brne	.-4      	; 0x2330 <LCD_voidInit+0x9a>
    2334:	8c e0       	ldi	r24, 0x0C	; 12
    2336:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    233a:	20 ef       	ldi	r18, 0xF0	; 240
    233c:	2a 95       	dec	r18
    233e:	f1 f7       	brne	.-4      	; 0x233c <LCD_voidInit+0xa6>
    2340:	81 e0       	ldi	r24, 0x01	; 1
    2342:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    2346:	8f e3       	ldi	r24, 0x3F	; 63
    2348:	9f e1       	ldi	r25, 0x1F	; 31
    234a:	01 97       	sbiw	r24, 0x01	; 1
    234c:	f1 f7       	brne	.-4      	; 0x234a <LCD_voidInit+0xb4>
    234e:	00 c0       	rjmp	.+0      	; 0x2350 <LCD_voidInit+0xba>
    2350:	00 00       	nop
    2352:	86 e0       	ldi	r24, 0x06	; 6
    2354:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    2358:	08 95       	ret

0000235a <LCD_voidDisplayChar>:
    235a:	cf 93       	push	r28
    235c:	c8 2f       	mov	r28, r24
    235e:	41 e0       	ldi	r20, 0x01	; 1
    2360:	61 e0       	ldi	r22, 0x01	; 1
    2362:	81 e0       	ldi	r24, 0x01	; 1
    2364:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2368:	40 e0       	ldi	r20, 0x00	; 0
    236a:	62 e0       	ldi	r22, 0x02	; 2
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2372:	8c 2f       	mov	r24, r28
    2374:	82 95       	swap	r24
    2376:	8f 70       	andi	r24, 0x0F	; 15
    2378:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    237c:	41 e0       	ldi	r20, 0x01	; 1
    237e:	63 e0       	ldi	r22, 0x03	; 3
    2380:	81 e0       	ldi	r24, 0x01	; 1
    2382:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2386:	8f e9       	ldi	r24, 0x9F	; 159
    2388:	9f e0       	ldi	r25, 0x0F	; 15
    238a:	01 97       	sbiw	r24, 0x01	; 1
    238c:	f1 f7       	brne	.-4      	; 0x238a <LCD_voidDisplayChar+0x30>
    238e:	00 c0       	rjmp	.+0      	; 0x2390 <LCD_voidDisplayChar+0x36>
    2390:	00 00       	nop
    2392:	40 e0       	ldi	r20, 0x00	; 0
    2394:	63 e0       	ldi	r22, 0x03	; 3
    2396:	81 e0       	ldi	r24, 0x01	; 1
    2398:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    239c:	8c 2f       	mov	r24, r28
    239e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    23a2:	41 e0       	ldi	r20, 0x01	; 1
    23a4:	63 e0       	ldi	r22, 0x03	; 3
    23a6:	81 e0       	ldi	r24, 0x01	; 1
    23a8:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    23ac:	8f e9       	ldi	r24, 0x9F	; 159
    23ae:	9f e0       	ldi	r25, 0x0F	; 15
    23b0:	01 97       	sbiw	r24, 0x01	; 1
    23b2:	f1 f7       	brne	.-4      	; 0x23b0 <LCD_voidDisplayChar+0x56>
    23b4:	00 c0       	rjmp	.+0      	; 0x23b6 <LCD_voidDisplayChar+0x5c>
    23b6:	00 00       	nop
    23b8:	40 e0       	ldi	r20, 0x00	; 0
    23ba:	63 e0       	ldi	r22, 0x03	; 3
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    23c2:	cf 91       	pop	r28
    23c4:	08 95       	ret

000023c6 <LCD_voidDisplayString>:
    23c6:	0f 93       	push	r16
    23c8:	1f 93       	push	r17
    23ca:	cf 93       	push	r28
    23cc:	00 97       	sbiw	r24, 0x00	; 0
    23ce:	29 f4       	brne	.+10     	; 0x23da <LCD_voidDisplayString+0x14>
    23d0:	0c c0       	rjmp	.+24     	; 0x23ea <LCD_voidDisplayString+0x24>
    23d2:	0e 94 ad 11 	call	0x235a	; 0x235a <LCD_voidDisplayChar>
    23d6:	cf 5f       	subi	r28, 0xFF	; 255
    23d8:	02 c0       	rjmp	.+4      	; 0x23de <LCD_voidDisplayString+0x18>
    23da:	8c 01       	movw	r16, r24
    23dc:	c0 e0       	ldi	r28, 0x00	; 0
    23de:	f8 01       	movw	r30, r16
    23e0:	ec 0f       	add	r30, r28
    23e2:	f1 1d       	adc	r31, r1
    23e4:	80 81       	ld	r24, Z
    23e6:	81 11       	cpse	r24, r1
    23e8:	f4 cf       	rjmp	.-24     	; 0x23d2 <LCD_voidDisplayString+0xc>
    23ea:	cf 91       	pop	r28
    23ec:	1f 91       	pop	r17
    23ee:	0f 91       	pop	r16
    23f0:	08 95       	ret

000023f2 <LCD_voidDisplayStringDelay>:
    23f2:	0f 93       	push	r16
    23f4:	1f 93       	push	r17
    23f6:	cf 93       	push	r28
    23f8:	00 97       	sbiw	r24, 0x00	; 0
    23fa:	71 f4       	brne	.+28     	; 0x2418 <LCD_voidDisplayStringDelay+0x26>
    23fc:	15 c0       	rjmp	.+42     	; 0x2428 <LCD_voidDisplayStringDelay+0x36>
    23fe:	0e 94 ad 11 	call	0x235a	; 0x235a <LCD_voidDisplayChar>
    2402:	cf 5f       	subi	r28, 0xFF	; 255
    2404:	2f ef       	ldi	r18, 0xFF	; 255
    2406:	80 e7       	ldi	r24, 0x70	; 112
    2408:	92 e0       	ldi	r25, 0x02	; 2
    240a:	21 50       	subi	r18, 0x01	; 1
    240c:	80 40       	sbci	r24, 0x00	; 0
    240e:	90 40       	sbci	r25, 0x00	; 0
    2410:	e1 f7       	brne	.-8      	; 0x240a <LCD_voidDisplayStringDelay+0x18>
    2412:	00 c0       	rjmp	.+0      	; 0x2414 <LCD_voidDisplayStringDelay+0x22>
    2414:	00 00       	nop
    2416:	02 c0       	rjmp	.+4      	; 0x241c <LCD_voidDisplayStringDelay+0x2a>
    2418:	8c 01       	movw	r16, r24
    241a:	c0 e0       	ldi	r28, 0x00	; 0
    241c:	f8 01       	movw	r30, r16
    241e:	ec 0f       	add	r30, r28
    2420:	f1 1d       	adc	r31, r1
    2422:	80 81       	ld	r24, Z
    2424:	81 11       	cpse	r24, r1
    2426:	eb cf       	rjmp	.-42     	; 0x23fe <LCD_voidDisplayStringDelay+0xc>
    2428:	cf 91       	pop	r28
    242a:	1f 91       	pop	r17
    242c:	0f 91       	pop	r16
    242e:	08 95       	ret

00002430 <LCD_voidDisplayNumber>:
    2430:	0f 93       	push	r16
    2432:	1f 93       	push	r17
    2434:	cf 93       	push	r28
    2436:	df 93       	push	r29
    2438:	00 d0       	rcall	.+0      	; 0x243a <LCD_voidDisplayNumber+0xa>
    243a:	00 d0       	rcall	.+0      	; 0x243c <LCD_voidDisplayNumber+0xc>
    243c:	1f 92       	push	r1
    243e:	cd b7       	in	r28, 0x3d	; 61
    2440:	de b7       	in	r29, 0x3e	; 62
    2442:	26 2f       	mov	r18, r22
    2444:	10 e0       	ldi	r17, 0x00	; 0
    2446:	08 c0       	rjmp	.+16     	; 0x2458 <LCD_voidDisplayNumber+0x28>
    2448:	1f 5f       	subi	r17, 0xFF	; 255
    244a:	ed ec       	ldi	r30, 0xCD	; 205
    244c:	6e 9f       	mul	r22, r30
    244e:	61 2d       	mov	r22, r1
    2450:	11 24       	eor	r1, r1
    2452:	66 95       	lsr	r22
    2454:	66 95       	lsr	r22
    2456:	66 95       	lsr	r22
    2458:	61 11       	cpse	r22, r1
    245a:	f6 cf       	rjmp	.-20     	; 0x2448 <LCD_voidDisplayNumber+0x18>
    245c:	00 e0       	ldi	r16, 0x00	; 0
    245e:	1a c0       	rjmp	.+52     	; 0x2494 <LCD_voidDisplayNumber+0x64>
    2460:	62 2f       	mov	r22, r18
    2462:	2a e0       	ldi	r18, 0x0A	; 10
    2464:	30 e0       	ldi	r19, 0x00	; 0
    2466:	40 e0       	ldi	r20, 0x00	; 0
    2468:	50 e0       	ldi	r21, 0x00	; 0
    246a:	0e 94 de 19 	call	0x33bc	; 0x33bc <__udivmodsi4>
    246e:	73 2f       	mov	r23, r19
    2470:	84 2f       	mov	r24, r20
    2472:	95 2f       	mov	r25, r21
    2474:	a0 2f       	mov	r26, r16
    2476:	b0 e0       	ldi	r27, 0x00	; 0
    2478:	11 96       	adiw	r26, 0x01	; 1
    247a:	e1 2f       	mov	r30, r17
    247c:	f0 e0       	ldi	r31, 0x00	; 0
    247e:	ea 1b       	sub	r30, r26
    2480:	fb 0b       	sbc	r31, r27
    2482:	41 e0       	ldi	r20, 0x01	; 1
    2484:	50 e0       	ldi	r21, 0x00	; 0
    2486:	4c 0f       	add	r20, r28
    2488:	5d 1f       	adc	r21, r29
    248a:	e4 0f       	add	r30, r20
    248c:	f5 1f       	adc	r31, r21
    248e:	60 5d       	subi	r22, 0xD0	; 208
    2490:	60 83       	st	Z, r22
    2492:	0f 5f       	subi	r16, 0xFF	; 255
    2494:	01 17       	cp	r16, r17
    2496:	20 f3       	brcs	.-56     	; 0x2460 <LCD_voidDisplayNumber+0x30>
    2498:	e1 e0       	ldi	r30, 0x01	; 1
    249a:	f0 e0       	ldi	r31, 0x00	; 0
    249c:	ec 0f       	add	r30, r28
    249e:	fd 1f       	adc	r31, r29
    24a0:	e1 0f       	add	r30, r17
    24a2:	f1 1d       	adc	r31, r1
    24a4:	10 82       	st	Z, r1
    24a6:	10 e0       	ldi	r17, 0x00	; 0
    24a8:	03 c0       	rjmp	.+6      	; 0x24b0 <LCD_voidDisplayNumber+0x80>
    24aa:	0e 94 ad 11 	call	0x235a	; 0x235a <LCD_voidDisplayChar>
    24ae:	1f 5f       	subi	r17, 0xFF	; 255
    24b0:	e1 e0       	ldi	r30, 0x01	; 1
    24b2:	f0 e0       	ldi	r31, 0x00	; 0
    24b4:	ec 0f       	add	r30, r28
    24b6:	fd 1f       	adc	r31, r29
    24b8:	e1 0f       	add	r30, r17
    24ba:	f1 1d       	adc	r31, r1
    24bc:	80 81       	ld	r24, Z
    24be:	81 11       	cpse	r24, r1
    24c0:	f4 cf       	rjmp	.-24     	; 0x24aa <LCD_voidDisplayNumber+0x7a>
    24c2:	0f 90       	pop	r0
    24c4:	0f 90       	pop	r0
    24c6:	0f 90       	pop	r0
    24c8:	0f 90       	pop	r0
    24ca:	0f 90       	pop	r0
    24cc:	df 91       	pop	r29
    24ce:	cf 91       	pop	r28
    24d0:	1f 91       	pop	r17
    24d2:	0f 91       	pop	r16
    24d4:	08 95       	ret

000024d6 <LCD_voidClear>:
    24d6:	40 e0       	ldi	r20, 0x00	; 0
    24d8:	61 e0       	ldi	r22, 0x01	; 1
    24da:	81 e0       	ldi	r24, 0x01	; 1
    24dc:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    24e0:	40 e0       	ldi	r20, 0x00	; 0
    24e2:	62 e0       	ldi	r22, 0x02	; 2
    24e4:	81 e0       	ldi	r24, 0x01	; 1
    24e6:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    24ea:	80 e0       	ldi	r24, 0x00	; 0
    24ec:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    24f0:	41 e0       	ldi	r20, 0x01	; 1
    24f2:	63 e0       	ldi	r22, 0x03	; 3
    24f4:	81 e0       	ldi	r24, 0x01	; 1
    24f6:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    24fa:	8f e9       	ldi	r24, 0x9F	; 159
    24fc:	9f e0       	ldi	r25, 0x0F	; 15
    24fe:	01 97       	sbiw	r24, 0x01	; 1
    2500:	f1 f7       	brne	.-4      	; 0x24fe <LCD_voidClear+0x28>
    2502:	00 c0       	rjmp	.+0      	; 0x2504 <LCD_voidClear+0x2e>
    2504:	00 00       	nop
    2506:	40 e0       	ldi	r20, 0x00	; 0
    2508:	63 e0       	ldi	r22, 0x03	; 3
    250a:	81 e0       	ldi	r24, 0x01	; 1
    250c:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2510:	81 e0       	ldi	r24, 0x01	; 1
    2512:	0e 94 dd 10 	call	0x21ba	; 0x21ba <PRV_voidWriteHalfPort>
    2516:	41 e0       	ldi	r20, 0x01	; 1
    2518:	63 e0       	ldi	r22, 0x03	; 3
    251a:	81 e0       	ldi	r24, 0x01	; 1
    251c:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2520:	8f e9       	ldi	r24, 0x9F	; 159
    2522:	9f e0       	ldi	r25, 0x0F	; 15
    2524:	01 97       	sbiw	r24, 0x01	; 1
    2526:	f1 f7       	brne	.-4      	; 0x2524 <LCD_voidClear+0x4e>
    2528:	00 c0       	rjmp	.+0      	; 0x252a <LCD_voidClear+0x54>
    252a:	00 00       	nop
    252c:	40 e0       	ldi	r20, 0x00	; 0
    252e:	63 e0       	ldi	r22, 0x03	; 3
    2530:	81 e0       	ldi	r24, 0x01	; 1
    2532:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2536:	08 95       	ret

00002538 <LCD_voidGoTOSpecificPosition>:
    2538:	cf 93       	push	r28
    253a:	df 93       	push	r29
    253c:	68 32       	cpi	r22, 0x28	; 40
    253e:	a0 f4       	brcc	.+40     	; 0x2568 <LCD_voidGoTOSpecificPosition+0x30>
    2540:	c6 2f       	mov	r28, r22
    2542:	d8 2f       	mov	r29, r24
    2544:	82 e0       	ldi	r24, 0x02	; 2
    2546:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    254a:	d1 30       	cpi	r29, 0x01	; 1
    254c:	19 f0       	breq	.+6      	; 0x2554 <LCD_voidGoTOSpecificPosition+0x1c>
    254e:	d2 30       	cpi	r29, 0x02	; 2
    2550:	31 f0       	breq	.+12     	; 0x255e <LCD_voidGoTOSpecificPosition+0x26>
    2552:	0a c0       	rjmp	.+20     	; 0x2568 <LCD_voidGoTOSpecificPosition+0x30>
    2554:	8c 2f       	mov	r24, r28
    2556:	80 68       	ori	r24, 0x80	; 128
    2558:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    255c:	05 c0       	rjmp	.+10     	; 0x2568 <LCD_voidGoTOSpecificPosition+0x30>
    255e:	80 e4       	ldi	r24, 0x40	; 64
    2560:	8c 0f       	add	r24, r28
    2562:	80 68       	ori	r24, 0x80	; 128
    2564:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_voidSendCommand>
    2568:	df 91       	pop	r29
    256a:	cf 91       	pop	r28
    256c:	08 95       	ret

0000256e <LED_voidInit>:
    256e:	41 e0       	ldi	r20, 0x01	; 1
    2570:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    2574:	08 95       	ret

00002576 <LED_voidOn>:
    2576:	41 30       	cpi	r20, 0x01	; 1
    2578:	19 f0       	breq	.+6      	; 0x2580 <LED_voidOn+0xa>
    257a:	42 30       	cpi	r20, 0x02	; 2
    257c:	29 f0       	breq	.+10     	; 0x2588 <LED_voidOn+0x12>
    257e:	08 95       	ret
    2580:	41 e0       	ldi	r20, 0x01	; 1
    2582:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    2586:	08 95       	ret
    2588:	40 e0       	ldi	r20, 0x00	; 0
    258a:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    258e:	08 95       	ret

00002590 <LED_voidOff>:
    2590:	41 30       	cpi	r20, 0x01	; 1
    2592:	19 f0       	breq	.+6      	; 0x259a <LED_voidOff+0xa>
    2594:	42 30       	cpi	r20, 0x02	; 2
    2596:	29 f0       	breq	.+10     	; 0x25a2 <LED_voidOff+0x12>
    2598:	08 95       	ret
    259a:	40 e0       	ldi	r20, 0x00	; 0
    259c:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    25a0:	08 95       	ret
    25a2:	41 e0       	ldi	r20, 0x01	; 1
    25a4:	0e 94 e7 13 	call	0x27ce	; 0x27ce <DIO_voidSetPinValue>
    25a8:	08 95       	ret

000025aa <SERVO_voidInit>:
    25aa:	41 e0       	ldi	r20, 0x01	; 1
    25ac:	0e 94 67 13 	call	0x26ce	; 0x26ce <DIO_voidSetPinDirection>
    25b0:	0e 94 de 14 	call	0x29bc	; 0x29bc <PWM_voidInitChannel_1A>
    25b4:	08 95       	ret

000025b6 <SERVO_voidStartByAngle>:
    25b6:	20 e0       	ldi	r18, 0x00	; 0
    25b8:	30 e0       	ldi	r19, 0x00	; 0
    25ba:	40 e2       	ldi	r20, 0x20	; 32
    25bc:	50 e4       	ldi	r21, 0x40	; 64
    25be:	0e 94 71 19 	call	0x32e2	; 0x32e2 <__mulsf3>
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	30 ec       	ldi	r19, 0xC0	; 192
    25c6:	48 e2       	ldi	r20, 0x28	; 40
    25c8:	54 e4       	ldi	r21, 0x44	; 68
    25ca:	0e 94 ad 17 	call	0x2f5a	; 0x2f5a <__addsf3>
    25ce:	20 e0       	ldi	r18, 0x00	; 0
    25d0:	30 e0       	ldi	r19, 0x00	; 0
    25d2:	44 eb       	ldi	r20, 0xB4	; 180
    25d4:	52 e4       	ldi	r21, 0x42	; 66
    25d6:	0e 94 1e 18 	call	0x303c	; 0x303c <__divsf3>
    25da:	ab 01       	movw	r20, r22
    25dc:	bc 01       	movw	r22, r24
    25de:	82 e3       	ldi	r24, 0x32	; 50
    25e0:	90 e0       	ldi	r25, 0x00	; 0
    25e2:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <PWM_voidGenerateChannel_1B>
    25e6:	08 95       	ret

000025e8 <main>:
extern u8 usertype;

int main()
{
	//use for first time to init users and pass  then comment this line and download again
	HOME_InitUserNameAndPass();
    25e8:	0e 94 60 00 	call	0xc0	; 0xc0 <HOME_InitUserNameAndPass>
	
	//check alarm
	HOME_voidFireAnALarm(usertype);
    25ec:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <usertype>
    25f0:	0e 94 5e 03 	call	0x6bc	; 0x6bc <HOME_voidFireAnALarm>
	
	//init home  
	HOME_voidInit();
    25f4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <HOME_voidInit>
	while(1)
	{
		

		// display the welcome screen
		WelcomeScreen();
    25f8:	0e 94 38 0b 	call	0x1670	; 0x1670 <WelcomeScreen>

		if (global_accessType ==accessPermited)
    25fc:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <global_accessType>
    2600:	81 30       	cpi	r24, 0x01	; 1
    2602:	89 f4       	brne	.+34     	; 0x2626 <main+0x3e>
		{
			if (usertype == HOME_REMOTE_ADMIN)
    2604:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <usertype>
    2608:	83 30       	cpi	r24, 0x03	; 3
    260a:	19 f4       	brne	.+6      	; 0x2612 <main+0x2a>
			{
				KPD_Interface_RemoteAdmin();
    260c:	0e 94 9e 03 	call	0x73c	; 0x73c <KPD_Interface_RemoteAdmin>
    2610:	f3 cf       	rjmp	.-26     	; 0x25f8 <main+0x10>
			}
			else if (usertype == HOME_REMOTE_USER)
    2612:	84 30       	cpi	r24, 0x04	; 4
    2614:	19 f4       	brne	.+6      	; 0x261c <main+0x34>
			{
				KPD_Interface_RemoteUser();
    2616:	0e 94 9e 07 	call	0xf3c	; 0xf3c <KPD_Interface_RemoteUser>
    261a:	ee cf       	rjmp	.-36     	; 0x25f8 <main+0x10>
			}

			else if (usertype == HOME_LOCAL_USER)
    261c:	82 30       	cpi	r24, 0x02	; 2
    261e:	61 f7       	brne	.-40     	; 0x25f8 <main+0x10>
			{
				KPD_Interface_Localuser();
    2620:	0e 94 c6 0b 	call	0x178c	; 0x178c <KPD_Interface_Localuser>
    2624:	e9 cf       	rjmp	.-46     	; 0x25f8 <main+0x10>
			}

			
		}
		else if (global_accessType ==accessDenied)
    2626:	81 11       	cpse	r24, r1
    2628:	e7 cf       	rjmp	.-50     	; 0x25f8 <main+0x10>
		{
			LCD_voidDisplayString((u8*)"Access Denied");
    262a:	83 e6       	ldi	r24, 0x63	; 99
    262c:	94 e0       	ldi	r25, 0x04	; 4
    262e:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <LCD_voidDisplayString>
		}
		
		
		
	}
}
    2632:	80 e0       	ldi	r24, 0x00	; 0
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	08 95       	ret

00002638 <ADC_voidInit>:
    2638:	82 30       	cpi	r24, 0x02	; 2
    263a:	59 f0       	breq	.+22     	; 0x2652 <ADC_voidInit+0x1a>
    263c:	83 30       	cpi	r24, 0x03	; 3
    263e:	81 f0       	breq	.+32     	; 0x2660 <ADC_voidInit+0x28>
    2640:	81 30       	cpi	r24, 0x01	; 1
    2642:	a1 f4       	brne	.+40     	; 0x266c <ADC_voidInit+0x34>
    2644:	87 b1       	in	r24, 0x07	; 7
    2646:	80 64       	ori	r24, 0x40	; 64
    2648:	87 b9       	out	0x07, r24	; 7
    264a:	87 b1       	in	r24, 0x07	; 7
    264c:	8f 77       	andi	r24, 0x7F	; 127
    264e:	87 b9       	out	0x07, r24	; 7
    2650:	0d c0       	rjmp	.+26     	; 0x266c <ADC_voidInit+0x34>
    2652:	87 b1       	in	r24, 0x07	; 7
    2654:	8f 7b       	andi	r24, 0xBF	; 191
    2656:	87 b9       	out	0x07, r24	; 7
    2658:	87 b1       	in	r24, 0x07	; 7
    265a:	8f 77       	andi	r24, 0x7F	; 127
    265c:	87 b9       	out	0x07, r24	; 7
    265e:	06 c0       	rjmp	.+12     	; 0x266c <ADC_voidInit+0x34>
    2660:	87 b1       	in	r24, 0x07	; 7
    2662:	80 64       	ori	r24, 0x40	; 64
    2664:	87 b9       	out	0x07, r24	; 7
    2666:	87 b1       	in	r24, 0x07	; 7
    2668:	80 68       	ori	r24, 0x80	; 128
    266a:	87 b9       	out	0x07, r24	; 7
    266c:	87 b1       	in	r24, 0x07	; 7
    266e:	8f 7d       	andi	r24, 0xDF	; 223
    2670:	87 b9       	out	0x07, r24	; 7
    2672:	86 b1       	in	r24, 0x06	; 6
    2674:	8f 7d       	andi	r24, 0xDF	; 223
    2676:	86 b9       	out	0x06, r24	; 6
    2678:	86 b1       	in	r24, 0x06	; 6
    267a:	87 7f       	andi	r24, 0xF7	; 247
    267c:	86 b9       	out	0x06, r24	; 6
    267e:	86 b1       	in	r24, 0x06	; 6
    2680:	84 60       	ori	r24, 0x04	; 4
    2682:	86 b9       	out	0x06, r24	; 6
    2684:	86 b1       	in	r24, 0x06	; 6
    2686:	82 60       	ori	r24, 0x02	; 2
    2688:	86 b9       	out	0x06, r24	; 6
    268a:	86 b1       	in	r24, 0x06	; 6
    268c:	81 60       	ori	r24, 0x01	; 1
    268e:	86 b9       	out	0x06, r24	; 6
    2690:	86 b1       	in	r24, 0x06	; 6
    2692:	80 68       	ori	r24, 0x80	; 128
    2694:	86 b9       	out	0x06, r24	; 6
    2696:	08 95       	ret

00002698 <ADC_voidGetDigitalValue>:
    2698:	61 15       	cp	r22, r1
    269a:	71 05       	cpc	r23, r1
    269c:	b9 f0       	breq	.+46     	; 0x26cc <ADC_voidGetDigitalValue+0x34>
    269e:	97 b1       	in	r25, 0x07	; 7
    26a0:	90 7e       	andi	r25, 0xE0	; 224
    26a2:	97 b9       	out	0x07, r25	; 7
    26a4:	97 b1       	in	r25, 0x07	; 7
    26a6:	89 2b       	or	r24, r25
    26a8:	87 b9       	out	0x07, r24	; 7
    26aa:	86 b1       	in	r24, 0x06	; 6
    26ac:	80 64       	ori	r24, 0x40	; 64
    26ae:	86 b9       	out	0x06, r24	; 6
    26b0:	34 9b       	sbis	0x06, 4	; 6
    26b2:	fe cf       	rjmp	.-4      	; 0x26b0 <ADC_voidGetDigitalValue+0x18>
    26b4:	84 b1       	in	r24, 0x04	; 4
    26b6:	95 b1       	in	r25, 0x05	; 5
    26b8:	96 95       	lsr	r25
    26ba:	87 95       	ror	r24
    26bc:	96 95       	lsr	r25
    26be:	87 95       	ror	r24
    26c0:	fb 01       	movw	r30, r22
    26c2:	91 83       	std	Z+1, r25	; 0x01
    26c4:	80 83       	st	Z, r24
    26c6:	86 b1       	in	r24, 0x06	; 6
    26c8:	80 61       	ori	r24, 0x10	; 16
    26ca:	86 b9       	out	0x06, r24	; 6
    26cc:	08 95       	ret

000026ce <DIO_voidSetPinDirection>:
    26ce:	84 30       	cpi	r24, 0x04	; 4
    26d0:	08 f0       	brcs	.+2      	; 0x26d4 <DIO_voidSetPinDirection+0x6>
    26d2:	7c c0       	rjmp	.+248    	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    26d4:	68 30       	cpi	r22, 0x08	; 8
    26d6:	08 f0       	brcs	.+2      	; 0x26da <DIO_voidSetPinDirection+0xc>
    26d8:	79 c0       	rjmp	.+242    	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    26da:	42 30       	cpi	r20, 0x02	; 2
    26dc:	08 f0       	brcs	.+2      	; 0x26e0 <DIO_voidSetPinDirection+0x12>
    26de:	76 c0       	rjmp	.+236    	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    26e0:	81 30       	cpi	r24, 0x01	; 1
    26e2:	19 f1       	breq	.+70     	; 0x272a <DIO_voidSetPinDirection+0x5c>
    26e4:	30 f0       	brcs	.+12     	; 0x26f2 <DIO_voidSetPinDirection+0x24>
    26e6:	82 30       	cpi	r24, 0x02	; 2
    26e8:	e1 f1       	breq	.+120    	; 0x2762 <DIO_voidSetPinDirection+0x94>
    26ea:	83 30       	cpi	r24, 0x03	; 3
    26ec:	09 f4       	brne	.+2      	; 0x26f0 <DIO_voidSetPinDirection+0x22>
    26ee:	54 c0       	rjmp	.+168    	; 0x2798 <DIO_voidSetPinDirection+0xca>
    26f0:	08 95       	ret
    26f2:	44 23       	and	r20, r20
    26f4:	71 f0       	breq	.+28     	; 0x2712 <DIO_voidSetPinDirection+0x44>
    26f6:	41 30       	cpi	r20, 0x01	; 1
    26f8:	09 f0       	breq	.+2      	; 0x26fc <DIO_voidSetPinDirection+0x2e>
    26fa:	68 c0       	rjmp	.+208    	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    26fc:	2a b3       	in	r18, 0x1a	; 26
    26fe:	81 e0       	ldi	r24, 0x01	; 1
    2700:	90 e0       	ldi	r25, 0x00	; 0
    2702:	02 c0       	rjmp	.+4      	; 0x2708 <DIO_voidSetPinDirection+0x3a>
    2704:	88 0f       	add	r24, r24
    2706:	99 1f       	adc	r25, r25
    2708:	6a 95       	dec	r22
    270a:	e2 f7       	brpl	.-8      	; 0x2704 <DIO_voidSetPinDirection+0x36>
    270c:	82 2b       	or	r24, r18
    270e:	8a bb       	out	0x1a, r24	; 26
    2710:	08 95       	ret
    2712:	2a b3       	in	r18, 0x1a	; 26
    2714:	81 e0       	ldi	r24, 0x01	; 1
    2716:	90 e0       	ldi	r25, 0x00	; 0
    2718:	02 c0       	rjmp	.+4      	; 0x271e <DIO_voidSetPinDirection+0x50>
    271a:	88 0f       	add	r24, r24
    271c:	99 1f       	adc	r25, r25
    271e:	6a 95       	dec	r22
    2720:	e2 f7       	brpl	.-8      	; 0x271a <DIO_voidSetPinDirection+0x4c>
    2722:	80 95       	com	r24
    2724:	82 23       	and	r24, r18
    2726:	8a bb       	out	0x1a, r24	; 26
    2728:	08 95       	ret
    272a:	44 23       	and	r20, r20
    272c:	71 f0       	breq	.+28     	; 0x274a <DIO_voidSetPinDirection+0x7c>
    272e:	41 30       	cpi	r20, 0x01	; 1
    2730:	09 f0       	breq	.+2      	; 0x2734 <DIO_voidSetPinDirection+0x66>
    2732:	4c c0       	rjmp	.+152    	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    2734:	27 b3       	in	r18, 0x17	; 23
    2736:	81 e0       	ldi	r24, 0x01	; 1
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	02 c0       	rjmp	.+4      	; 0x2740 <DIO_voidSetPinDirection+0x72>
    273c:	88 0f       	add	r24, r24
    273e:	99 1f       	adc	r25, r25
    2740:	6a 95       	dec	r22
    2742:	e2 f7       	brpl	.-8      	; 0x273c <DIO_voidSetPinDirection+0x6e>
    2744:	82 2b       	or	r24, r18
    2746:	87 bb       	out	0x17, r24	; 23
    2748:	08 95       	ret
    274a:	27 b3       	in	r18, 0x17	; 23
    274c:	81 e0       	ldi	r24, 0x01	; 1
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	02 c0       	rjmp	.+4      	; 0x2756 <DIO_voidSetPinDirection+0x88>
    2752:	88 0f       	add	r24, r24
    2754:	99 1f       	adc	r25, r25
    2756:	6a 95       	dec	r22
    2758:	e2 f7       	brpl	.-8      	; 0x2752 <DIO_voidSetPinDirection+0x84>
    275a:	80 95       	com	r24
    275c:	82 23       	and	r24, r18
    275e:	87 bb       	out	0x17, r24	; 23
    2760:	08 95       	ret
    2762:	44 23       	and	r20, r20
    2764:	69 f0       	breq	.+26     	; 0x2780 <DIO_voidSetPinDirection+0xb2>
    2766:	41 30       	cpi	r20, 0x01	; 1
    2768:	89 f5       	brne	.+98     	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    276a:	24 b3       	in	r18, 0x14	; 20
    276c:	81 e0       	ldi	r24, 0x01	; 1
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	02 c0       	rjmp	.+4      	; 0x2776 <DIO_voidSetPinDirection+0xa8>
    2772:	88 0f       	add	r24, r24
    2774:	99 1f       	adc	r25, r25
    2776:	6a 95       	dec	r22
    2778:	e2 f7       	brpl	.-8      	; 0x2772 <DIO_voidSetPinDirection+0xa4>
    277a:	82 2b       	or	r24, r18
    277c:	84 bb       	out	0x14, r24	; 20
    277e:	08 95       	ret
    2780:	24 b3       	in	r18, 0x14	; 20
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	02 c0       	rjmp	.+4      	; 0x278c <DIO_voidSetPinDirection+0xbe>
    2788:	88 0f       	add	r24, r24
    278a:	99 1f       	adc	r25, r25
    278c:	6a 95       	dec	r22
    278e:	e2 f7       	brpl	.-8      	; 0x2788 <DIO_voidSetPinDirection+0xba>
    2790:	80 95       	com	r24
    2792:	82 23       	and	r24, r18
    2794:	84 bb       	out	0x14, r24	; 20
    2796:	08 95       	ret
    2798:	44 23       	and	r20, r20
    279a:	69 f0       	breq	.+26     	; 0x27b6 <DIO_voidSetPinDirection+0xe8>
    279c:	41 30       	cpi	r20, 0x01	; 1
    279e:	b1 f4       	brne	.+44     	; 0x27cc <DIO_voidSetPinDirection+0xfe>
    27a0:	21 b3       	in	r18, 0x11	; 17
    27a2:	81 e0       	ldi	r24, 0x01	; 1
    27a4:	90 e0       	ldi	r25, 0x00	; 0
    27a6:	02 c0       	rjmp	.+4      	; 0x27ac <DIO_voidSetPinDirection+0xde>
    27a8:	88 0f       	add	r24, r24
    27aa:	99 1f       	adc	r25, r25
    27ac:	6a 95       	dec	r22
    27ae:	e2 f7       	brpl	.-8      	; 0x27a8 <DIO_voidSetPinDirection+0xda>
    27b0:	82 2b       	or	r24, r18
    27b2:	81 bb       	out	0x11, r24	; 17
    27b4:	08 95       	ret
    27b6:	21 b3       	in	r18, 0x11	; 17
    27b8:	81 e0       	ldi	r24, 0x01	; 1
    27ba:	90 e0       	ldi	r25, 0x00	; 0
    27bc:	02 c0       	rjmp	.+4      	; 0x27c2 <DIO_voidSetPinDirection+0xf4>
    27be:	88 0f       	add	r24, r24
    27c0:	99 1f       	adc	r25, r25
    27c2:	6a 95       	dec	r22
    27c4:	e2 f7       	brpl	.-8      	; 0x27be <DIO_voidSetPinDirection+0xf0>
    27c6:	80 95       	com	r24
    27c8:	82 23       	and	r24, r18
    27ca:	81 bb       	out	0x11, r24	; 17
    27cc:	08 95       	ret

000027ce <DIO_voidSetPinValue>:
    27ce:	84 30       	cpi	r24, 0x04	; 4
    27d0:	08 f0       	brcs	.+2      	; 0x27d4 <DIO_voidSetPinValue+0x6>
    27d2:	7c c0       	rjmp	.+248    	; 0x28cc <DIO_voidSetPinValue+0xfe>
    27d4:	68 30       	cpi	r22, 0x08	; 8
    27d6:	08 f0       	brcs	.+2      	; 0x27da <DIO_voidSetPinValue+0xc>
    27d8:	79 c0       	rjmp	.+242    	; 0x28cc <DIO_voidSetPinValue+0xfe>
    27da:	42 30       	cpi	r20, 0x02	; 2
    27dc:	08 f0       	brcs	.+2      	; 0x27e0 <DIO_voidSetPinValue+0x12>
    27de:	76 c0       	rjmp	.+236    	; 0x28cc <DIO_voidSetPinValue+0xfe>
    27e0:	81 30       	cpi	r24, 0x01	; 1
    27e2:	19 f1       	breq	.+70     	; 0x282a <DIO_voidSetPinValue+0x5c>
    27e4:	30 f0       	brcs	.+12     	; 0x27f2 <DIO_voidSetPinValue+0x24>
    27e6:	82 30       	cpi	r24, 0x02	; 2
    27e8:	e1 f1       	breq	.+120    	; 0x2862 <DIO_voidSetPinValue+0x94>
    27ea:	83 30       	cpi	r24, 0x03	; 3
    27ec:	09 f4       	brne	.+2      	; 0x27f0 <DIO_voidSetPinValue+0x22>
    27ee:	54 c0       	rjmp	.+168    	; 0x2898 <DIO_voidSetPinValue+0xca>
    27f0:	08 95       	ret
    27f2:	44 23       	and	r20, r20
    27f4:	71 f0       	breq	.+28     	; 0x2812 <DIO_voidSetPinValue+0x44>
    27f6:	41 30       	cpi	r20, 0x01	; 1
    27f8:	09 f0       	breq	.+2      	; 0x27fc <DIO_voidSetPinValue+0x2e>
    27fa:	68 c0       	rjmp	.+208    	; 0x28cc <DIO_voidSetPinValue+0xfe>
    27fc:	2b b3       	in	r18, 0x1b	; 27
    27fe:	81 e0       	ldi	r24, 0x01	; 1
    2800:	90 e0       	ldi	r25, 0x00	; 0
    2802:	02 c0       	rjmp	.+4      	; 0x2808 <DIO_voidSetPinValue+0x3a>
    2804:	88 0f       	add	r24, r24
    2806:	99 1f       	adc	r25, r25
    2808:	6a 95       	dec	r22
    280a:	e2 f7       	brpl	.-8      	; 0x2804 <DIO_voidSetPinValue+0x36>
    280c:	82 2b       	or	r24, r18
    280e:	8b bb       	out	0x1b, r24	; 27
    2810:	08 95       	ret
    2812:	2b b3       	in	r18, 0x1b	; 27
    2814:	81 e0       	ldi	r24, 0x01	; 1
    2816:	90 e0       	ldi	r25, 0x00	; 0
    2818:	02 c0       	rjmp	.+4      	; 0x281e <DIO_voidSetPinValue+0x50>
    281a:	88 0f       	add	r24, r24
    281c:	99 1f       	adc	r25, r25
    281e:	6a 95       	dec	r22
    2820:	e2 f7       	brpl	.-8      	; 0x281a <DIO_voidSetPinValue+0x4c>
    2822:	80 95       	com	r24
    2824:	82 23       	and	r24, r18
    2826:	8b bb       	out	0x1b, r24	; 27
    2828:	08 95       	ret
    282a:	44 23       	and	r20, r20
    282c:	71 f0       	breq	.+28     	; 0x284a <DIO_voidSetPinValue+0x7c>
    282e:	41 30       	cpi	r20, 0x01	; 1
    2830:	09 f0       	breq	.+2      	; 0x2834 <DIO_voidSetPinValue+0x66>
    2832:	4c c0       	rjmp	.+152    	; 0x28cc <DIO_voidSetPinValue+0xfe>
    2834:	28 b3       	in	r18, 0x18	; 24
    2836:	81 e0       	ldi	r24, 0x01	; 1
    2838:	90 e0       	ldi	r25, 0x00	; 0
    283a:	02 c0       	rjmp	.+4      	; 0x2840 <DIO_voidSetPinValue+0x72>
    283c:	88 0f       	add	r24, r24
    283e:	99 1f       	adc	r25, r25
    2840:	6a 95       	dec	r22
    2842:	e2 f7       	brpl	.-8      	; 0x283c <DIO_voidSetPinValue+0x6e>
    2844:	82 2b       	or	r24, r18
    2846:	88 bb       	out	0x18, r24	; 24
    2848:	08 95       	ret
    284a:	28 b3       	in	r18, 0x18	; 24
    284c:	81 e0       	ldi	r24, 0x01	; 1
    284e:	90 e0       	ldi	r25, 0x00	; 0
    2850:	02 c0       	rjmp	.+4      	; 0x2856 <DIO_voidSetPinValue+0x88>
    2852:	88 0f       	add	r24, r24
    2854:	99 1f       	adc	r25, r25
    2856:	6a 95       	dec	r22
    2858:	e2 f7       	brpl	.-8      	; 0x2852 <DIO_voidSetPinValue+0x84>
    285a:	80 95       	com	r24
    285c:	82 23       	and	r24, r18
    285e:	88 bb       	out	0x18, r24	; 24
    2860:	08 95       	ret
    2862:	44 23       	and	r20, r20
    2864:	69 f0       	breq	.+26     	; 0x2880 <DIO_voidSetPinValue+0xb2>
    2866:	41 30       	cpi	r20, 0x01	; 1
    2868:	89 f5       	brne	.+98     	; 0x28cc <DIO_voidSetPinValue+0xfe>
    286a:	25 b3       	in	r18, 0x15	; 21
    286c:	81 e0       	ldi	r24, 0x01	; 1
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	02 c0       	rjmp	.+4      	; 0x2876 <DIO_voidSetPinValue+0xa8>
    2872:	88 0f       	add	r24, r24
    2874:	99 1f       	adc	r25, r25
    2876:	6a 95       	dec	r22
    2878:	e2 f7       	brpl	.-8      	; 0x2872 <DIO_voidSetPinValue+0xa4>
    287a:	82 2b       	or	r24, r18
    287c:	85 bb       	out	0x15, r24	; 21
    287e:	08 95       	ret
    2880:	25 b3       	in	r18, 0x15	; 21
    2882:	81 e0       	ldi	r24, 0x01	; 1
    2884:	90 e0       	ldi	r25, 0x00	; 0
    2886:	02 c0       	rjmp	.+4      	; 0x288c <DIO_voidSetPinValue+0xbe>
    2888:	88 0f       	add	r24, r24
    288a:	99 1f       	adc	r25, r25
    288c:	6a 95       	dec	r22
    288e:	e2 f7       	brpl	.-8      	; 0x2888 <DIO_voidSetPinValue+0xba>
    2890:	80 95       	com	r24
    2892:	82 23       	and	r24, r18
    2894:	85 bb       	out	0x15, r24	; 21
    2896:	08 95       	ret
    2898:	44 23       	and	r20, r20
    289a:	69 f0       	breq	.+26     	; 0x28b6 <DIO_voidSetPinValue+0xe8>
    289c:	41 30       	cpi	r20, 0x01	; 1
    289e:	b1 f4       	brne	.+44     	; 0x28cc <DIO_voidSetPinValue+0xfe>
    28a0:	22 b3       	in	r18, 0x12	; 18
    28a2:	81 e0       	ldi	r24, 0x01	; 1
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	02 c0       	rjmp	.+4      	; 0x28ac <DIO_voidSetPinValue+0xde>
    28a8:	88 0f       	add	r24, r24
    28aa:	99 1f       	adc	r25, r25
    28ac:	6a 95       	dec	r22
    28ae:	e2 f7       	brpl	.-8      	; 0x28a8 <DIO_voidSetPinValue+0xda>
    28b0:	82 2b       	or	r24, r18
    28b2:	82 bb       	out	0x12, r24	; 18
    28b4:	08 95       	ret
    28b6:	22 b3       	in	r18, 0x12	; 18
    28b8:	81 e0       	ldi	r24, 0x01	; 1
    28ba:	90 e0       	ldi	r25, 0x00	; 0
    28bc:	02 c0       	rjmp	.+4      	; 0x28c2 <DIO_voidSetPinValue+0xf4>
    28be:	88 0f       	add	r24, r24
    28c0:	99 1f       	adc	r25, r25
    28c2:	6a 95       	dec	r22
    28c4:	e2 f7       	brpl	.-8      	; 0x28be <DIO_voidSetPinValue+0xf0>
    28c6:	80 95       	com	r24
    28c8:	82 23       	and	r24, r18
    28ca:	82 bb       	out	0x12, r24	; 18
    28cc:	08 95       	ret

000028ce <DIO_voidGetPinValue>:
    28ce:	84 30       	cpi	r24, 0x04	; 4
    28d0:	c0 f5       	brcc	.+112    	; 0x2942 <DIO_voidGetPinValue+0x74>
    28d2:	68 30       	cpi	r22, 0x08	; 8
    28d4:	b0 f5       	brcc	.+108    	; 0x2942 <DIO_voidGetPinValue+0x74>
    28d6:	41 15       	cp	r20, r1
    28d8:	51 05       	cpc	r21, r1
    28da:	99 f1       	breq	.+102    	; 0x2942 <DIO_voidGetPinValue+0x74>
    28dc:	81 30       	cpi	r24, 0x01	; 1
    28de:	89 f0       	breq	.+34     	; 0x2902 <DIO_voidGetPinValue+0x34>
    28e0:	28 f0       	brcs	.+10     	; 0x28ec <DIO_voidGetPinValue+0x1e>
    28e2:	82 30       	cpi	r24, 0x02	; 2
    28e4:	c9 f0       	breq	.+50     	; 0x2918 <DIO_voidGetPinValue+0x4a>
    28e6:	83 30       	cpi	r24, 0x03	; 3
    28e8:	11 f1       	breq	.+68     	; 0x292e <DIO_voidGetPinValue+0x60>
    28ea:	08 95       	ret
    28ec:	89 b3       	in	r24, 0x19	; 25
    28ee:	90 e0       	ldi	r25, 0x00	; 0
    28f0:	02 c0       	rjmp	.+4      	; 0x28f6 <DIO_voidGetPinValue+0x28>
    28f2:	95 95       	asr	r25
    28f4:	87 95       	ror	r24
    28f6:	6a 95       	dec	r22
    28f8:	e2 f7       	brpl	.-8      	; 0x28f2 <DIO_voidGetPinValue+0x24>
    28fa:	81 70       	andi	r24, 0x01	; 1
    28fc:	fa 01       	movw	r30, r20
    28fe:	80 83       	st	Z, r24
    2900:	08 95       	ret
    2902:	86 b3       	in	r24, 0x16	; 22
    2904:	90 e0       	ldi	r25, 0x00	; 0
    2906:	02 c0       	rjmp	.+4      	; 0x290c <DIO_voidGetPinValue+0x3e>
    2908:	95 95       	asr	r25
    290a:	87 95       	ror	r24
    290c:	6a 95       	dec	r22
    290e:	e2 f7       	brpl	.-8      	; 0x2908 <DIO_voidGetPinValue+0x3a>
    2910:	81 70       	andi	r24, 0x01	; 1
    2912:	fa 01       	movw	r30, r20
    2914:	80 83       	st	Z, r24
    2916:	08 95       	ret
    2918:	83 b3       	in	r24, 0x13	; 19
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	02 c0       	rjmp	.+4      	; 0x2922 <DIO_voidGetPinValue+0x54>
    291e:	95 95       	asr	r25
    2920:	87 95       	ror	r24
    2922:	6a 95       	dec	r22
    2924:	e2 f7       	brpl	.-8      	; 0x291e <DIO_voidGetPinValue+0x50>
    2926:	81 70       	andi	r24, 0x01	; 1
    2928:	fa 01       	movw	r30, r20
    292a:	80 83       	st	Z, r24
    292c:	08 95       	ret
    292e:	80 b3       	in	r24, 0x10	; 16
    2930:	90 e0       	ldi	r25, 0x00	; 0
    2932:	02 c0       	rjmp	.+4      	; 0x2938 <DIO_voidGetPinValue+0x6a>
    2934:	95 95       	asr	r25
    2936:	87 95       	ror	r24
    2938:	6a 95       	dec	r22
    293a:	e2 f7       	brpl	.-8      	; 0x2934 <DIO_voidGetPinValue+0x66>
    293c:	81 70       	andi	r24, 0x01	; 1
    293e:	fa 01       	movw	r30, r20
    2940:	80 83       	st	Z, r24
    2942:	08 95       	ret

00002944 <DIO_voidActivePinInPullUpResistance>:
    2944:	84 30       	cpi	r24, 0x04	; 4
    2946:	a8 f5       	brcc	.+106    	; 0x29b2 <DIO_voidActivePinInPullUpResistance+0x6e>
    2948:	68 30       	cpi	r22, 0x08	; 8
    294a:	98 f5       	brcc	.+102    	; 0x29b2 <DIO_voidActivePinInPullUpResistance+0x6e>
    294c:	81 30       	cpi	r24, 0x01	; 1
    294e:	89 f0       	breq	.+34     	; 0x2972 <DIO_voidActivePinInPullUpResistance+0x2e>
    2950:	28 f0       	brcs	.+10     	; 0x295c <DIO_voidActivePinInPullUpResistance+0x18>
    2952:	82 30       	cpi	r24, 0x02	; 2
    2954:	c9 f0       	breq	.+50     	; 0x2988 <DIO_voidActivePinInPullUpResistance+0x44>
    2956:	83 30       	cpi	r24, 0x03	; 3
    2958:	11 f1       	breq	.+68     	; 0x299e <DIO_voidActivePinInPullUpResistance+0x5a>
    295a:	08 95       	ret
    295c:	2b b3       	in	r18, 0x1b	; 27
    295e:	81 e0       	ldi	r24, 0x01	; 1
    2960:	90 e0       	ldi	r25, 0x00	; 0
    2962:	02 c0       	rjmp	.+4      	; 0x2968 <DIO_voidActivePinInPullUpResistance+0x24>
    2964:	88 0f       	add	r24, r24
    2966:	99 1f       	adc	r25, r25
    2968:	6a 95       	dec	r22
    296a:	e2 f7       	brpl	.-8      	; 0x2964 <DIO_voidActivePinInPullUpResistance+0x20>
    296c:	82 2b       	or	r24, r18
    296e:	8b bb       	out	0x1b, r24	; 27
    2970:	08 95       	ret
    2972:	28 b3       	in	r18, 0x18	; 24
    2974:	81 e0       	ldi	r24, 0x01	; 1
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	02 c0       	rjmp	.+4      	; 0x297e <DIO_voidActivePinInPullUpResistance+0x3a>
    297a:	88 0f       	add	r24, r24
    297c:	99 1f       	adc	r25, r25
    297e:	6a 95       	dec	r22
    2980:	e2 f7       	brpl	.-8      	; 0x297a <DIO_voidActivePinInPullUpResistance+0x36>
    2982:	82 2b       	or	r24, r18
    2984:	88 bb       	out	0x18, r24	; 24
    2986:	08 95       	ret
    2988:	25 b3       	in	r18, 0x15	; 21
    298a:	81 e0       	ldi	r24, 0x01	; 1
    298c:	90 e0       	ldi	r25, 0x00	; 0
    298e:	02 c0       	rjmp	.+4      	; 0x2994 <DIO_voidActivePinInPullUpResistance+0x50>
    2990:	88 0f       	add	r24, r24
    2992:	99 1f       	adc	r25, r25
    2994:	6a 95       	dec	r22
    2996:	e2 f7       	brpl	.-8      	; 0x2990 <DIO_voidActivePinInPullUpResistance+0x4c>
    2998:	82 2b       	or	r24, r18
    299a:	85 bb       	out	0x15, r24	; 21
    299c:	08 95       	ret
    299e:	22 b3       	in	r18, 0x12	; 18
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	02 c0       	rjmp	.+4      	; 0x29aa <DIO_voidActivePinInPullUpResistance+0x66>
    29a6:	88 0f       	add	r24, r24
    29a8:	99 1f       	adc	r25, r25
    29aa:	6a 95       	dec	r22
    29ac:	e2 f7       	brpl	.-8      	; 0x29a6 <DIO_voidActivePinInPullUpResistance+0x62>
    29ae:	82 2b       	or	r24, r18
    29b0:	82 bb       	out	0x12, r24	; 18
    29b2:	08 95       	ret

000029b4 <GI_voidEnable>:
    29b4:	8f b7       	in	r24, 0x3f	; 63
    29b6:	80 68       	ori	r24, 0x80	; 128
    29b8:	8f bf       	out	0x3f, r24	; 63
    29ba:	08 95       	ret

000029bc <PWM_voidInitChannel_1A>:
    29bc:	8e b5       	in	r24, 0x2e	; 46
    29be:	80 61       	ori	r24, 0x10	; 16
    29c0:	8e bd       	out	0x2e, r24	; 46
    29c2:	8e b5       	in	r24, 0x2e	; 46
    29c4:	88 60       	ori	r24, 0x08	; 8
    29c6:	8e bd       	out	0x2e, r24	; 46
    29c8:	8f b5       	in	r24, 0x2f	; 47
    29ca:	82 60       	ori	r24, 0x02	; 2
    29cc:	8f bd       	out	0x2f, r24	; 47
    29ce:	8f b5       	in	r24, 0x2f	; 47
    29d0:	8e 7f       	andi	r24, 0xFE	; 254
    29d2:	8f bd       	out	0x2f, r24	; 47
    29d4:	8f b5       	in	r24, 0x2f	; 47
    29d6:	80 68       	ori	r24, 0x80	; 128
    29d8:	8f bd       	out	0x2f, r24	; 47
    29da:	8f b5       	in	r24, 0x2f	; 47
    29dc:	8f 7b       	andi	r24, 0xBF	; 191
    29de:	8f bd       	out	0x2f, r24	; 47
    29e0:	08 95       	ret

000029e2 <PWM_voidInitChannel_1B>:
    29e2:	8e b5       	in	r24, 0x2e	; 46
    29e4:	80 61       	ori	r24, 0x10	; 16
    29e6:	8e bd       	out	0x2e, r24	; 46
    29e8:	8e b5       	in	r24, 0x2e	; 46
    29ea:	88 60       	ori	r24, 0x08	; 8
    29ec:	8e bd       	out	0x2e, r24	; 46
    29ee:	8f b5       	in	r24, 0x2f	; 47
    29f0:	82 60       	ori	r24, 0x02	; 2
    29f2:	8f bd       	out	0x2f, r24	; 47
    29f4:	8f b5       	in	r24, 0x2f	; 47
    29f6:	8e 7f       	andi	r24, 0xFE	; 254
    29f8:	8f bd       	out	0x2f, r24	; 47
    29fa:	8f b5       	in	r24, 0x2f	; 47
    29fc:	80 62       	ori	r24, 0x20	; 32
    29fe:	8f bd       	out	0x2f, r24	; 47
    2a00:	8f b5       	in	r24, 0x2f	; 47
    2a02:	8f 7e       	andi	r24, 0xEF	; 239
    2a04:	8f bd       	out	0x2f, r24	; 47
    2a06:	08 95       	ret

00002a08 <PWM_voidGenerateChannel_1A>:
    2a08:	cf 92       	push	r12
    2a0a:	df 92       	push	r13
    2a0c:	ef 92       	push	r14
    2a0e:	ff 92       	push	r15
    2a10:	cf 93       	push	r28
    2a12:	df 93       	push	r29
    2a14:	ec 01       	movw	r28, r24
    2a16:	6a 01       	movw	r12, r20
    2a18:	7b 01       	movw	r14, r22
    2a1a:	20 e0       	ldi	r18, 0x00	; 0
    2a1c:	30 e0       	ldi	r19, 0x00	; 0
    2a1e:	48 ec       	ldi	r20, 0xC8	; 200
    2a20:	52 e4       	ldi	r21, 0x42	; 66
    2a22:	c7 01       	movw	r24, r14
    2a24:	b6 01       	movw	r22, r12
    2a26:	0e 94 19 18 	call	0x3032	; 0x3032 <__cmpsf2>
    2a2a:	18 16       	cp	r1, r24
    2a2c:	94 f1       	brlt	.+100    	; 0x2a92 <PWM_voidGenerateChannel_1A+0x8a>
    2a2e:	9e 01       	movw	r18, r28
    2a30:	40 e0       	ldi	r20, 0x00	; 0
    2a32:	50 e0       	ldi	r21, 0x00	; 0
    2a34:	60 e9       	ldi	r22, 0x90	; 144
    2a36:	70 ed       	ldi	r23, 0xD0	; 208
    2a38:	83 e0       	ldi	r24, 0x03	; 3
    2a3a:	90 e0       	ldi	r25, 0x00	; 0
    2a3c:	0e 94 de 19 	call	0x33bc	; 0x33bc <__udivmodsi4>
    2a40:	21 50       	subi	r18, 0x01	; 1
    2a42:	31 09       	sbc	r19, r1
    2a44:	37 bd       	out	0x27, r19	; 39
    2a46:	26 bd       	out	0x26, r18	; 38
    2a48:	66 b5       	in	r22, 0x26	; 38
    2a4a:	77 b5       	in	r23, 0x27	; 39
    2a4c:	6f 5f       	subi	r22, 0xFF	; 255
    2a4e:	7f 4f       	sbci	r23, 0xFF	; 255
    2a50:	80 e0       	ldi	r24, 0x00	; 0
    2a52:	90 e0       	ldi	r25, 0x00	; 0
    2a54:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    2a58:	a7 01       	movw	r20, r14
    2a5a:	96 01       	movw	r18, r12
    2a5c:	0e 94 71 19 	call	0x32e2	; 0x32e2 <__mulsf3>
    2a60:	20 e0       	ldi	r18, 0x00	; 0
    2a62:	30 e0       	ldi	r19, 0x00	; 0
    2a64:	48 ec       	ldi	r20, 0xC8	; 200
    2a66:	52 e4       	ldi	r21, 0x42	; 66
    2a68:	0e 94 1e 18 	call	0x303c	; 0x303c <__divsf3>
    2a6c:	20 e0       	ldi	r18, 0x00	; 0
    2a6e:	30 e0       	ldi	r19, 0x00	; 0
    2a70:	40 e8       	ldi	r20, 0x80	; 128
    2a72:	5f e3       	ldi	r21, 0x3F	; 63
    2a74:	0e 94 ac 17 	call	0x2f58	; 0x2f58 <__subsf3>
    2a78:	0e 94 90 18 	call	0x3120	; 0x3120 <__fixunssfsi>
    2a7c:	7b bd       	out	0x2b, r23	; 43
    2a7e:	6a bd       	out	0x2a, r22	; 42
    2a80:	8e b5       	in	r24, 0x2e	; 46
    2a82:	81 60       	ori	r24, 0x01	; 1
    2a84:	8e bd       	out	0x2e, r24	; 46
    2a86:	8e b5       	in	r24, 0x2e	; 46
    2a88:	82 60       	ori	r24, 0x02	; 2
    2a8a:	8e bd       	out	0x2e, r24	; 46
    2a8c:	8e b5       	in	r24, 0x2e	; 46
    2a8e:	8b 7f       	andi	r24, 0xFB	; 251
    2a90:	8e bd       	out	0x2e, r24	; 46
    2a92:	df 91       	pop	r29
    2a94:	cf 91       	pop	r28
    2a96:	ff 90       	pop	r15
    2a98:	ef 90       	pop	r14
    2a9a:	df 90       	pop	r13
    2a9c:	cf 90       	pop	r12
    2a9e:	08 95       	ret

00002aa0 <PWM_voidGenerateChannel_1B>:
    2aa0:	cf 92       	push	r12
    2aa2:	df 92       	push	r13
    2aa4:	ef 92       	push	r14
    2aa6:	ff 92       	push	r15
    2aa8:	cf 93       	push	r28
    2aaa:	df 93       	push	r29
    2aac:	ec 01       	movw	r28, r24
    2aae:	6a 01       	movw	r12, r20
    2ab0:	7b 01       	movw	r14, r22
    2ab2:	20 e0       	ldi	r18, 0x00	; 0
    2ab4:	30 e0       	ldi	r19, 0x00	; 0
    2ab6:	48 ec       	ldi	r20, 0xC8	; 200
    2ab8:	52 e4       	ldi	r21, 0x42	; 66
    2aba:	c7 01       	movw	r24, r14
    2abc:	b6 01       	movw	r22, r12
    2abe:	0e 94 19 18 	call	0x3032	; 0x3032 <__cmpsf2>
    2ac2:	18 16       	cp	r1, r24
    2ac4:	94 f1       	brlt	.+100    	; 0x2b2a <PWM_voidGenerateChannel_1B+0x8a>
    2ac6:	9e 01       	movw	r18, r28
    2ac8:	40 e0       	ldi	r20, 0x00	; 0
    2aca:	50 e0       	ldi	r21, 0x00	; 0
    2acc:	60 e9       	ldi	r22, 0x90	; 144
    2ace:	70 ed       	ldi	r23, 0xD0	; 208
    2ad0:	83 e0       	ldi	r24, 0x03	; 3
    2ad2:	90 e0       	ldi	r25, 0x00	; 0
    2ad4:	0e 94 de 19 	call	0x33bc	; 0x33bc <__udivmodsi4>
    2ad8:	21 50       	subi	r18, 0x01	; 1
    2ada:	31 09       	sbc	r19, r1
    2adc:	37 bd       	out	0x27, r19	; 39
    2ade:	26 bd       	out	0x26, r18	; 38
    2ae0:	66 b5       	in	r22, 0x26	; 38
    2ae2:	77 b5       	in	r23, 0x27	; 39
    2ae4:	6f 5f       	subi	r22, 0xFF	; 255
    2ae6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ae8:	80 e0       	ldi	r24, 0x00	; 0
    2aea:	90 e0       	ldi	r25, 0x00	; 0
    2aec:	0e 94 bf 18 	call	0x317e	; 0x317e <__floatunsisf>
    2af0:	a7 01       	movw	r20, r14
    2af2:	96 01       	movw	r18, r12
    2af4:	0e 94 71 19 	call	0x32e2	; 0x32e2 <__mulsf3>
    2af8:	20 e0       	ldi	r18, 0x00	; 0
    2afa:	30 e0       	ldi	r19, 0x00	; 0
    2afc:	48 ec       	ldi	r20, 0xC8	; 200
    2afe:	52 e4       	ldi	r21, 0x42	; 66
    2b00:	0e 94 1e 18 	call	0x303c	; 0x303c <__divsf3>
    2b04:	20 e0       	ldi	r18, 0x00	; 0
    2b06:	30 e0       	ldi	r19, 0x00	; 0
    2b08:	40 e8       	ldi	r20, 0x80	; 128
    2b0a:	5f e3       	ldi	r21, 0x3F	; 63
    2b0c:	0e 94 ac 17 	call	0x2f58	; 0x2f58 <__subsf3>
    2b10:	0e 94 90 18 	call	0x3120	; 0x3120 <__fixunssfsi>
    2b14:	79 bd       	out	0x29, r23	; 41
    2b16:	68 bd       	out	0x28, r22	; 40
    2b18:	8e b5       	in	r24, 0x2e	; 46
    2b1a:	81 60       	ori	r24, 0x01	; 1
    2b1c:	8e bd       	out	0x2e, r24	; 46
    2b1e:	8e b5       	in	r24, 0x2e	; 46
    2b20:	82 60       	ori	r24, 0x02	; 2
    2b22:	8e bd       	out	0x2e, r24	; 46
    2b24:	8e b5       	in	r24, 0x2e	; 46
    2b26:	8b 7f       	andi	r24, 0xFB	; 251
    2b28:	8e bd       	out	0x2e, r24	; 46
    2b2a:	df 91       	pop	r29
    2b2c:	cf 91       	pop	r28
    2b2e:	ff 90       	pop	r15
    2b30:	ef 90       	pop	r14
    2b32:	df 90       	pop	r13
    2b34:	cf 90       	pop	r12
    2b36:	08 95       	ret

00002b38 <TMR0_voidInit>:
    2b38:	83 b7       	in	r24, 0x33	; 51
    2b3a:	8f 7b       	andi	r24, 0xBF	; 191
    2b3c:	83 bf       	out	0x33, r24	; 51
    2b3e:	83 b7       	in	r24, 0x33	; 51
    2b40:	88 60       	ori	r24, 0x08	; 8
    2b42:	83 bf       	out	0x33, r24	; 51
    2b44:	83 b7       	in	r24, 0x33	; 51
    2b46:	8f 7e       	andi	r24, 0xEF	; 239
    2b48:	83 bf       	out	0x33, r24	; 51
    2b4a:	83 b7       	in	r24, 0x33	; 51
    2b4c:	8f 7d       	andi	r24, 0xDF	; 223
    2b4e:	83 bf       	out	0x33, r24	; 51
    2b50:	89 b7       	in	r24, 0x39	; 57
    2b52:	82 60       	ori	r24, 0x02	; 2
    2b54:	89 bf       	out	0x39, r24	; 57
    2b56:	89 ef       	ldi	r24, 0xF9	; 249
    2b58:	8c bf       	out	0x3c, r24	; 60
    2b5a:	08 95       	ret

00002b5c <TMR0_voidStart>:
    2b5c:	83 b7       	in	r24, 0x33	; 51
    2b5e:	81 60       	ori	r24, 0x01	; 1
    2b60:	83 bf       	out	0x33, r24	; 51
    2b62:	83 b7       	in	r24, 0x33	; 51
    2b64:	82 60       	ori	r24, 0x02	; 2
    2b66:	83 bf       	out	0x33, r24	; 51
    2b68:	83 b7       	in	r24, 0x33	; 51
    2b6a:	8b 7f       	andi	r24, 0xFB	; 251
    2b6c:	83 bf       	out	0x33, r24	; 51
    2b6e:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <local_u16Counter+0x1>
    2b72:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <local_u16Counter>
    2b76:	08 95       	ret

00002b78 <TMR0_voidStop>:
    2b78:	83 b7       	in	r24, 0x33	; 51
    2b7a:	8e 7f       	andi	r24, 0xFE	; 254
    2b7c:	83 bf       	out	0x33, r24	; 51
    2b7e:	83 b7       	in	r24, 0x33	; 51
    2b80:	8d 7f       	andi	r24, 0xFD	; 253
    2b82:	83 bf       	out	0x33, r24	; 51
    2b84:	83 b7       	in	r24, 0x33	; 51
    2b86:	8b 7f       	andi	r24, 0xFB	; 251
    2b88:	83 bf       	out	0x33, r24	; 51
    2b8a:	08 95       	ret

00002b8c <TMR0_SetCallBackCTC>:
    2b8c:	00 97       	sbiw	r24, 0x00	; 0
    2b8e:	21 f0       	breq	.+8      	; 0x2b98 <TMR0_SetCallBackCTC+0xc>
    2b90:	90 93 79 04 	sts	0x0479, r25	; 0x800479 <PRV_pFunCallBackCTC+0x1>
    2b94:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <PRV_pFunCallBackCTC>
    2b98:	08 95       	ret

00002b9a <TMR0clear_flag>:
    2b9a:	88 b7       	in	r24, 0x38	; 56
    2b9c:	82 60       	ori	r24, 0x02	; 2
    2b9e:	88 bf       	out	0x38, r24	; 56
    2ba0:	88 b7       	in	r24, 0x38	; 56
    2ba2:	81 60       	ori	r24, 0x01	; 1
    2ba4:	88 bf       	out	0x38, r24	; 56
    2ba6:	08 95       	ret

00002ba8 <__vector_11>:
    2ba8:	1f 92       	push	r1
    2baa:	0f 92       	push	r0
    2bac:	0f b6       	in	r0, 0x3f	; 63
    2bae:	0f 92       	push	r0
    2bb0:	11 24       	eor	r1, r1
    2bb2:	2f 93       	push	r18
    2bb4:	3f 93       	push	r19
    2bb6:	4f 93       	push	r20
    2bb8:	5f 93       	push	r21
    2bba:	6f 93       	push	r22
    2bbc:	7f 93       	push	r23
    2bbe:	8f 93       	push	r24
    2bc0:	9f 93       	push	r25
    2bc2:	af 93       	push	r26
    2bc4:	bf 93       	push	r27
    2bc6:	ef 93       	push	r30
    2bc8:	ff 93       	push	r31
    2bca:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <local_u16Counter>
    2bce:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <local_u16Counter+0x1>
    2bd2:	01 96       	adiw	r24, 0x01	; 1
    2bd4:	90 93 77 04 	sts	0x0477, r25	; 0x800477 <local_u16Counter+0x1>
    2bd8:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <local_u16Counter>
    2bdc:	88 3e       	cpi	r24, 0xE8	; 232
    2bde:	93 40       	sbci	r25, 0x03	; 3
    2be0:	69 f4       	brne	.+26     	; 0x2bfc <__vector_11+0x54>
    2be2:	81 e7       	ldi	r24, 0x71	; 113
    2be4:	82 bf       	out	0x32, r24	; 50
    2be6:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <local_u16Counter+0x1>
    2bea:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <local_u16Counter>
    2bee:	e0 91 7a 04 	lds	r30, 0x047A	; 0x80047a <PRV_pFunCallBackOVF>
    2bf2:	f0 91 7b 04 	lds	r31, 0x047B	; 0x80047b <PRV_pFunCallBackOVF+0x1>
    2bf6:	30 97       	sbiw	r30, 0x00	; 0
    2bf8:	09 f0       	breq	.+2      	; 0x2bfc <__vector_11+0x54>
    2bfa:	09 95       	icall
    2bfc:	ff 91       	pop	r31
    2bfe:	ef 91       	pop	r30
    2c00:	bf 91       	pop	r27
    2c02:	af 91       	pop	r26
    2c04:	9f 91       	pop	r25
    2c06:	8f 91       	pop	r24
    2c08:	7f 91       	pop	r23
    2c0a:	6f 91       	pop	r22
    2c0c:	5f 91       	pop	r21
    2c0e:	4f 91       	pop	r20
    2c10:	3f 91       	pop	r19
    2c12:	2f 91       	pop	r18
    2c14:	0f 90       	pop	r0
    2c16:	0f be       	out	0x3f, r0	; 63
    2c18:	0f 90       	pop	r0
    2c1a:	1f 90       	pop	r1
    2c1c:	18 95       	reti

00002c1e <__vector_10>:
    2c1e:	1f 92       	push	r1
    2c20:	0f 92       	push	r0
    2c22:	0f b6       	in	r0, 0x3f	; 63
    2c24:	0f 92       	push	r0
    2c26:	11 24       	eor	r1, r1
    2c28:	2f 93       	push	r18
    2c2a:	3f 93       	push	r19
    2c2c:	4f 93       	push	r20
    2c2e:	5f 93       	push	r21
    2c30:	6f 93       	push	r22
    2c32:	7f 93       	push	r23
    2c34:	8f 93       	push	r24
    2c36:	9f 93       	push	r25
    2c38:	af 93       	push	r26
    2c3a:	bf 93       	push	r27
    2c3c:	ef 93       	push	r30
    2c3e:	ff 93       	push	r31
    2c40:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <local_u16Counter>
    2c44:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <local_u16Counter+0x1>
    2c48:	01 96       	adiw	r24, 0x01	; 1
    2c4a:	90 93 77 04 	sts	0x0477, r25	; 0x800477 <local_u16Counter+0x1>
    2c4e:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <local_u16Counter>
    2c52:	88 38       	cpi	r24, 0x88	; 136
    2c54:	93 41       	sbci	r25, 0x13	; 19
    2c56:	69 f4       	brne	.+26     	; 0x2c72 <__vector_10+0x54>
    2c58:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <local_u16Counter+0x1>
    2c5c:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <local_u16Counter>
    2c60:	e0 91 78 04 	lds	r30, 0x0478	; 0x800478 <PRV_pFunCallBackCTC>
    2c64:	f0 91 79 04 	lds	r31, 0x0479	; 0x800479 <PRV_pFunCallBackCTC+0x1>
    2c68:	30 97       	sbiw	r30, 0x00	; 0
    2c6a:	19 f0       	breq	.+6      	; 0x2c72 <__vector_10+0x54>
    2c6c:	09 95       	icall
    2c6e:	0e 94 cd 15 	call	0x2b9a	; 0x2b9a <TMR0clear_flag>
    2c72:	ff 91       	pop	r31
    2c74:	ef 91       	pop	r30
    2c76:	bf 91       	pop	r27
    2c78:	af 91       	pop	r26
    2c7a:	9f 91       	pop	r25
    2c7c:	8f 91       	pop	r24
    2c7e:	7f 91       	pop	r23
    2c80:	6f 91       	pop	r22
    2c82:	5f 91       	pop	r21
    2c84:	4f 91       	pop	r20
    2c86:	3f 91       	pop	r19
    2c88:	2f 91       	pop	r18
    2c8a:	0f 90       	pop	r0
    2c8c:	0f be       	out	0x3f, r0	; 63
    2c8e:	0f 90       	pop	r0
    2c90:	1f 90       	pop	r1
    2c92:	18 95       	reti

00002c94 <TMR2_voidInit>:
    2c94:	85 b5       	in	r24, 0x25	; 37
    2c96:	8f 7b       	andi	r24, 0xBF	; 191
    2c98:	85 bd       	out	0x25, r24	; 37
    2c9a:	85 b5       	in	r24, 0x25	; 37
    2c9c:	88 60       	ori	r24, 0x08	; 8
    2c9e:	85 bd       	out	0x25, r24	; 37
    2ca0:	85 b5       	in	r24, 0x25	; 37
    2ca2:	8f 7e       	andi	r24, 0xEF	; 239
    2ca4:	85 bd       	out	0x25, r24	; 37
    2ca6:	85 b5       	in	r24, 0x25	; 37
    2ca8:	8f 7d       	andi	r24, 0xDF	; 223
    2caa:	85 bd       	out	0x25, r24	; 37
    2cac:	89 b7       	in	r24, 0x39	; 57
    2cae:	80 68       	ori	r24, 0x80	; 128
    2cb0:	89 bf       	out	0x39, r24	; 57
    2cb2:	89 ef       	ldi	r24, 0xF9	; 249
    2cb4:	83 bd       	out	0x23, r24	; 35
    2cb6:	08 95       	ret

00002cb8 <TMR2_voidStart>:
    2cb8:	85 b5       	in	r24, 0x25	; 37
    2cba:	81 60       	ori	r24, 0x01	; 1
    2cbc:	85 bd       	out	0x25, r24	; 37
    2cbe:	85 b5       	in	r24, 0x25	; 37
    2cc0:	82 60       	ori	r24, 0x02	; 2
    2cc2:	85 bd       	out	0x25, r24	; 37
    2cc4:	85 b5       	in	r24, 0x25	; 37
    2cc6:	8b 7f       	andi	r24, 0xFB	; 251
    2cc8:	85 bd       	out	0x25, r24	; 37
    2cca:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <local_u16Counter+0x1>
    2cce:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <local_u16Counter>
    2cd2:	08 95       	ret

00002cd4 <TMR2_SetCallBackCTC>:
    2cd4:	00 97       	sbiw	r24, 0x00	; 0
    2cd6:	21 f0       	breq	.+8      	; 0x2ce0 <TMR2_SetCallBackCTC+0xc>
    2cd8:	90 93 7f 04 	sts	0x047F, r25	; 0x80047f <PRV_pFunCallBackCTC+0x1>
    2cdc:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <PRV_pFunCallBackCTC>
    2ce0:	08 95       	ret

00002ce2 <TMR2_clear_flag>:
    2ce2:	88 b7       	in	r24, 0x38	; 56
    2ce4:	80 68       	ori	r24, 0x80	; 128
    2ce6:	88 bf       	out	0x38, r24	; 56
    2ce8:	88 b7       	in	r24, 0x38	; 56
    2cea:	80 64       	ori	r24, 0x40	; 64
    2cec:	88 bf       	out	0x38, r24	; 56
    2cee:	08 95       	ret

00002cf0 <__vector_5>:
    2cf0:	1f 92       	push	r1
    2cf2:	0f 92       	push	r0
    2cf4:	0f b6       	in	r0, 0x3f	; 63
    2cf6:	0f 92       	push	r0
    2cf8:	11 24       	eor	r1, r1
    2cfa:	2f 93       	push	r18
    2cfc:	3f 93       	push	r19
    2cfe:	4f 93       	push	r20
    2d00:	5f 93       	push	r21
    2d02:	6f 93       	push	r22
    2d04:	7f 93       	push	r23
    2d06:	8f 93       	push	r24
    2d08:	9f 93       	push	r25
    2d0a:	af 93       	push	r26
    2d0c:	bf 93       	push	r27
    2d0e:	ef 93       	push	r30
    2d10:	ff 93       	push	r31
    2d12:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <local_u16Counter>
    2d16:	90 91 7d 04 	lds	r25, 0x047D	; 0x80047d <local_u16Counter+0x1>
    2d1a:	01 96       	adiw	r24, 0x01	; 1
    2d1c:	90 93 7d 04 	sts	0x047D, r25	; 0x80047d <local_u16Counter+0x1>
    2d20:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <local_u16Counter>
    2d24:	88 3e       	cpi	r24, 0xE8	; 232
    2d26:	93 40       	sbci	r25, 0x03	; 3
    2d28:	69 f4       	brne	.+26     	; 0x2d44 <__vector_5+0x54>
    2d2a:	81 e7       	ldi	r24, 0x71	; 113
    2d2c:	84 bd       	out	0x24, r24	; 36
    2d2e:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <local_u16Counter+0x1>
    2d32:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <local_u16Counter>
    2d36:	e0 91 80 04 	lds	r30, 0x0480	; 0x800480 <PRV_pFunCallBackOVF>
    2d3a:	f0 91 81 04 	lds	r31, 0x0481	; 0x800481 <PRV_pFunCallBackOVF+0x1>
    2d3e:	30 97       	sbiw	r30, 0x00	; 0
    2d40:	09 f0       	breq	.+2      	; 0x2d44 <__vector_5+0x54>
    2d42:	09 95       	icall
    2d44:	ff 91       	pop	r31
    2d46:	ef 91       	pop	r30
    2d48:	bf 91       	pop	r27
    2d4a:	af 91       	pop	r26
    2d4c:	9f 91       	pop	r25
    2d4e:	8f 91       	pop	r24
    2d50:	7f 91       	pop	r23
    2d52:	6f 91       	pop	r22
    2d54:	5f 91       	pop	r21
    2d56:	4f 91       	pop	r20
    2d58:	3f 91       	pop	r19
    2d5a:	2f 91       	pop	r18
    2d5c:	0f 90       	pop	r0
    2d5e:	0f be       	out	0x3f, r0	; 63
    2d60:	0f 90       	pop	r0
    2d62:	1f 90       	pop	r1
    2d64:	18 95       	reti

00002d66 <__vector_4>:
    2d66:	1f 92       	push	r1
    2d68:	0f 92       	push	r0
    2d6a:	0f b6       	in	r0, 0x3f	; 63
    2d6c:	0f 92       	push	r0
    2d6e:	11 24       	eor	r1, r1
    2d70:	2f 93       	push	r18
    2d72:	3f 93       	push	r19
    2d74:	4f 93       	push	r20
    2d76:	5f 93       	push	r21
    2d78:	6f 93       	push	r22
    2d7a:	7f 93       	push	r23
    2d7c:	8f 93       	push	r24
    2d7e:	9f 93       	push	r25
    2d80:	af 93       	push	r26
    2d82:	bf 93       	push	r27
    2d84:	ef 93       	push	r30
    2d86:	ff 93       	push	r31
    2d88:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <local_u16Counter>
    2d8c:	90 91 7d 04 	lds	r25, 0x047D	; 0x80047d <local_u16Counter+0x1>
    2d90:	01 96       	adiw	r24, 0x01	; 1
    2d92:	90 93 7d 04 	sts	0x047D, r25	; 0x80047d <local_u16Counter+0x1>
    2d96:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <local_u16Counter>
    2d9a:	88 38       	cpi	r24, 0x88	; 136
    2d9c:	93 41       	sbci	r25, 0x13	; 19
    2d9e:	69 f4       	brne	.+26     	; 0x2dba <__vector_4+0x54>
    2da0:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <local_u16Counter+0x1>
    2da4:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <local_u16Counter>
    2da8:	e0 91 7e 04 	lds	r30, 0x047E	; 0x80047e <PRV_pFunCallBackCTC>
    2dac:	f0 91 7f 04 	lds	r31, 0x047F	; 0x80047f <PRV_pFunCallBackCTC+0x1>
    2db0:	30 97       	sbiw	r30, 0x00	; 0
    2db2:	19 f0       	breq	.+6      	; 0x2dba <__vector_4+0x54>
    2db4:	09 95       	icall
    2db6:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <TMR2_clear_flag>
    2dba:	ff 91       	pop	r31
    2dbc:	ef 91       	pop	r30
    2dbe:	bf 91       	pop	r27
    2dc0:	af 91       	pop	r26
    2dc2:	9f 91       	pop	r25
    2dc4:	8f 91       	pop	r24
    2dc6:	7f 91       	pop	r23
    2dc8:	6f 91       	pop	r22
    2dca:	5f 91       	pop	r21
    2dcc:	4f 91       	pop	r20
    2dce:	3f 91       	pop	r19
    2dd0:	2f 91       	pop	r18
    2dd2:	0f 90       	pop	r0
    2dd4:	0f be       	out	0x3f, r0	; 63
    2dd6:	0f 90       	pop	r0
    2dd8:	1f 90       	pop	r1
    2dda:	18 95       	reti

00002ddc <TWI_voidInitMaster>:
    2ddc:	8c e0       	ldi	r24, 0x0C	; 12
    2dde:	80 b9       	out	0x00, r24	; 0
    2de0:	81 b1       	in	r24, 0x01	; 1
    2de2:	8d 7f       	andi	r24, 0xFD	; 253
    2de4:	81 b9       	out	0x01, r24	; 1
    2de6:	81 b1       	in	r24, 0x01	; 1
    2de8:	8e 7f       	andi	r24, 0xFE	; 254
    2dea:	81 b9       	out	0x01, r24	; 1
    2dec:	86 b7       	in	r24, 0x36	; 54
    2dee:	84 60       	ori	r24, 0x04	; 4
    2df0:	86 bf       	out	0x36, r24	; 54
    2df2:	08 95       	ret

00002df4 <TWI_voidSendStartCondition>:
    2df4:	86 b7       	in	r24, 0x36	; 54
    2df6:	80 62       	ori	r24, 0x20	; 32
    2df8:	86 bf       	out	0x36, r24	; 54
    2dfa:	86 b7       	in	r24, 0x36	; 54
    2dfc:	80 68       	ori	r24, 0x80	; 128
    2dfe:	86 bf       	out	0x36, r24	; 54
    2e00:	06 b6       	in	r0, 0x36	; 54
    2e02:	07 fe       	sbrs	r0, 7
    2e04:	fd cf       	rjmp	.-6      	; 0x2e00 <TWI_voidSendStartCondition+0xc>
    2e06:	81 b1       	in	r24, 0x01	; 1
    2e08:	88 7f       	andi	r24, 0xF8	; 248
    2e0a:	88 30       	cpi	r24, 0x08	; 8
    2e0c:	e1 f7       	brne	.-8      	; 0x2e06 <TWI_voidSendStartCondition+0x12>
    2e0e:	08 95       	ret

00002e10 <TWI_voidSendRepeatedStartCondition>:
    2e10:	86 b7       	in	r24, 0x36	; 54
    2e12:	80 62       	ori	r24, 0x20	; 32
    2e14:	86 bf       	out	0x36, r24	; 54
    2e16:	86 b7       	in	r24, 0x36	; 54
    2e18:	80 68       	ori	r24, 0x80	; 128
    2e1a:	86 bf       	out	0x36, r24	; 54
    2e1c:	06 b6       	in	r0, 0x36	; 54
    2e1e:	07 fe       	sbrs	r0, 7
    2e20:	fd cf       	rjmp	.-6      	; 0x2e1c <TWI_voidSendRepeatedStartCondition+0xc>
    2e22:	81 b1       	in	r24, 0x01	; 1
    2e24:	88 7f       	andi	r24, 0xF8	; 248
    2e26:	80 31       	cpi	r24, 0x10	; 16
    2e28:	e1 f7       	brne	.-8      	; 0x2e22 <TWI_voidSendRepeatedStartCondition+0x12>
    2e2a:	08 95       	ret

00002e2c <TWI_voidSendStopCondition>:
    2e2c:	86 b7       	in	r24, 0x36	; 54
    2e2e:	80 61       	ori	r24, 0x10	; 16
    2e30:	86 bf       	out	0x36, r24	; 54
    2e32:	86 b7       	in	r24, 0x36	; 54
    2e34:	80 68       	ori	r24, 0x80	; 128
    2e36:	86 bf       	out	0x36, r24	; 54
    2e38:	08 95       	ret

00002e3a <TWI_voidSendSlaveAddWithWrite>:
    2e3a:	88 23       	and	r24, r24
    2e3c:	94 f0       	brlt	.+36     	; 0x2e62 <TWI_voidSendSlaveAddWithWrite+0x28>
    2e3e:	88 0f       	add	r24, r24
    2e40:	83 b9       	out	0x03, r24	; 3
    2e42:	83 b1       	in	r24, 0x03	; 3
    2e44:	8e 7f       	andi	r24, 0xFE	; 254
    2e46:	83 b9       	out	0x03, r24	; 3
    2e48:	86 b7       	in	r24, 0x36	; 54
    2e4a:	8f 7d       	andi	r24, 0xDF	; 223
    2e4c:	86 bf       	out	0x36, r24	; 54
    2e4e:	86 b7       	in	r24, 0x36	; 54
    2e50:	80 68       	ori	r24, 0x80	; 128
    2e52:	86 bf       	out	0x36, r24	; 54
    2e54:	06 b6       	in	r0, 0x36	; 54
    2e56:	07 fe       	sbrs	r0, 7
    2e58:	fd cf       	rjmp	.-6      	; 0x2e54 <TWI_voidSendSlaveAddWithWrite+0x1a>
    2e5a:	81 b1       	in	r24, 0x01	; 1
    2e5c:	88 7f       	andi	r24, 0xF8	; 248
    2e5e:	88 31       	cpi	r24, 0x18	; 24
    2e60:	e1 f7       	brne	.-8      	; 0x2e5a <TWI_voidSendSlaveAddWithWrite+0x20>
    2e62:	08 95       	ret

00002e64 <TWI_voidSendSlaveAddWithRead>:
    2e64:	88 23       	and	r24, r24
    2e66:	94 f0       	brlt	.+36     	; 0x2e8c <TWI_voidSendSlaveAddWithRead+0x28>
    2e68:	88 0f       	add	r24, r24
    2e6a:	83 b9       	out	0x03, r24	; 3
    2e6c:	83 b1       	in	r24, 0x03	; 3
    2e6e:	81 60       	ori	r24, 0x01	; 1
    2e70:	83 b9       	out	0x03, r24	; 3
    2e72:	86 b7       	in	r24, 0x36	; 54
    2e74:	8f 7d       	andi	r24, 0xDF	; 223
    2e76:	86 bf       	out	0x36, r24	; 54
    2e78:	86 b7       	in	r24, 0x36	; 54
    2e7a:	80 68       	ori	r24, 0x80	; 128
    2e7c:	86 bf       	out	0x36, r24	; 54
    2e7e:	06 b6       	in	r0, 0x36	; 54
    2e80:	07 fe       	sbrs	r0, 7
    2e82:	fd cf       	rjmp	.-6      	; 0x2e7e <TWI_voidSendSlaveAddWithRead+0x1a>
    2e84:	81 b1       	in	r24, 0x01	; 1
    2e86:	88 7f       	andi	r24, 0xF8	; 248
    2e88:	80 34       	cpi	r24, 0x40	; 64
    2e8a:	e1 f7       	brne	.-8      	; 0x2e84 <TWI_voidSendSlaveAddWithRead+0x20>
    2e8c:	08 95       	ret

00002e8e <TWI_voidTransmitMasterDataByte>:
    2e8e:	83 b9       	out	0x03, r24	; 3
    2e90:	86 b7       	in	r24, 0x36	; 54
    2e92:	80 68       	ori	r24, 0x80	; 128
    2e94:	86 bf       	out	0x36, r24	; 54
    2e96:	06 b6       	in	r0, 0x36	; 54
    2e98:	07 fe       	sbrs	r0, 7
    2e9a:	fd cf       	rjmp	.-6      	; 0x2e96 <TWI_voidTransmitMasterDataByte+0x8>
    2e9c:	81 b1       	in	r24, 0x01	; 1
    2e9e:	88 7f       	andi	r24, 0xF8	; 248
    2ea0:	88 32       	cpi	r24, 0x28	; 40
    2ea2:	e1 f7       	brne	.-8      	; 0x2e9c <TWI_voidTransmitMasterDataByte+0xe>
    2ea4:	08 95       	ret

00002ea6 <TWI_voidRecieveMasterDataByteWithAch>:
    2ea6:	fc 01       	movw	r30, r24
    2ea8:	89 2b       	or	r24, r25
    2eaa:	91 f0       	breq	.+36     	; 0x2ed0 <TWI_voidRecieveMasterDataByteWithAch+0x2a>
    2eac:	96 b7       	in	r25, 0x36	; 54
    2eae:	90 64       	ori	r25, 0x40	; 64
    2eb0:	96 bf       	out	0x36, r25	; 54
    2eb2:	96 b7       	in	r25, 0x36	; 54
    2eb4:	90 68       	ori	r25, 0x80	; 128
    2eb6:	96 bf       	out	0x36, r25	; 54
    2eb8:	06 b6       	in	r0, 0x36	; 54
    2eba:	07 fe       	sbrs	r0, 7
    2ebc:	fd cf       	rjmp	.-6      	; 0x2eb8 <TWI_voidRecieveMasterDataByteWithAch+0x12>
    2ebe:	91 b1       	in	r25, 0x01	; 1
    2ec0:	98 7f       	andi	r25, 0xF8	; 248
    2ec2:	90 35       	cpi	r25, 0x50	; 80
    2ec4:	e1 f7       	brne	.-8      	; 0x2ebe <TWI_voidRecieveMasterDataByteWithAch+0x18>
    2ec6:	83 b1       	in	r24, 0x03	; 3
    2ec8:	80 83       	st	Z, r24
    2eca:	86 b7       	in	r24, 0x36	; 54
    2ecc:	8f 7b       	andi	r24, 0xBF	; 191
    2ece:	86 bf       	out	0x36, r24	; 54
    2ed0:	08 95       	ret

00002ed2 <TWI_voidRecieveMasterDataByteWithNAch>:
    2ed2:	fc 01       	movw	r30, r24
    2ed4:	89 2b       	or	r24, r25
    2ed6:	61 f0       	breq	.+24     	; 0x2ef0 <TWI_voidRecieveMasterDataByteWithNAch+0x1e>
    2ed8:	96 b7       	in	r25, 0x36	; 54
    2eda:	90 68       	ori	r25, 0x80	; 128
    2edc:	96 bf       	out	0x36, r25	; 54
    2ede:	06 b6       	in	r0, 0x36	; 54
    2ee0:	07 fe       	sbrs	r0, 7
    2ee2:	fd cf       	rjmp	.-6      	; 0x2ede <TWI_voidRecieveMasterDataByteWithNAch+0xc>
    2ee4:	91 b1       	in	r25, 0x01	; 1
    2ee6:	98 7f       	andi	r25, 0xF8	; 248
    2ee8:	98 35       	cpi	r25, 0x58	; 88
    2eea:	e1 f7       	brne	.-8      	; 0x2ee4 <TWI_voidRecieveMasterDataByteWithNAch+0x12>
    2eec:	83 b1       	in	r24, 0x03	; 3
    2eee:	80 83       	st	Z, r24
    2ef0:	08 95       	ret

00002ef2 <UART_voidInit>:
			}
			_delay_ms(1);
			Local_u16TimeoutCounter++;
		}
		/*Read data to data register*/
		*copy_pu8RxData=UDR_REG;
    2ef2:	8b b1       	in	r24, 0x0b	; 11
    2ef4:	8d 7f       	andi	r24, 0xFD	; 253
    2ef6:	8b b9       	out	0x0b, r24	; 11
    2ef8:	87 e6       	ldi	r24, 0x67	; 103
    2efa:	89 b9       	out	0x09, r24	; 9
    2efc:	8a b1       	in	r24, 0x0a	; 10
    2efe:	8b 7f       	andi	r24, 0xFB	; 251
    2f00:	8a b9       	out	0x0a, r24	; 10
    2f02:	86 e8       	ldi	r24, 0x86	; 134
    2f04:	80 bd       	out	0x20, r24	; 32
    2f06:	8a b1       	in	r24, 0x0a	; 10
    2f08:	80 61       	ori	r24, 0x10	; 16
    2f0a:	8a b9       	out	0x0a, r24	; 10
    2f0c:	8a b1       	in	r24, 0x0a	; 10
    2f0e:	88 60       	ori	r24, 0x08	; 8
    2f10:	8a b9       	out	0x0a, r24	; 10
    2f12:	08 95       	ret

00002f14 <UART_voidTxChar>:
    2f14:	8c b9       	out	0x0c, r24	; 12
    2f16:	5d 9b       	sbis	0x0b, 5	; 11
    2f18:	fe cf       	rjmp	.-4      	; 0x2f16 <UART_voidTxChar+0x2>
    2f1a:	08 95       	ret

00002f1c <UART_voidRxChar>:
    2f1c:	00 97       	sbiw	r24, 0x00	; 0
    2f1e:	29 f0       	breq	.+10     	; 0x2f2a <UART_voidRxChar+0xe>
    2f20:	5f 9b       	sbis	0x0b, 7	; 11
    2f22:	fe cf       	rjmp	.-4      	; 0x2f20 <UART_voidRxChar+0x4>
    2f24:	2c b1       	in	r18, 0x0c	; 12
    2f26:	fc 01       	movw	r30, r24
    2f28:	20 83       	st	Z, r18
    2f2a:	08 95       	ret

00002f2c <UART_voidTxString>:
	{
		
	}
}
void UART_voidTxString	(u8* copy_pu8TxString)
{
    2f2c:	0f 93       	push	r16
    2f2e:	1f 93       	push	r17
    2f30:	cf 93       	push	r28
	
	if(copy_pu8TxString!=NULL)
    2f32:	00 97       	sbiw	r24, 0x00	; 0
    2f34:	29 f4       	brne	.+10     	; 0x2f40 <UART_voidTxString+0x14>
    2f36:	0c c0       	rjmp	.+24     	; 0x2f50 <UART_voidTxString+0x24>
		
		/*loop until Null char*/
		while( copy_pu8TxString[Local_u8Counter] != '\0')
		{
			/*send data[i]*/
			UART_voidTxChar(copy_pu8TxString[Local_u8Counter]);
    2f38:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <UART_voidTxChar>
			
			/*increase counter*/
			Local_u8Counter++;
    2f3c:	cf 5f       	subi	r28, 0xFF	; 255
    2f3e:	02 c0       	rjmp	.+4      	; 0x2f44 <UART_voidTxString+0x18>
    2f40:	8c 01       	movw	r16, r24
    2f42:	c0 e0       	ldi	r28, 0x00	; 0
	{
		/*Init counter*/
		u8 Local_u8Counter=0;
		
		/*loop until Null char*/
		while( copy_pu8TxString[Local_u8Counter] != '\0')
    2f44:	f8 01       	movw	r30, r16
    2f46:	ec 0f       	add	r30, r28
    2f48:	f1 1d       	adc	r31, r1
    2f4a:	80 81       	ld	r24, Z
    2f4c:	81 11       	cpse	r24, r1
    2f4e:	f4 cf       	rjmp	.-24     	; 0x2f38 <UART_voidTxString+0xc>
	{
		//error state
	}
	
	
}
    2f50:	cf 91       	pop	r28
    2f52:	1f 91       	pop	r17
    2f54:	0f 91       	pop	r16
    2f56:	08 95       	ret

00002f58 <__subsf3>:
    2f58:	50 58       	subi	r21, 0x80	; 128

00002f5a <__addsf3>:
    2f5a:	bb 27       	eor	r27, r27
    2f5c:	aa 27       	eor	r26, r26
    2f5e:	0e 94 c4 17 	call	0x2f88	; 0x2f88 <__addsf3x>
    2f62:	0c 94 37 19 	jmp	0x326e	; 0x326e <__fp_round>
    2f66:	0e 94 29 19 	call	0x3252	; 0x3252 <__fp_pscA>
    2f6a:	38 f0       	brcs	.+14     	; 0x2f7a <__addsf3+0x20>
    2f6c:	0e 94 30 19 	call	0x3260	; 0x3260 <__fp_pscB>
    2f70:	20 f0       	brcs	.+8      	; 0x2f7a <__addsf3+0x20>
    2f72:	39 f4       	brne	.+14     	; 0x2f82 <__addsf3+0x28>
    2f74:	9f 3f       	cpi	r25, 0xFF	; 255
    2f76:	19 f4       	brne	.+6      	; 0x2f7e <__addsf3+0x24>
    2f78:	26 f4       	brtc	.+8      	; 0x2f82 <__addsf3+0x28>
    2f7a:	0c 94 26 19 	jmp	0x324c	; 0x324c <__fp_nan>
    2f7e:	0e f4       	brtc	.+2      	; 0x2f82 <__addsf3+0x28>
    2f80:	e0 95       	com	r30
    2f82:	e7 fb       	bst	r30, 7
    2f84:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__fp_inf>

00002f88 <__addsf3x>:
    2f88:	e9 2f       	mov	r30, r25
    2f8a:	0e 94 48 19 	call	0x3290	; 0x3290 <__fp_split3>
    2f8e:	58 f3       	brcs	.-42     	; 0x2f66 <__addsf3+0xc>
    2f90:	ba 17       	cp	r27, r26
    2f92:	62 07       	cpc	r22, r18
    2f94:	73 07       	cpc	r23, r19
    2f96:	84 07       	cpc	r24, r20
    2f98:	95 07       	cpc	r25, r21
    2f9a:	20 f0       	brcs	.+8      	; 0x2fa4 <__addsf3x+0x1c>
    2f9c:	79 f4       	brne	.+30     	; 0x2fbc <__addsf3x+0x34>
    2f9e:	a6 f5       	brtc	.+104    	; 0x3008 <__addsf3x+0x80>
    2fa0:	0c 94 6a 19 	jmp	0x32d4	; 0x32d4 <__fp_zero>
    2fa4:	0e f4       	brtc	.+2      	; 0x2fa8 <__addsf3x+0x20>
    2fa6:	e0 95       	com	r30
    2fa8:	0b 2e       	mov	r0, r27
    2faa:	ba 2f       	mov	r27, r26
    2fac:	a0 2d       	mov	r26, r0
    2fae:	0b 01       	movw	r0, r22
    2fb0:	b9 01       	movw	r22, r18
    2fb2:	90 01       	movw	r18, r0
    2fb4:	0c 01       	movw	r0, r24
    2fb6:	ca 01       	movw	r24, r20
    2fb8:	a0 01       	movw	r20, r0
    2fba:	11 24       	eor	r1, r1
    2fbc:	ff 27       	eor	r31, r31
    2fbe:	59 1b       	sub	r21, r25
    2fc0:	99 f0       	breq	.+38     	; 0x2fe8 <__addsf3x+0x60>
    2fc2:	59 3f       	cpi	r21, 0xF9	; 249
    2fc4:	50 f4       	brcc	.+20     	; 0x2fda <__addsf3x+0x52>
    2fc6:	50 3e       	cpi	r21, 0xE0	; 224
    2fc8:	68 f1       	brcs	.+90     	; 0x3024 <__addsf3x+0x9c>
    2fca:	1a 16       	cp	r1, r26
    2fcc:	f0 40       	sbci	r31, 0x00	; 0
    2fce:	a2 2f       	mov	r26, r18
    2fd0:	23 2f       	mov	r18, r19
    2fd2:	34 2f       	mov	r19, r20
    2fd4:	44 27       	eor	r20, r20
    2fd6:	58 5f       	subi	r21, 0xF8	; 248
    2fd8:	f3 cf       	rjmp	.-26     	; 0x2fc0 <__addsf3x+0x38>
    2fda:	46 95       	lsr	r20
    2fdc:	37 95       	ror	r19
    2fde:	27 95       	ror	r18
    2fe0:	a7 95       	ror	r26
    2fe2:	f0 40       	sbci	r31, 0x00	; 0
    2fe4:	53 95       	inc	r21
    2fe6:	c9 f7       	brne	.-14     	; 0x2fda <__addsf3x+0x52>
    2fe8:	7e f4       	brtc	.+30     	; 0x3008 <__addsf3x+0x80>
    2fea:	1f 16       	cp	r1, r31
    2fec:	ba 0b       	sbc	r27, r26
    2fee:	62 0b       	sbc	r22, r18
    2ff0:	73 0b       	sbc	r23, r19
    2ff2:	84 0b       	sbc	r24, r20
    2ff4:	ba f0       	brmi	.+46     	; 0x3024 <__addsf3x+0x9c>
    2ff6:	91 50       	subi	r25, 0x01	; 1
    2ff8:	a1 f0       	breq	.+40     	; 0x3022 <__addsf3x+0x9a>
    2ffa:	ff 0f       	add	r31, r31
    2ffc:	bb 1f       	adc	r27, r27
    2ffe:	66 1f       	adc	r22, r22
    3000:	77 1f       	adc	r23, r23
    3002:	88 1f       	adc	r24, r24
    3004:	c2 f7       	brpl	.-16     	; 0x2ff6 <__addsf3x+0x6e>
    3006:	0e c0       	rjmp	.+28     	; 0x3024 <__addsf3x+0x9c>
    3008:	ba 0f       	add	r27, r26
    300a:	62 1f       	adc	r22, r18
    300c:	73 1f       	adc	r23, r19
    300e:	84 1f       	adc	r24, r20
    3010:	48 f4       	brcc	.+18     	; 0x3024 <__addsf3x+0x9c>
    3012:	87 95       	ror	r24
    3014:	77 95       	ror	r23
    3016:	67 95       	ror	r22
    3018:	b7 95       	ror	r27
    301a:	f7 95       	ror	r31
    301c:	9e 3f       	cpi	r25, 0xFE	; 254
    301e:	08 f0       	brcs	.+2      	; 0x3022 <__addsf3x+0x9a>
    3020:	b0 cf       	rjmp	.-160    	; 0x2f82 <__addsf3+0x28>
    3022:	93 95       	inc	r25
    3024:	88 0f       	add	r24, r24
    3026:	08 f0       	brcs	.+2      	; 0x302a <__addsf3x+0xa2>
    3028:	99 27       	eor	r25, r25
    302a:	ee 0f       	add	r30, r30
    302c:	97 95       	ror	r25
    302e:	87 95       	ror	r24
    3030:	08 95       	ret

00003032 <__cmpsf2>:
    3032:	0e 94 fc 18 	call	0x31f8	; 0x31f8 <__fp_cmp>
    3036:	08 f4       	brcc	.+2      	; 0x303a <__cmpsf2+0x8>
    3038:	81 e0       	ldi	r24, 0x01	; 1
    303a:	08 95       	ret

0000303c <__divsf3>:
    303c:	0e 94 32 18 	call	0x3064	; 0x3064 <__divsf3x>
    3040:	0c 94 37 19 	jmp	0x326e	; 0x326e <__fp_round>
    3044:	0e 94 30 19 	call	0x3260	; 0x3260 <__fp_pscB>
    3048:	58 f0       	brcs	.+22     	; 0x3060 <__divsf3+0x24>
    304a:	0e 94 29 19 	call	0x3252	; 0x3252 <__fp_pscA>
    304e:	40 f0       	brcs	.+16     	; 0x3060 <__divsf3+0x24>
    3050:	29 f4       	brne	.+10     	; 0x305c <__divsf3+0x20>
    3052:	5f 3f       	cpi	r21, 0xFF	; 255
    3054:	29 f0       	breq	.+10     	; 0x3060 <__divsf3+0x24>
    3056:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__fp_inf>
    305a:	51 11       	cpse	r21, r1
    305c:	0c 94 6b 19 	jmp	0x32d6	; 0x32d6 <__fp_szero>
    3060:	0c 94 26 19 	jmp	0x324c	; 0x324c <__fp_nan>

00003064 <__divsf3x>:
    3064:	0e 94 48 19 	call	0x3290	; 0x3290 <__fp_split3>
    3068:	68 f3       	brcs	.-38     	; 0x3044 <__divsf3+0x8>

0000306a <__divsf3_pse>:
    306a:	99 23       	and	r25, r25
    306c:	b1 f3       	breq	.-20     	; 0x305a <__divsf3+0x1e>
    306e:	55 23       	and	r21, r21
    3070:	91 f3       	breq	.-28     	; 0x3056 <__divsf3+0x1a>
    3072:	95 1b       	sub	r25, r21
    3074:	55 0b       	sbc	r21, r21
    3076:	bb 27       	eor	r27, r27
    3078:	aa 27       	eor	r26, r26
    307a:	62 17       	cp	r22, r18
    307c:	73 07       	cpc	r23, r19
    307e:	84 07       	cpc	r24, r20
    3080:	38 f0       	brcs	.+14     	; 0x3090 <__divsf3_pse+0x26>
    3082:	9f 5f       	subi	r25, 0xFF	; 255
    3084:	5f 4f       	sbci	r21, 0xFF	; 255
    3086:	22 0f       	add	r18, r18
    3088:	33 1f       	adc	r19, r19
    308a:	44 1f       	adc	r20, r20
    308c:	aa 1f       	adc	r26, r26
    308e:	a9 f3       	breq	.-22     	; 0x307a <__divsf3_pse+0x10>
    3090:	35 d0       	rcall	.+106    	; 0x30fc <__divsf3_pse+0x92>
    3092:	0e 2e       	mov	r0, r30
    3094:	3a f0       	brmi	.+14     	; 0x30a4 <__divsf3_pse+0x3a>
    3096:	e0 e8       	ldi	r30, 0x80	; 128
    3098:	32 d0       	rcall	.+100    	; 0x30fe <__divsf3_pse+0x94>
    309a:	91 50       	subi	r25, 0x01	; 1
    309c:	50 40       	sbci	r21, 0x00	; 0
    309e:	e6 95       	lsr	r30
    30a0:	00 1c       	adc	r0, r0
    30a2:	ca f7       	brpl	.-14     	; 0x3096 <__divsf3_pse+0x2c>
    30a4:	2b d0       	rcall	.+86     	; 0x30fc <__divsf3_pse+0x92>
    30a6:	fe 2f       	mov	r31, r30
    30a8:	29 d0       	rcall	.+82     	; 0x30fc <__divsf3_pse+0x92>
    30aa:	66 0f       	add	r22, r22
    30ac:	77 1f       	adc	r23, r23
    30ae:	88 1f       	adc	r24, r24
    30b0:	bb 1f       	adc	r27, r27
    30b2:	26 17       	cp	r18, r22
    30b4:	37 07       	cpc	r19, r23
    30b6:	48 07       	cpc	r20, r24
    30b8:	ab 07       	cpc	r26, r27
    30ba:	b0 e8       	ldi	r27, 0x80	; 128
    30bc:	09 f0       	breq	.+2      	; 0x30c0 <__divsf3_pse+0x56>
    30be:	bb 0b       	sbc	r27, r27
    30c0:	80 2d       	mov	r24, r0
    30c2:	bf 01       	movw	r22, r30
    30c4:	ff 27       	eor	r31, r31
    30c6:	93 58       	subi	r25, 0x83	; 131
    30c8:	5f 4f       	sbci	r21, 0xFF	; 255
    30ca:	3a f0       	brmi	.+14     	; 0x30da <__divsf3_pse+0x70>
    30cc:	9e 3f       	cpi	r25, 0xFE	; 254
    30ce:	51 05       	cpc	r21, r1
    30d0:	78 f0       	brcs	.+30     	; 0x30f0 <__divsf3_pse+0x86>
    30d2:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__fp_inf>
    30d6:	0c 94 6b 19 	jmp	0x32d6	; 0x32d6 <__fp_szero>
    30da:	5f 3f       	cpi	r21, 0xFF	; 255
    30dc:	e4 f3       	brlt	.-8      	; 0x30d6 <__divsf3_pse+0x6c>
    30de:	98 3e       	cpi	r25, 0xE8	; 232
    30e0:	d4 f3       	brlt	.-12     	; 0x30d6 <__divsf3_pse+0x6c>
    30e2:	86 95       	lsr	r24
    30e4:	77 95       	ror	r23
    30e6:	67 95       	ror	r22
    30e8:	b7 95       	ror	r27
    30ea:	f7 95       	ror	r31
    30ec:	9f 5f       	subi	r25, 0xFF	; 255
    30ee:	c9 f7       	brne	.-14     	; 0x30e2 <__divsf3_pse+0x78>
    30f0:	88 0f       	add	r24, r24
    30f2:	91 1d       	adc	r25, r1
    30f4:	96 95       	lsr	r25
    30f6:	87 95       	ror	r24
    30f8:	97 f9       	bld	r25, 7
    30fa:	08 95       	ret
    30fc:	e1 e0       	ldi	r30, 0x01	; 1
    30fe:	66 0f       	add	r22, r22
    3100:	77 1f       	adc	r23, r23
    3102:	88 1f       	adc	r24, r24
    3104:	bb 1f       	adc	r27, r27
    3106:	62 17       	cp	r22, r18
    3108:	73 07       	cpc	r23, r19
    310a:	84 07       	cpc	r24, r20
    310c:	ba 07       	cpc	r27, r26
    310e:	20 f0       	brcs	.+8      	; 0x3118 <__divsf3_pse+0xae>
    3110:	62 1b       	sub	r22, r18
    3112:	73 0b       	sbc	r23, r19
    3114:	84 0b       	sbc	r24, r20
    3116:	ba 0b       	sbc	r27, r26
    3118:	ee 1f       	adc	r30, r30
    311a:	88 f7       	brcc	.-30     	; 0x30fe <__divsf3_pse+0x94>
    311c:	e0 95       	com	r30
    311e:	08 95       	ret

00003120 <__fixunssfsi>:
    3120:	0e 94 50 19 	call	0x32a0	; 0x32a0 <__fp_splitA>
    3124:	88 f0       	brcs	.+34     	; 0x3148 <__fixunssfsi+0x28>
    3126:	9f 57       	subi	r25, 0x7F	; 127
    3128:	98 f0       	brcs	.+38     	; 0x3150 <__fixunssfsi+0x30>
    312a:	b9 2f       	mov	r27, r25
    312c:	99 27       	eor	r25, r25
    312e:	b7 51       	subi	r27, 0x17	; 23
    3130:	b0 f0       	brcs	.+44     	; 0x315e <__fixunssfsi+0x3e>
    3132:	e1 f0       	breq	.+56     	; 0x316c <__fixunssfsi+0x4c>
    3134:	66 0f       	add	r22, r22
    3136:	77 1f       	adc	r23, r23
    3138:	88 1f       	adc	r24, r24
    313a:	99 1f       	adc	r25, r25
    313c:	1a f0       	brmi	.+6      	; 0x3144 <__fixunssfsi+0x24>
    313e:	ba 95       	dec	r27
    3140:	c9 f7       	brne	.-14     	; 0x3134 <__fixunssfsi+0x14>
    3142:	14 c0       	rjmp	.+40     	; 0x316c <__fixunssfsi+0x4c>
    3144:	b1 30       	cpi	r27, 0x01	; 1
    3146:	91 f0       	breq	.+36     	; 0x316c <__fixunssfsi+0x4c>
    3148:	0e 94 6a 19 	call	0x32d4	; 0x32d4 <__fp_zero>
    314c:	b1 e0       	ldi	r27, 0x01	; 1
    314e:	08 95       	ret
    3150:	0c 94 6a 19 	jmp	0x32d4	; 0x32d4 <__fp_zero>
    3154:	67 2f       	mov	r22, r23
    3156:	78 2f       	mov	r23, r24
    3158:	88 27       	eor	r24, r24
    315a:	b8 5f       	subi	r27, 0xF8	; 248
    315c:	39 f0       	breq	.+14     	; 0x316c <__fixunssfsi+0x4c>
    315e:	b9 3f       	cpi	r27, 0xF9	; 249
    3160:	cc f3       	brlt	.-14     	; 0x3154 <__fixunssfsi+0x34>
    3162:	86 95       	lsr	r24
    3164:	77 95       	ror	r23
    3166:	67 95       	ror	r22
    3168:	b3 95       	inc	r27
    316a:	d9 f7       	brne	.-10     	; 0x3162 <__fixunssfsi+0x42>
    316c:	3e f4       	brtc	.+14     	; 0x317c <__fixunssfsi+0x5c>
    316e:	90 95       	com	r25
    3170:	80 95       	com	r24
    3172:	70 95       	com	r23
    3174:	61 95       	neg	r22
    3176:	7f 4f       	sbci	r23, 0xFF	; 255
    3178:	8f 4f       	sbci	r24, 0xFF	; 255
    317a:	9f 4f       	sbci	r25, 0xFF	; 255
    317c:	08 95       	ret

0000317e <__floatunsisf>:
    317e:	e8 94       	clt
    3180:	09 c0       	rjmp	.+18     	; 0x3194 <__floatsisf+0x12>

00003182 <__floatsisf>:
    3182:	97 fb       	bst	r25, 7
    3184:	3e f4       	brtc	.+14     	; 0x3194 <__floatsisf+0x12>
    3186:	90 95       	com	r25
    3188:	80 95       	com	r24
    318a:	70 95       	com	r23
    318c:	61 95       	neg	r22
    318e:	7f 4f       	sbci	r23, 0xFF	; 255
    3190:	8f 4f       	sbci	r24, 0xFF	; 255
    3192:	9f 4f       	sbci	r25, 0xFF	; 255
    3194:	99 23       	and	r25, r25
    3196:	a9 f0       	breq	.+42     	; 0x31c2 <__floatsisf+0x40>
    3198:	f9 2f       	mov	r31, r25
    319a:	96 e9       	ldi	r25, 0x96	; 150
    319c:	bb 27       	eor	r27, r27
    319e:	93 95       	inc	r25
    31a0:	f6 95       	lsr	r31
    31a2:	87 95       	ror	r24
    31a4:	77 95       	ror	r23
    31a6:	67 95       	ror	r22
    31a8:	b7 95       	ror	r27
    31aa:	f1 11       	cpse	r31, r1
    31ac:	f8 cf       	rjmp	.-16     	; 0x319e <__floatsisf+0x1c>
    31ae:	fa f4       	brpl	.+62     	; 0x31ee <__floatsisf+0x6c>
    31b0:	bb 0f       	add	r27, r27
    31b2:	11 f4       	brne	.+4      	; 0x31b8 <__floatsisf+0x36>
    31b4:	60 ff       	sbrs	r22, 0
    31b6:	1b c0       	rjmp	.+54     	; 0x31ee <__floatsisf+0x6c>
    31b8:	6f 5f       	subi	r22, 0xFF	; 255
    31ba:	7f 4f       	sbci	r23, 0xFF	; 255
    31bc:	8f 4f       	sbci	r24, 0xFF	; 255
    31be:	9f 4f       	sbci	r25, 0xFF	; 255
    31c0:	16 c0       	rjmp	.+44     	; 0x31ee <__floatsisf+0x6c>
    31c2:	88 23       	and	r24, r24
    31c4:	11 f0       	breq	.+4      	; 0x31ca <__floatsisf+0x48>
    31c6:	96 e9       	ldi	r25, 0x96	; 150
    31c8:	11 c0       	rjmp	.+34     	; 0x31ec <__floatsisf+0x6a>
    31ca:	77 23       	and	r23, r23
    31cc:	21 f0       	breq	.+8      	; 0x31d6 <__floatsisf+0x54>
    31ce:	9e e8       	ldi	r25, 0x8E	; 142
    31d0:	87 2f       	mov	r24, r23
    31d2:	76 2f       	mov	r23, r22
    31d4:	05 c0       	rjmp	.+10     	; 0x31e0 <__floatsisf+0x5e>
    31d6:	66 23       	and	r22, r22
    31d8:	71 f0       	breq	.+28     	; 0x31f6 <__floatsisf+0x74>
    31da:	96 e8       	ldi	r25, 0x86	; 134
    31dc:	86 2f       	mov	r24, r22
    31de:	70 e0       	ldi	r23, 0x00	; 0
    31e0:	60 e0       	ldi	r22, 0x00	; 0
    31e2:	2a f0       	brmi	.+10     	; 0x31ee <__floatsisf+0x6c>
    31e4:	9a 95       	dec	r25
    31e6:	66 0f       	add	r22, r22
    31e8:	77 1f       	adc	r23, r23
    31ea:	88 1f       	adc	r24, r24
    31ec:	da f7       	brpl	.-10     	; 0x31e4 <__floatsisf+0x62>
    31ee:	88 0f       	add	r24, r24
    31f0:	96 95       	lsr	r25
    31f2:	87 95       	ror	r24
    31f4:	97 f9       	bld	r25, 7
    31f6:	08 95       	ret

000031f8 <__fp_cmp>:
    31f8:	99 0f       	add	r25, r25
    31fa:	00 08       	sbc	r0, r0
    31fc:	55 0f       	add	r21, r21
    31fe:	aa 0b       	sbc	r26, r26
    3200:	e0 e8       	ldi	r30, 0x80	; 128
    3202:	fe ef       	ldi	r31, 0xFE	; 254
    3204:	16 16       	cp	r1, r22
    3206:	17 06       	cpc	r1, r23
    3208:	e8 07       	cpc	r30, r24
    320a:	f9 07       	cpc	r31, r25
    320c:	c0 f0       	brcs	.+48     	; 0x323e <__fp_cmp+0x46>
    320e:	12 16       	cp	r1, r18
    3210:	13 06       	cpc	r1, r19
    3212:	e4 07       	cpc	r30, r20
    3214:	f5 07       	cpc	r31, r21
    3216:	98 f0       	brcs	.+38     	; 0x323e <__fp_cmp+0x46>
    3218:	62 1b       	sub	r22, r18
    321a:	73 0b       	sbc	r23, r19
    321c:	84 0b       	sbc	r24, r20
    321e:	95 0b       	sbc	r25, r21
    3220:	39 f4       	brne	.+14     	; 0x3230 <__fp_cmp+0x38>
    3222:	0a 26       	eor	r0, r26
    3224:	61 f0       	breq	.+24     	; 0x323e <__fp_cmp+0x46>
    3226:	23 2b       	or	r18, r19
    3228:	24 2b       	or	r18, r20
    322a:	25 2b       	or	r18, r21
    322c:	21 f4       	brne	.+8      	; 0x3236 <__fp_cmp+0x3e>
    322e:	08 95       	ret
    3230:	0a 26       	eor	r0, r26
    3232:	09 f4       	brne	.+2      	; 0x3236 <__fp_cmp+0x3e>
    3234:	a1 40       	sbci	r26, 0x01	; 1
    3236:	a6 95       	lsr	r26
    3238:	8f ef       	ldi	r24, 0xFF	; 255
    323a:	81 1d       	adc	r24, r1
    323c:	81 1d       	adc	r24, r1
    323e:	08 95       	ret

00003240 <__fp_inf>:
    3240:	97 f9       	bld	r25, 7
    3242:	9f 67       	ori	r25, 0x7F	; 127
    3244:	80 e8       	ldi	r24, 0x80	; 128
    3246:	70 e0       	ldi	r23, 0x00	; 0
    3248:	60 e0       	ldi	r22, 0x00	; 0
    324a:	08 95       	ret

0000324c <__fp_nan>:
    324c:	9f ef       	ldi	r25, 0xFF	; 255
    324e:	80 ec       	ldi	r24, 0xC0	; 192
    3250:	08 95       	ret

00003252 <__fp_pscA>:
    3252:	00 24       	eor	r0, r0
    3254:	0a 94       	dec	r0
    3256:	16 16       	cp	r1, r22
    3258:	17 06       	cpc	r1, r23
    325a:	18 06       	cpc	r1, r24
    325c:	09 06       	cpc	r0, r25
    325e:	08 95       	ret

00003260 <__fp_pscB>:
    3260:	00 24       	eor	r0, r0
    3262:	0a 94       	dec	r0
    3264:	12 16       	cp	r1, r18
    3266:	13 06       	cpc	r1, r19
    3268:	14 06       	cpc	r1, r20
    326a:	05 06       	cpc	r0, r21
    326c:	08 95       	ret

0000326e <__fp_round>:
    326e:	09 2e       	mov	r0, r25
    3270:	03 94       	inc	r0
    3272:	00 0c       	add	r0, r0
    3274:	11 f4       	brne	.+4      	; 0x327a <__fp_round+0xc>
    3276:	88 23       	and	r24, r24
    3278:	52 f0       	brmi	.+20     	; 0x328e <__fp_round+0x20>
    327a:	bb 0f       	add	r27, r27
    327c:	40 f4       	brcc	.+16     	; 0x328e <__fp_round+0x20>
    327e:	bf 2b       	or	r27, r31
    3280:	11 f4       	brne	.+4      	; 0x3286 <__fp_round+0x18>
    3282:	60 ff       	sbrs	r22, 0
    3284:	04 c0       	rjmp	.+8      	; 0x328e <__fp_round+0x20>
    3286:	6f 5f       	subi	r22, 0xFF	; 255
    3288:	7f 4f       	sbci	r23, 0xFF	; 255
    328a:	8f 4f       	sbci	r24, 0xFF	; 255
    328c:	9f 4f       	sbci	r25, 0xFF	; 255
    328e:	08 95       	ret

00003290 <__fp_split3>:
    3290:	57 fd       	sbrc	r21, 7
    3292:	90 58       	subi	r25, 0x80	; 128
    3294:	44 0f       	add	r20, r20
    3296:	55 1f       	adc	r21, r21
    3298:	59 f0       	breq	.+22     	; 0x32b0 <__fp_splitA+0x10>
    329a:	5f 3f       	cpi	r21, 0xFF	; 255
    329c:	71 f0       	breq	.+28     	; 0x32ba <__fp_splitA+0x1a>
    329e:	47 95       	ror	r20

000032a0 <__fp_splitA>:
    32a0:	88 0f       	add	r24, r24
    32a2:	97 fb       	bst	r25, 7
    32a4:	99 1f       	adc	r25, r25
    32a6:	61 f0       	breq	.+24     	; 0x32c0 <__fp_splitA+0x20>
    32a8:	9f 3f       	cpi	r25, 0xFF	; 255
    32aa:	79 f0       	breq	.+30     	; 0x32ca <__fp_splitA+0x2a>
    32ac:	87 95       	ror	r24
    32ae:	08 95       	ret
    32b0:	12 16       	cp	r1, r18
    32b2:	13 06       	cpc	r1, r19
    32b4:	14 06       	cpc	r1, r20
    32b6:	55 1f       	adc	r21, r21
    32b8:	f2 cf       	rjmp	.-28     	; 0x329e <__fp_split3+0xe>
    32ba:	46 95       	lsr	r20
    32bc:	f1 df       	rcall	.-30     	; 0x32a0 <__fp_splitA>
    32be:	08 c0       	rjmp	.+16     	; 0x32d0 <__fp_splitA+0x30>
    32c0:	16 16       	cp	r1, r22
    32c2:	17 06       	cpc	r1, r23
    32c4:	18 06       	cpc	r1, r24
    32c6:	99 1f       	adc	r25, r25
    32c8:	f1 cf       	rjmp	.-30     	; 0x32ac <__fp_splitA+0xc>
    32ca:	86 95       	lsr	r24
    32cc:	71 05       	cpc	r23, r1
    32ce:	61 05       	cpc	r22, r1
    32d0:	08 94       	sec
    32d2:	08 95       	ret

000032d4 <__fp_zero>:
    32d4:	e8 94       	clt

000032d6 <__fp_szero>:
    32d6:	bb 27       	eor	r27, r27
    32d8:	66 27       	eor	r22, r22
    32da:	77 27       	eor	r23, r23
    32dc:	cb 01       	movw	r24, r22
    32de:	97 f9       	bld	r25, 7
    32e0:	08 95       	ret

000032e2 <__mulsf3>:
    32e2:	0e 94 84 19 	call	0x3308	; 0x3308 <__mulsf3x>
    32e6:	0c 94 37 19 	jmp	0x326e	; 0x326e <__fp_round>
    32ea:	0e 94 29 19 	call	0x3252	; 0x3252 <__fp_pscA>
    32ee:	38 f0       	brcs	.+14     	; 0x32fe <__mulsf3+0x1c>
    32f0:	0e 94 30 19 	call	0x3260	; 0x3260 <__fp_pscB>
    32f4:	20 f0       	brcs	.+8      	; 0x32fe <__mulsf3+0x1c>
    32f6:	95 23       	and	r25, r21
    32f8:	11 f0       	breq	.+4      	; 0x32fe <__mulsf3+0x1c>
    32fa:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__fp_inf>
    32fe:	0c 94 26 19 	jmp	0x324c	; 0x324c <__fp_nan>
    3302:	11 24       	eor	r1, r1
    3304:	0c 94 6b 19 	jmp	0x32d6	; 0x32d6 <__fp_szero>

00003308 <__mulsf3x>:
    3308:	0e 94 48 19 	call	0x3290	; 0x3290 <__fp_split3>
    330c:	70 f3       	brcs	.-36     	; 0x32ea <__mulsf3+0x8>

0000330e <__mulsf3_pse>:
    330e:	95 9f       	mul	r25, r21
    3310:	c1 f3       	breq	.-16     	; 0x3302 <__mulsf3+0x20>
    3312:	95 0f       	add	r25, r21
    3314:	50 e0       	ldi	r21, 0x00	; 0
    3316:	55 1f       	adc	r21, r21
    3318:	62 9f       	mul	r22, r18
    331a:	f0 01       	movw	r30, r0
    331c:	72 9f       	mul	r23, r18
    331e:	bb 27       	eor	r27, r27
    3320:	f0 0d       	add	r31, r0
    3322:	b1 1d       	adc	r27, r1
    3324:	63 9f       	mul	r22, r19
    3326:	aa 27       	eor	r26, r26
    3328:	f0 0d       	add	r31, r0
    332a:	b1 1d       	adc	r27, r1
    332c:	aa 1f       	adc	r26, r26
    332e:	64 9f       	mul	r22, r20
    3330:	66 27       	eor	r22, r22
    3332:	b0 0d       	add	r27, r0
    3334:	a1 1d       	adc	r26, r1
    3336:	66 1f       	adc	r22, r22
    3338:	82 9f       	mul	r24, r18
    333a:	22 27       	eor	r18, r18
    333c:	b0 0d       	add	r27, r0
    333e:	a1 1d       	adc	r26, r1
    3340:	62 1f       	adc	r22, r18
    3342:	73 9f       	mul	r23, r19
    3344:	b0 0d       	add	r27, r0
    3346:	a1 1d       	adc	r26, r1
    3348:	62 1f       	adc	r22, r18
    334a:	83 9f       	mul	r24, r19
    334c:	a0 0d       	add	r26, r0
    334e:	61 1d       	adc	r22, r1
    3350:	22 1f       	adc	r18, r18
    3352:	74 9f       	mul	r23, r20
    3354:	33 27       	eor	r19, r19
    3356:	a0 0d       	add	r26, r0
    3358:	61 1d       	adc	r22, r1
    335a:	23 1f       	adc	r18, r19
    335c:	84 9f       	mul	r24, r20
    335e:	60 0d       	add	r22, r0
    3360:	21 1d       	adc	r18, r1
    3362:	82 2f       	mov	r24, r18
    3364:	76 2f       	mov	r23, r22
    3366:	6a 2f       	mov	r22, r26
    3368:	11 24       	eor	r1, r1
    336a:	9f 57       	subi	r25, 0x7F	; 127
    336c:	50 40       	sbci	r21, 0x00	; 0
    336e:	9a f0       	brmi	.+38     	; 0x3396 <__mulsf3_pse+0x88>
    3370:	f1 f0       	breq	.+60     	; 0x33ae <__mulsf3_pse+0xa0>
    3372:	88 23       	and	r24, r24
    3374:	4a f0       	brmi	.+18     	; 0x3388 <__mulsf3_pse+0x7a>
    3376:	ee 0f       	add	r30, r30
    3378:	ff 1f       	adc	r31, r31
    337a:	bb 1f       	adc	r27, r27
    337c:	66 1f       	adc	r22, r22
    337e:	77 1f       	adc	r23, r23
    3380:	88 1f       	adc	r24, r24
    3382:	91 50       	subi	r25, 0x01	; 1
    3384:	50 40       	sbci	r21, 0x00	; 0
    3386:	a9 f7       	brne	.-22     	; 0x3372 <__mulsf3_pse+0x64>
    3388:	9e 3f       	cpi	r25, 0xFE	; 254
    338a:	51 05       	cpc	r21, r1
    338c:	80 f0       	brcs	.+32     	; 0x33ae <__mulsf3_pse+0xa0>
    338e:	0c 94 20 19 	jmp	0x3240	; 0x3240 <__fp_inf>
    3392:	0c 94 6b 19 	jmp	0x32d6	; 0x32d6 <__fp_szero>
    3396:	5f 3f       	cpi	r21, 0xFF	; 255
    3398:	e4 f3       	brlt	.-8      	; 0x3392 <__mulsf3_pse+0x84>
    339a:	98 3e       	cpi	r25, 0xE8	; 232
    339c:	d4 f3       	brlt	.-12     	; 0x3392 <__mulsf3_pse+0x84>
    339e:	86 95       	lsr	r24
    33a0:	77 95       	ror	r23
    33a2:	67 95       	ror	r22
    33a4:	b7 95       	ror	r27
    33a6:	f7 95       	ror	r31
    33a8:	e7 95       	ror	r30
    33aa:	9f 5f       	subi	r25, 0xFF	; 255
    33ac:	c1 f7       	brne	.-16     	; 0x339e <__mulsf3_pse+0x90>
    33ae:	fe 2b       	or	r31, r30
    33b0:	88 0f       	add	r24, r24
    33b2:	91 1d       	adc	r25, r1
    33b4:	96 95       	lsr	r25
    33b6:	87 95       	ror	r24
    33b8:	97 f9       	bld	r25, 7
    33ba:	08 95       	ret

000033bc <__udivmodsi4>:
    33bc:	a1 e2       	ldi	r26, 0x21	; 33
    33be:	1a 2e       	mov	r1, r26
    33c0:	aa 1b       	sub	r26, r26
    33c2:	bb 1b       	sub	r27, r27
    33c4:	fd 01       	movw	r30, r26
    33c6:	0d c0       	rjmp	.+26     	; 0x33e2 <__udivmodsi4_ep>

000033c8 <__udivmodsi4_loop>:
    33c8:	aa 1f       	adc	r26, r26
    33ca:	bb 1f       	adc	r27, r27
    33cc:	ee 1f       	adc	r30, r30
    33ce:	ff 1f       	adc	r31, r31
    33d0:	a2 17       	cp	r26, r18
    33d2:	b3 07       	cpc	r27, r19
    33d4:	e4 07       	cpc	r30, r20
    33d6:	f5 07       	cpc	r31, r21
    33d8:	20 f0       	brcs	.+8      	; 0x33e2 <__udivmodsi4_ep>
    33da:	a2 1b       	sub	r26, r18
    33dc:	b3 0b       	sbc	r27, r19
    33de:	e4 0b       	sbc	r30, r20
    33e0:	f5 0b       	sbc	r31, r21

000033e2 <__udivmodsi4_ep>:
    33e2:	66 1f       	adc	r22, r22
    33e4:	77 1f       	adc	r23, r23
    33e6:	88 1f       	adc	r24, r24
    33e8:	99 1f       	adc	r25, r25
    33ea:	1a 94       	dec	r1
    33ec:	69 f7       	brne	.-38     	; 0x33c8 <__udivmodsi4_loop>
    33ee:	60 95       	com	r22
    33f0:	70 95       	com	r23
    33f2:	80 95       	com	r24
    33f4:	90 95       	com	r25
    33f6:	9b 01       	movw	r18, r22
    33f8:	ac 01       	movw	r20, r24
    33fa:	bd 01       	movw	r22, r26
    33fc:	cf 01       	movw	r24, r30
    33fe:	08 95       	ret

00003400 <sprintf>:
    3400:	ae e0       	ldi	r26, 0x0E	; 14
    3402:	b0 e0       	ldi	r27, 0x00	; 0
    3404:	e6 e0       	ldi	r30, 0x06	; 6
    3406:	fa e1       	ldi	r31, 0x1A	; 26
    3408:	0c 94 c1 1c 	jmp	0x3982	; 0x3982 <__prologue_saves__+0x1c>
    340c:	0d 89       	ldd	r16, Y+21	; 0x15
    340e:	1e 89       	ldd	r17, Y+22	; 0x16
    3410:	86 e0       	ldi	r24, 0x06	; 6
    3412:	8c 83       	std	Y+4, r24	; 0x04
    3414:	1a 83       	std	Y+2, r17	; 0x02
    3416:	09 83       	std	Y+1, r16	; 0x01
    3418:	8f ef       	ldi	r24, 0xFF	; 255
    341a:	9f e7       	ldi	r25, 0x7F	; 127
    341c:	9e 83       	std	Y+6, r25	; 0x06
    341e:	8d 83       	std	Y+5, r24	; 0x05
    3420:	ae 01       	movw	r20, r28
    3422:	47 5e       	subi	r20, 0xE7	; 231
    3424:	5f 4f       	sbci	r21, 0xFF	; 255
    3426:	6f 89       	ldd	r22, Y+23	; 0x17
    3428:	78 8d       	ldd	r23, Y+24	; 0x18
    342a:	ce 01       	movw	r24, r28
    342c:	01 96       	adiw	r24, 0x01	; 1
    342e:	0e 94 22 1a 	call	0x3444	; 0x3444 <vfprintf>
    3432:	ef 81       	ldd	r30, Y+7	; 0x07
    3434:	f8 85       	ldd	r31, Y+8	; 0x08
    3436:	e0 0f       	add	r30, r16
    3438:	f1 1f       	adc	r31, r17
    343a:	10 82       	st	Z, r1
    343c:	2e 96       	adiw	r28, 0x0e	; 14
    343e:	e4 e0       	ldi	r30, 0x04	; 4
    3440:	0c 94 dd 1c 	jmp	0x39ba	; 0x39ba <__epilogue_restores__+0x1c>

00003444 <vfprintf>:
    3444:	ab e0       	ldi	r26, 0x0B	; 11
    3446:	b0 e0       	ldi	r27, 0x00	; 0
    3448:	e8 e2       	ldi	r30, 0x28	; 40
    344a:	fa e1       	ldi	r31, 0x1A	; 26
    344c:	0c 94 b3 1c 	jmp	0x3966	; 0x3966 <__prologue_saves__>
    3450:	6c 01       	movw	r12, r24
    3452:	7b 01       	movw	r14, r22
    3454:	8a 01       	movw	r16, r20
    3456:	fc 01       	movw	r30, r24
    3458:	17 82       	std	Z+7, r1	; 0x07
    345a:	16 82       	std	Z+6, r1	; 0x06
    345c:	83 81       	ldd	r24, Z+3	; 0x03
    345e:	81 ff       	sbrs	r24, 1
    3460:	cc c1       	rjmp	.+920    	; 0x37fa <vfprintf+0x3b6>
    3462:	ce 01       	movw	r24, r28
    3464:	01 96       	adiw	r24, 0x01	; 1
    3466:	3c 01       	movw	r6, r24
    3468:	f6 01       	movw	r30, r12
    346a:	93 81       	ldd	r25, Z+3	; 0x03
    346c:	f7 01       	movw	r30, r14
    346e:	93 fd       	sbrc	r25, 3
    3470:	85 91       	lpm	r24, Z+
    3472:	93 ff       	sbrs	r25, 3
    3474:	81 91       	ld	r24, Z+
    3476:	7f 01       	movw	r14, r30
    3478:	88 23       	and	r24, r24
    347a:	09 f4       	brne	.+2      	; 0x347e <vfprintf+0x3a>
    347c:	ba c1       	rjmp	.+884    	; 0x37f2 <vfprintf+0x3ae>
    347e:	85 32       	cpi	r24, 0x25	; 37
    3480:	39 f4       	brne	.+14     	; 0x3490 <vfprintf+0x4c>
    3482:	93 fd       	sbrc	r25, 3
    3484:	85 91       	lpm	r24, Z+
    3486:	93 ff       	sbrs	r25, 3
    3488:	81 91       	ld	r24, Z+
    348a:	7f 01       	movw	r14, r30
    348c:	85 32       	cpi	r24, 0x25	; 37
    348e:	29 f4       	brne	.+10     	; 0x349a <vfprintf+0x56>
    3490:	b6 01       	movw	r22, r12
    3492:	90 e0       	ldi	r25, 0x00	; 0
    3494:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    3498:	e7 cf       	rjmp	.-50     	; 0x3468 <vfprintf+0x24>
    349a:	91 2c       	mov	r9, r1
    349c:	21 2c       	mov	r2, r1
    349e:	31 2c       	mov	r3, r1
    34a0:	ff e1       	ldi	r31, 0x1F	; 31
    34a2:	f3 15       	cp	r31, r3
    34a4:	d8 f0       	brcs	.+54     	; 0x34dc <vfprintf+0x98>
    34a6:	8b 32       	cpi	r24, 0x2B	; 43
    34a8:	79 f0       	breq	.+30     	; 0x34c8 <vfprintf+0x84>
    34aa:	38 f4       	brcc	.+14     	; 0x34ba <vfprintf+0x76>
    34ac:	80 32       	cpi	r24, 0x20	; 32
    34ae:	79 f0       	breq	.+30     	; 0x34ce <vfprintf+0x8a>
    34b0:	83 32       	cpi	r24, 0x23	; 35
    34b2:	a1 f4       	brne	.+40     	; 0x34dc <vfprintf+0x98>
    34b4:	23 2d       	mov	r18, r3
    34b6:	20 61       	ori	r18, 0x10	; 16
    34b8:	1d c0       	rjmp	.+58     	; 0x34f4 <vfprintf+0xb0>
    34ba:	8d 32       	cpi	r24, 0x2D	; 45
    34bc:	61 f0       	breq	.+24     	; 0x34d6 <vfprintf+0x92>
    34be:	80 33       	cpi	r24, 0x30	; 48
    34c0:	69 f4       	brne	.+26     	; 0x34dc <vfprintf+0x98>
    34c2:	23 2d       	mov	r18, r3
    34c4:	21 60       	ori	r18, 0x01	; 1
    34c6:	16 c0       	rjmp	.+44     	; 0x34f4 <vfprintf+0xb0>
    34c8:	83 2d       	mov	r24, r3
    34ca:	82 60       	ori	r24, 0x02	; 2
    34cc:	38 2e       	mov	r3, r24
    34ce:	e3 2d       	mov	r30, r3
    34d0:	e4 60       	ori	r30, 0x04	; 4
    34d2:	3e 2e       	mov	r3, r30
    34d4:	2a c0       	rjmp	.+84     	; 0x352a <vfprintf+0xe6>
    34d6:	f3 2d       	mov	r31, r3
    34d8:	f8 60       	ori	r31, 0x08	; 8
    34da:	1d c0       	rjmp	.+58     	; 0x3516 <vfprintf+0xd2>
    34dc:	37 fc       	sbrc	r3, 7
    34de:	2d c0       	rjmp	.+90     	; 0x353a <vfprintf+0xf6>
    34e0:	20 ed       	ldi	r18, 0xD0	; 208
    34e2:	28 0f       	add	r18, r24
    34e4:	2a 30       	cpi	r18, 0x0A	; 10
    34e6:	40 f0       	brcs	.+16     	; 0x34f8 <vfprintf+0xb4>
    34e8:	8e 32       	cpi	r24, 0x2E	; 46
    34ea:	b9 f4       	brne	.+46     	; 0x351a <vfprintf+0xd6>
    34ec:	36 fc       	sbrc	r3, 6
    34ee:	81 c1       	rjmp	.+770    	; 0x37f2 <vfprintf+0x3ae>
    34f0:	23 2d       	mov	r18, r3
    34f2:	20 64       	ori	r18, 0x40	; 64
    34f4:	32 2e       	mov	r3, r18
    34f6:	19 c0       	rjmp	.+50     	; 0x352a <vfprintf+0xe6>
    34f8:	36 fe       	sbrs	r3, 6
    34fa:	06 c0       	rjmp	.+12     	; 0x3508 <vfprintf+0xc4>
    34fc:	8a e0       	ldi	r24, 0x0A	; 10
    34fe:	98 9e       	mul	r9, r24
    3500:	20 0d       	add	r18, r0
    3502:	11 24       	eor	r1, r1
    3504:	92 2e       	mov	r9, r18
    3506:	11 c0       	rjmp	.+34     	; 0x352a <vfprintf+0xe6>
    3508:	ea e0       	ldi	r30, 0x0A	; 10
    350a:	2e 9e       	mul	r2, r30
    350c:	20 0d       	add	r18, r0
    350e:	11 24       	eor	r1, r1
    3510:	22 2e       	mov	r2, r18
    3512:	f3 2d       	mov	r31, r3
    3514:	f0 62       	ori	r31, 0x20	; 32
    3516:	3f 2e       	mov	r3, r31
    3518:	08 c0       	rjmp	.+16     	; 0x352a <vfprintf+0xe6>
    351a:	8c 36       	cpi	r24, 0x6C	; 108
    351c:	21 f4       	brne	.+8      	; 0x3526 <vfprintf+0xe2>
    351e:	83 2d       	mov	r24, r3
    3520:	80 68       	ori	r24, 0x80	; 128
    3522:	38 2e       	mov	r3, r24
    3524:	02 c0       	rjmp	.+4      	; 0x352a <vfprintf+0xe6>
    3526:	88 36       	cpi	r24, 0x68	; 104
    3528:	41 f4       	brne	.+16     	; 0x353a <vfprintf+0xf6>
    352a:	f7 01       	movw	r30, r14
    352c:	93 fd       	sbrc	r25, 3
    352e:	85 91       	lpm	r24, Z+
    3530:	93 ff       	sbrs	r25, 3
    3532:	81 91       	ld	r24, Z+
    3534:	7f 01       	movw	r14, r30
    3536:	81 11       	cpse	r24, r1
    3538:	b3 cf       	rjmp	.-154    	; 0x34a0 <vfprintf+0x5c>
    353a:	98 2f       	mov	r25, r24
    353c:	9f 7d       	andi	r25, 0xDF	; 223
    353e:	95 54       	subi	r25, 0x45	; 69
    3540:	93 30       	cpi	r25, 0x03	; 3
    3542:	28 f4       	brcc	.+10     	; 0x354e <vfprintf+0x10a>
    3544:	0c 5f       	subi	r16, 0xFC	; 252
    3546:	1f 4f       	sbci	r17, 0xFF	; 255
    3548:	9f e3       	ldi	r25, 0x3F	; 63
    354a:	99 83       	std	Y+1, r25	; 0x01
    354c:	0d c0       	rjmp	.+26     	; 0x3568 <vfprintf+0x124>
    354e:	83 36       	cpi	r24, 0x63	; 99
    3550:	31 f0       	breq	.+12     	; 0x355e <vfprintf+0x11a>
    3552:	83 37       	cpi	r24, 0x73	; 115
    3554:	71 f0       	breq	.+28     	; 0x3572 <vfprintf+0x12e>
    3556:	83 35       	cpi	r24, 0x53	; 83
    3558:	09 f0       	breq	.+2      	; 0x355c <vfprintf+0x118>
    355a:	59 c0       	rjmp	.+178    	; 0x360e <vfprintf+0x1ca>
    355c:	21 c0       	rjmp	.+66     	; 0x35a0 <vfprintf+0x15c>
    355e:	f8 01       	movw	r30, r16
    3560:	80 81       	ld	r24, Z
    3562:	89 83       	std	Y+1, r24	; 0x01
    3564:	0e 5f       	subi	r16, 0xFE	; 254
    3566:	1f 4f       	sbci	r17, 0xFF	; 255
    3568:	88 24       	eor	r8, r8
    356a:	83 94       	inc	r8
    356c:	91 2c       	mov	r9, r1
    356e:	53 01       	movw	r10, r6
    3570:	13 c0       	rjmp	.+38     	; 0x3598 <vfprintf+0x154>
    3572:	28 01       	movw	r4, r16
    3574:	f2 e0       	ldi	r31, 0x02	; 2
    3576:	4f 0e       	add	r4, r31
    3578:	51 1c       	adc	r5, r1
    357a:	f8 01       	movw	r30, r16
    357c:	a0 80       	ld	r10, Z
    357e:	b1 80       	ldd	r11, Z+1	; 0x01
    3580:	36 fe       	sbrs	r3, 6
    3582:	03 c0       	rjmp	.+6      	; 0x358a <vfprintf+0x146>
    3584:	69 2d       	mov	r22, r9
    3586:	70 e0       	ldi	r23, 0x00	; 0
    3588:	02 c0       	rjmp	.+4      	; 0x358e <vfprintf+0x14a>
    358a:	6f ef       	ldi	r22, 0xFF	; 255
    358c:	7f ef       	ldi	r23, 0xFF	; 255
    358e:	c5 01       	movw	r24, r10
    3590:	0e 94 0e 1c 	call	0x381c	; 0x381c <strnlen>
    3594:	4c 01       	movw	r8, r24
    3596:	82 01       	movw	r16, r4
    3598:	f3 2d       	mov	r31, r3
    359a:	ff 77       	andi	r31, 0x7F	; 127
    359c:	3f 2e       	mov	r3, r31
    359e:	16 c0       	rjmp	.+44     	; 0x35cc <vfprintf+0x188>
    35a0:	28 01       	movw	r4, r16
    35a2:	22 e0       	ldi	r18, 0x02	; 2
    35a4:	42 0e       	add	r4, r18
    35a6:	51 1c       	adc	r5, r1
    35a8:	f8 01       	movw	r30, r16
    35aa:	a0 80       	ld	r10, Z
    35ac:	b1 80       	ldd	r11, Z+1	; 0x01
    35ae:	36 fe       	sbrs	r3, 6
    35b0:	03 c0       	rjmp	.+6      	; 0x35b8 <vfprintf+0x174>
    35b2:	69 2d       	mov	r22, r9
    35b4:	70 e0       	ldi	r23, 0x00	; 0
    35b6:	02 c0       	rjmp	.+4      	; 0x35bc <vfprintf+0x178>
    35b8:	6f ef       	ldi	r22, 0xFF	; 255
    35ba:	7f ef       	ldi	r23, 0xFF	; 255
    35bc:	c5 01       	movw	r24, r10
    35be:	0e 94 03 1c 	call	0x3806	; 0x3806 <strnlen_P>
    35c2:	4c 01       	movw	r8, r24
    35c4:	f3 2d       	mov	r31, r3
    35c6:	f0 68       	ori	r31, 0x80	; 128
    35c8:	3f 2e       	mov	r3, r31
    35ca:	82 01       	movw	r16, r4
    35cc:	33 fc       	sbrc	r3, 3
    35ce:	1b c0       	rjmp	.+54     	; 0x3606 <vfprintf+0x1c2>
    35d0:	82 2d       	mov	r24, r2
    35d2:	90 e0       	ldi	r25, 0x00	; 0
    35d4:	88 16       	cp	r8, r24
    35d6:	99 06       	cpc	r9, r25
    35d8:	b0 f4       	brcc	.+44     	; 0x3606 <vfprintf+0x1c2>
    35da:	b6 01       	movw	r22, r12
    35dc:	80 e2       	ldi	r24, 0x20	; 32
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    35e4:	2a 94       	dec	r2
    35e6:	f4 cf       	rjmp	.-24     	; 0x35d0 <vfprintf+0x18c>
    35e8:	f5 01       	movw	r30, r10
    35ea:	37 fc       	sbrc	r3, 7
    35ec:	85 91       	lpm	r24, Z+
    35ee:	37 fe       	sbrs	r3, 7
    35f0:	81 91       	ld	r24, Z+
    35f2:	5f 01       	movw	r10, r30
    35f4:	b6 01       	movw	r22, r12
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    35fc:	21 10       	cpse	r2, r1
    35fe:	2a 94       	dec	r2
    3600:	21 e0       	ldi	r18, 0x01	; 1
    3602:	82 1a       	sub	r8, r18
    3604:	91 08       	sbc	r9, r1
    3606:	81 14       	cp	r8, r1
    3608:	91 04       	cpc	r9, r1
    360a:	71 f7       	brne	.-36     	; 0x35e8 <vfprintf+0x1a4>
    360c:	e8 c0       	rjmp	.+464    	; 0x37de <vfprintf+0x39a>
    360e:	84 36       	cpi	r24, 0x64	; 100
    3610:	11 f0       	breq	.+4      	; 0x3616 <vfprintf+0x1d2>
    3612:	89 36       	cpi	r24, 0x69	; 105
    3614:	41 f5       	brne	.+80     	; 0x3666 <vfprintf+0x222>
    3616:	f8 01       	movw	r30, r16
    3618:	37 fe       	sbrs	r3, 7
    361a:	07 c0       	rjmp	.+14     	; 0x362a <vfprintf+0x1e6>
    361c:	60 81       	ld	r22, Z
    361e:	71 81       	ldd	r23, Z+1	; 0x01
    3620:	82 81       	ldd	r24, Z+2	; 0x02
    3622:	93 81       	ldd	r25, Z+3	; 0x03
    3624:	0c 5f       	subi	r16, 0xFC	; 252
    3626:	1f 4f       	sbci	r17, 0xFF	; 255
    3628:	08 c0       	rjmp	.+16     	; 0x363a <vfprintf+0x1f6>
    362a:	60 81       	ld	r22, Z
    362c:	71 81       	ldd	r23, Z+1	; 0x01
    362e:	07 2e       	mov	r0, r23
    3630:	00 0c       	add	r0, r0
    3632:	88 0b       	sbc	r24, r24
    3634:	99 0b       	sbc	r25, r25
    3636:	0e 5f       	subi	r16, 0xFE	; 254
    3638:	1f 4f       	sbci	r17, 0xFF	; 255
    363a:	f3 2d       	mov	r31, r3
    363c:	ff 76       	andi	r31, 0x6F	; 111
    363e:	3f 2e       	mov	r3, r31
    3640:	97 ff       	sbrs	r25, 7
    3642:	09 c0       	rjmp	.+18     	; 0x3656 <vfprintf+0x212>
    3644:	90 95       	com	r25
    3646:	80 95       	com	r24
    3648:	70 95       	com	r23
    364a:	61 95       	neg	r22
    364c:	7f 4f       	sbci	r23, 0xFF	; 255
    364e:	8f 4f       	sbci	r24, 0xFF	; 255
    3650:	9f 4f       	sbci	r25, 0xFF	; 255
    3652:	f0 68       	ori	r31, 0x80	; 128
    3654:	3f 2e       	mov	r3, r31
    3656:	2a e0       	ldi	r18, 0x0A	; 10
    3658:	30 e0       	ldi	r19, 0x00	; 0
    365a:	a3 01       	movw	r20, r6
    365c:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__ultoa_invert>
    3660:	88 2e       	mov	r8, r24
    3662:	86 18       	sub	r8, r6
    3664:	45 c0       	rjmp	.+138    	; 0x36f0 <vfprintf+0x2ac>
    3666:	85 37       	cpi	r24, 0x75	; 117
    3668:	31 f4       	brne	.+12     	; 0x3676 <vfprintf+0x232>
    366a:	23 2d       	mov	r18, r3
    366c:	2f 7e       	andi	r18, 0xEF	; 239
    366e:	b2 2e       	mov	r11, r18
    3670:	2a e0       	ldi	r18, 0x0A	; 10
    3672:	30 e0       	ldi	r19, 0x00	; 0
    3674:	25 c0       	rjmp	.+74     	; 0x36c0 <vfprintf+0x27c>
    3676:	93 2d       	mov	r25, r3
    3678:	99 7f       	andi	r25, 0xF9	; 249
    367a:	b9 2e       	mov	r11, r25
    367c:	8f 36       	cpi	r24, 0x6F	; 111
    367e:	c1 f0       	breq	.+48     	; 0x36b0 <vfprintf+0x26c>
    3680:	18 f4       	brcc	.+6      	; 0x3688 <vfprintf+0x244>
    3682:	88 35       	cpi	r24, 0x58	; 88
    3684:	79 f0       	breq	.+30     	; 0x36a4 <vfprintf+0x260>
    3686:	b5 c0       	rjmp	.+362    	; 0x37f2 <vfprintf+0x3ae>
    3688:	80 37       	cpi	r24, 0x70	; 112
    368a:	19 f0       	breq	.+6      	; 0x3692 <vfprintf+0x24e>
    368c:	88 37       	cpi	r24, 0x78	; 120
    368e:	21 f0       	breq	.+8      	; 0x3698 <vfprintf+0x254>
    3690:	b0 c0       	rjmp	.+352    	; 0x37f2 <vfprintf+0x3ae>
    3692:	e9 2f       	mov	r30, r25
    3694:	e0 61       	ori	r30, 0x10	; 16
    3696:	be 2e       	mov	r11, r30
    3698:	b4 fe       	sbrs	r11, 4
    369a:	0d c0       	rjmp	.+26     	; 0x36b6 <vfprintf+0x272>
    369c:	fb 2d       	mov	r31, r11
    369e:	f4 60       	ori	r31, 0x04	; 4
    36a0:	bf 2e       	mov	r11, r31
    36a2:	09 c0       	rjmp	.+18     	; 0x36b6 <vfprintf+0x272>
    36a4:	34 fe       	sbrs	r3, 4
    36a6:	0a c0       	rjmp	.+20     	; 0x36bc <vfprintf+0x278>
    36a8:	29 2f       	mov	r18, r25
    36aa:	26 60       	ori	r18, 0x06	; 6
    36ac:	b2 2e       	mov	r11, r18
    36ae:	06 c0       	rjmp	.+12     	; 0x36bc <vfprintf+0x278>
    36b0:	28 e0       	ldi	r18, 0x08	; 8
    36b2:	30 e0       	ldi	r19, 0x00	; 0
    36b4:	05 c0       	rjmp	.+10     	; 0x36c0 <vfprintf+0x27c>
    36b6:	20 e1       	ldi	r18, 0x10	; 16
    36b8:	30 e0       	ldi	r19, 0x00	; 0
    36ba:	02 c0       	rjmp	.+4      	; 0x36c0 <vfprintf+0x27c>
    36bc:	20 e1       	ldi	r18, 0x10	; 16
    36be:	32 e0       	ldi	r19, 0x02	; 2
    36c0:	f8 01       	movw	r30, r16
    36c2:	b7 fe       	sbrs	r11, 7
    36c4:	07 c0       	rjmp	.+14     	; 0x36d4 <vfprintf+0x290>
    36c6:	60 81       	ld	r22, Z
    36c8:	71 81       	ldd	r23, Z+1	; 0x01
    36ca:	82 81       	ldd	r24, Z+2	; 0x02
    36cc:	93 81       	ldd	r25, Z+3	; 0x03
    36ce:	0c 5f       	subi	r16, 0xFC	; 252
    36d0:	1f 4f       	sbci	r17, 0xFF	; 255
    36d2:	06 c0       	rjmp	.+12     	; 0x36e0 <vfprintf+0x29c>
    36d4:	60 81       	ld	r22, Z
    36d6:	71 81       	ldd	r23, Z+1	; 0x01
    36d8:	80 e0       	ldi	r24, 0x00	; 0
    36da:	90 e0       	ldi	r25, 0x00	; 0
    36dc:	0e 5f       	subi	r16, 0xFE	; 254
    36de:	1f 4f       	sbci	r17, 0xFF	; 255
    36e0:	a3 01       	movw	r20, r6
    36e2:	0e 94 55 1c 	call	0x38aa	; 0x38aa <__ultoa_invert>
    36e6:	88 2e       	mov	r8, r24
    36e8:	86 18       	sub	r8, r6
    36ea:	fb 2d       	mov	r31, r11
    36ec:	ff 77       	andi	r31, 0x7F	; 127
    36ee:	3f 2e       	mov	r3, r31
    36f0:	36 fe       	sbrs	r3, 6
    36f2:	0d c0       	rjmp	.+26     	; 0x370e <vfprintf+0x2ca>
    36f4:	23 2d       	mov	r18, r3
    36f6:	2e 7f       	andi	r18, 0xFE	; 254
    36f8:	a2 2e       	mov	r10, r18
    36fa:	89 14       	cp	r8, r9
    36fc:	58 f4       	brcc	.+22     	; 0x3714 <vfprintf+0x2d0>
    36fe:	34 fe       	sbrs	r3, 4
    3700:	0b c0       	rjmp	.+22     	; 0x3718 <vfprintf+0x2d4>
    3702:	32 fc       	sbrc	r3, 2
    3704:	09 c0       	rjmp	.+18     	; 0x3718 <vfprintf+0x2d4>
    3706:	83 2d       	mov	r24, r3
    3708:	8e 7e       	andi	r24, 0xEE	; 238
    370a:	a8 2e       	mov	r10, r24
    370c:	05 c0       	rjmp	.+10     	; 0x3718 <vfprintf+0x2d4>
    370e:	b8 2c       	mov	r11, r8
    3710:	a3 2c       	mov	r10, r3
    3712:	03 c0       	rjmp	.+6      	; 0x371a <vfprintf+0x2d6>
    3714:	b8 2c       	mov	r11, r8
    3716:	01 c0       	rjmp	.+2      	; 0x371a <vfprintf+0x2d6>
    3718:	b9 2c       	mov	r11, r9
    371a:	a4 fe       	sbrs	r10, 4
    371c:	0f c0       	rjmp	.+30     	; 0x373c <vfprintf+0x2f8>
    371e:	fe 01       	movw	r30, r28
    3720:	e8 0d       	add	r30, r8
    3722:	f1 1d       	adc	r31, r1
    3724:	80 81       	ld	r24, Z
    3726:	80 33       	cpi	r24, 0x30	; 48
    3728:	21 f4       	brne	.+8      	; 0x3732 <vfprintf+0x2ee>
    372a:	9a 2d       	mov	r25, r10
    372c:	99 7e       	andi	r25, 0xE9	; 233
    372e:	a9 2e       	mov	r10, r25
    3730:	09 c0       	rjmp	.+18     	; 0x3744 <vfprintf+0x300>
    3732:	a2 fe       	sbrs	r10, 2
    3734:	06 c0       	rjmp	.+12     	; 0x3742 <vfprintf+0x2fe>
    3736:	b3 94       	inc	r11
    3738:	b3 94       	inc	r11
    373a:	04 c0       	rjmp	.+8      	; 0x3744 <vfprintf+0x300>
    373c:	8a 2d       	mov	r24, r10
    373e:	86 78       	andi	r24, 0x86	; 134
    3740:	09 f0       	breq	.+2      	; 0x3744 <vfprintf+0x300>
    3742:	b3 94       	inc	r11
    3744:	a3 fc       	sbrc	r10, 3
    3746:	11 c0       	rjmp	.+34     	; 0x376a <vfprintf+0x326>
    3748:	a0 fe       	sbrs	r10, 0
    374a:	06 c0       	rjmp	.+12     	; 0x3758 <vfprintf+0x314>
    374c:	b2 14       	cp	r11, r2
    374e:	88 f4       	brcc	.+34     	; 0x3772 <vfprintf+0x32e>
    3750:	28 0c       	add	r2, r8
    3752:	92 2c       	mov	r9, r2
    3754:	9b 18       	sub	r9, r11
    3756:	0e c0       	rjmp	.+28     	; 0x3774 <vfprintf+0x330>
    3758:	b2 14       	cp	r11, r2
    375a:	60 f4       	brcc	.+24     	; 0x3774 <vfprintf+0x330>
    375c:	b6 01       	movw	r22, r12
    375e:	80 e2       	ldi	r24, 0x20	; 32
    3760:	90 e0       	ldi	r25, 0x00	; 0
    3762:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    3766:	b3 94       	inc	r11
    3768:	f7 cf       	rjmp	.-18     	; 0x3758 <vfprintf+0x314>
    376a:	b2 14       	cp	r11, r2
    376c:	18 f4       	brcc	.+6      	; 0x3774 <vfprintf+0x330>
    376e:	2b 18       	sub	r2, r11
    3770:	02 c0       	rjmp	.+4      	; 0x3776 <vfprintf+0x332>
    3772:	98 2c       	mov	r9, r8
    3774:	21 2c       	mov	r2, r1
    3776:	a4 fe       	sbrs	r10, 4
    3778:	10 c0       	rjmp	.+32     	; 0x379a <vfprintf+0x356>
    377a:	b6 01       	movw	r22, r12
    377c:	80 e3       	ldi	r24, 0x30	; 48
    377e:	90 e0       	ldi	r25, 0x00	; 0
    3780:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    3784:	a2 fe       	sbrs	r10, 2
    3786:	17 c0       	rjmp	.+46     	; 0x37b6 <vfprintf+0x372>
    3788:	a1 fc       	sbrc	r10, 1
    378a:	03 c0       	rjmp	.+6      	; 0x3792 <vfprintf+0x34e>
    378c:	88 e7       	ldi	r24, 0x78	; 120
    378e:	90 e0       	ldi	r25, 0x00	; 0
    3790:	02 c0       	rjmp	.+4      	; 0x3796 <vfprintf+0x352>
    3792:	88 e5       	ldi	r24, 0x58	; 88
    3794:	90 e0       	ldi	r25, 0x00	; 0
    3796:	b6 01       	movw	r22, r12
    3798:	0c c0       	rjmp	.+24     	; 0x37b2 <vfprintf+0x36e>
    379a:	8a 2d       	mov	r24, r10
    379c:	86 78       	andi	r24, 0x86	; 134
    379e:	59 f0       	breq	.+22     	; 0x37b6 <vfprintf+0x372>
    37a0:	a1 fe       	sbrs	r10, 1
    37a2:	02 c0       	rjmp	.+4      	; 0x37a8 <vfprintf+0x364>
    37a4:	8b e2       	ldi	r24, 0x2B	; 43
    37a6:	01 c0       	rjmp	.+2      	; 0x37aa <vfprintf+0x366>
    37a8:	80 e2       	ldi	r24, 0x20	; 32
    37aa:	a7 fc       	sbrc	r10, 7
    37ac:	8d e2       	ldi	r24, 0x2D	; 45
    37ae:	b6 01       	movw	r22, r12
    37b0:	90 e0       	ldi	r25, 0x00	; 0
    37b2:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    37b6:	89 14       	cp	r8, r9
    37b8:	38 f4       	brcc	.+14     	; 0x37c8 <vfprintf+0x384>
    37ba:	b6 01       	movw	r22, r12
    37bc:	80 e3       	ldi	r24, 0x30	; 48
    37be:	90 e0       	ldi	r25, 0x00	; 0
    37c0:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    37c4:	9a 94       	dec	r9
    37c6:	f7 cf       	rjmp	.-18     	; 0x37b6 <vfprintf+0x372>
    37c8:	8a 94       	dec	r8
    37ca:	f3 01       	movw	r30, r6
    37cc:	e8 0d       	add	r30, r8
    37ce:	f1 1d       	adc	r31, r1
    37d0:	80 81       	ld	r24, Z
    37d2:	b6 01       	movw	r22, r12
    37d4:	90 e0       	ldi	r25, 0x00	; 0
    37d6:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    37da:	81 10       	cpse	r8, r1
    37dc:	f5 cf       	rjmp	.-22     	; 0x37c8 <vfprintf+0x384>
    37de:	22 20       	and	r2, r2
    37e0:	09 f4       	brne	.+2      	; 0x37e4 <vfprintf+0x3a0>
    37e2:	42 ce       	rjmp	.-892    	; 0x3468 <vfprintf+0x24>
    37e4:	b6 01       	movw	r22, r12
    37e6:	80 e2       	ldi	r24, 0x20	; 32
    37e8:	90 e0       	ldi	r25, 0x00	; 0
    37ea:	0e 94 19 1c 	call	0x3832	; 0x3832 <fputc>
    37ee:	2a 94       	dec	r2
    37f0:	f6 cf       	rjmp	.-20     	; 0x37de <vfprintf+0x39a>
    37f2:	f6 01       	movw	r30, r12
    37f4:	86 81       	ldd	r24, Z+6	; 0x06
    37f6:	97 81       	ldd	r25, Z+7	; 0x07
    37f8:	02 c0       	rjmp	.+4      	; 0x37fe <vfprintf+0x3ba>
    37fa:	8f ef       	ldi	r24, 0xFF	; 255
    37fc:	9f ef       	ldi	r25, 0xFF	; 255
    37fe:	2b 96       	adiw	r28, 0x0b	; 11
    3800:	e2 e1       	ldi	r30, 0x12	; 18
    3802:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__epilogue_restores__>

00003806 <strnlen_P>:
    3806:	fc 01       	movw	r30, r24
    3808:	05 90       	lpm	r0, Z+
    380a:	61 50       	subi	r22, 0x01	; 1
    380c:	70 40       	sbci	r23, 0x00	; 0
    380e:	01 10       	cpse	r0, r1
    3810:	d8 f7       	brcc	.-10     	; 0x3808 <strnlen_P+0x2>
    3812:	80 95       	com	r24
    3814:	90 95       	com	r25
    3816:	8e 0f       	add	r24, r30
    3818:	9f 1f       	adc	r25, r31
    381a:	08 95       	ret

0000381c <strnlen>:
    381c:	fc 01       	movw	r30, r24
    381e:	61 50       	subi	r22, 0x01	; 1
    3820:	70 40       	sbci	r23, 0x00	; 0
    3822:	01 90       	ld	r0, Z+
    3824:	01 10       	cpse	r0, r1
    3826:	d8 f7       	brcc	.-10     	; 0x381e <strnlen+0x2>
    3828:	80 95       	com	r24
    382a:	90 95       	com	r25
    382c:	8e 0f       	add	r24, r30
    382e:	9f 1f       	adc	r25, r31
    3830:	08 95       	ret

00003832 <fputc>:
    3832:	0f 93       	push	r16
    3834:	1f 93       	push	r17
    3836:	cf 93       	push	r28
    3838:	df 93       	push	r29
    383a:	fb 01       	movw	r30, r22
    383c:	23 81       	ldd	r18, Z+3	; 0x03
    383e:	21 fd       	sbrc	r18, 1
    3840:	03 c0       	rjmp	.+6      	; 0x3848 <fputc+0x16>
    3842:	8f ef       	ldi	r24, 0xFF	; 255
    3844:	9f ef       	ldi	r25, 0xFF	; 255
    3846:	2c c0       	rjmp	.+88     	; 0x38a0 <fputc+0x6e>
    3848:	22 ff       	sbrs	r18, 2
    384a:	16 c0       	rjmp	.+44     	; 0x3878 <fputc+0x46>
    384c:	46 81       	ldd	r20, Z+6	; 0x06
    384e:	57 81       	ldd	r21, Z+7	; 0x07
    3850:	24 81       	ldd	r18, Z+4	; 0x04
    3852:	35 81       	ldd	r19, Z+5	; 0x05
    3854:	42 17       	cp	r20, r18
    3856:	53 07       	cpc	r21, r19
    3858:	44 f4       	brge	.+16     	; 0x386a <fputc+0x38>
    385a:	a0 81       	ld	r26, Z
    385c:	b1 81       	ldd	r27, Z+1	; 0x01
    385e:	9d 01       	movw	r18, r26
    3860:	2f 5f       	subi	r18, 0xFF	; 255
    3862:	3f 4f       	sbci	r19, 0xFF	; 255
    3864:	31 83       	std	Z+1, r19	; 0x01
    3866:	20 83       	st	Z, r18
    3868:	8c 93       	st	X, r24
    386a:	26 81       	ldd	r18, Z+6	; 0x06
    386c:	37 81       	ldd	r19, Z+7	; 0x07
    386e:	2f 5f       	subi	r18, 0xFF	; 255
    3870:	3f 4f       	sbci	r19, 0xFF	; 255
    3872:	37 83       	std	Z+7, r19	; 0x07
    3874:	26 83       	std	Z+6, r18	; 0x06
    3876:	14 c0       	rjmp	.+40     	; 0x38a0 <fputc+0x6e>
    3878:	8b 01       	movw	r16, r22
    387a:	ec 01       	movw	r28, r24
    387c:	fb 01       	movw	r30, r22
    387e:	00 84       	ldd	r0, Z+8	; 0x08
    3880:	f1 85       	ldd	r31, Z+9	; 0x09
    3882:	e0 2d       	mov	r30, r0
    3884:	09 95       	icall
    3886:	89 2b       	or	r24, r25
    3888:	e1 f6       	brne	.-72     	; 0x3842 <fputc+0x10>
    388a:	d8 01       	movw	r26, r16
    388c:	16 96       	adiw	r26, 0x06	; 6
    388e:	8d 91       	ld	r24, X+
    3890:	9c 91       	ld	r25, X
    3892:	17 97       	sbiw	r26, 0x07	; 7
    3894:	01 96       	adiw	r24, 0x01	; 1
    3896:	17 96       	adiw	r26, 0x07	; 7
    3898:	9c 93       	st	X, r25
    389a:	8e 93       	st	-X, r24
    389c:	16 97       	sbiw	r26, 0x06	; 6
    389e:	ce 01       	movw	r24, r28
    38a0:	df 91       	pop	r29
    38a2:	cf 91       	pop	r28
    38a4:	1f 91       	pop	r17
    38a6:	0f 91       	pop	r16
    38a8:	08 95       	ret

000038aa <__ultoa_invert>:
    38aa:	fa 01       	movw	r30, r20
    38ac:	aa 27       	eor	r26, r26
    38ae:	28 30       	cpi	r18, 0x08	; 8
    38b0:	51 f1       	breq	.+84     	; 0x3906 <__ultoa_invert+0x5c>
    38b2:	20 31       	cpi	r18, 0x10	; 16
    38b4:	81 f1       	breq	.+96     	; 0x3916 <__ultoa_invert+0x6c>
    38b6:	e8 94       	clt
    38b8:	6f 93       	push	r22
    38ba:	6e 7f       	andi	r22, 0xFE	; 254
    38bc:	6e 5f       	subi	r22, 0xFE	; 254
    38be:	7f 4f       	sbci	r23, 0xFF	; 255
    38c0:	8f 4f       	sbci	r24, 0xFF	; 255
    38c2:	9f 4f       	sbci	r25, 0xFF	; 255
    38c4:	af 4f       	sbci	r26, 0xFF	; 255
    38c6:	b1 e0       	ldi	r27, 0x01	; 1
    38c8:	3e d0       	rcall	.+124    	; 0x3946 <__ultoa_invert+0x9c>
    38ca:	b4 e0       	ldi	r27, 0x04	; 4
    38cc:	3c d0       	rcall	.+120    	; 0x3946 <__ultoa_invert+0x9c>
    38ce:	67 0f       	add	r22, r23
    38d0:	78 1f       	adc	r23, r24
    38d2:	89 1f       	adc	r24, r25
    38d4:	9a 1f       	adc	r25, r26
    38d6:	a1 1d       	adc	r26, r1
    38d8:	68 0f       	add	r22, r24
    38da:	79 1f       	adc	r23, r25
    38dc:	8a 1f       	adc	r24, r26
    38de:	91 1d       	adc	r25, r1
    38e0:	a1 1d       	adc	r26, r1
    38e2:	6a 0f       	add	r22, r26
    38e4:	71 1d       	adc	r23, r1
    38e6:	81 1d       	adc	r24, r1
    38e8:	91 1d       	adc	r25, r1
    38ea:	a1 1d       	adc	r26, r1
    38ec:	20 d0       	rcall	.+64     	; 0x392e <__ultoa_invert+0x84>
    38ee:	09 f4       	brne	.+2      	; 0x38f2 <__ultoa_invert+0x48>
    38f0:	68 94       	set
    38f2:	3f 91       	pop	r19
    38f4:	2a e0       	ldi	r18, 0x0A	; 10
    38f6:	26 9f       	mul	r18, r22
    38f8:	11 24       	eor	r1, r1
    38fa:	30 19       	sub	r19, r0
    38fc:	30 5d       	subi	r19, 0xD0	; 208
    38fe:	31 93       	st	Z+, r19
    3900:	de f6       	brtc	.-74     	; 0x38b8 <__ultoa_invert+0xe>
    3902:	cf 01       	movw	r24, r30
    3904:	08 95       	ret
    3906:	46 2f       	mov	r20, r22
    3908:	47 70       	andi	r20, 0x07	; 7
    390a:	40 5d       	subi	r20, 0xD0	; 208
    390c:	41 93       	st	Z+, r20
    390e:	b3 e0       	ldi	r27, 0x03	; 3
    3910:	0f d0       	rcall	.+30     	; 0x3930 <__ultoa_invert+0x86>
    3912:	c9 f7       	brne	.-14     	; 0x3906 <__ultoa_invert+0x5c>
    3914:	f6 cf       	rjmp	.-20     	; 0x3902 <__ultoa_invert+0x58>
    3916:	46 2f       	mov	r20, r22
    3918:	4f 70       	andi	r20, 0x0F	; 15
    391a:	40 5d       	subi	r20, 0xD0	; 208
    391c:	4a 33       	cpi	r20, 0x3A	; 58
    391e:	18 f0       	brcs	.+6      	; 0x3926 <__ultoa_invert+0x7c>
    3920:	49 5d       	subi	r20, 0xD9	; 217
    3922:	31 fd       	sbrc	r19, 1
    3924:	40 52       	subi	r20, 0x20	; 32
    3926:	41 93       	st	Z+, r20
    3928:	02 d0       	rcall	.+4      	; 0x392e <__ultoa_invert+0x84>
    392a:	a9 f7       	brne	.-22     	; 0x3916 <__ultoa_invert+0x6c>
    392c:	ea cf       	rjmp	.-44     	; 0x3902 <__ultoa_invert+0x58>
    392e:	b4 e0       	ldi	r27, 0x04	; 4
    3930:	a6 95       	lsr	r26
    3932:	97 95       	ror	r25
    3934:	87 95       	ror	r24
    3936:	77 95       	ror	r23
    3938:	67 95       	ror	r22
    393a:	ba 95       	dec	r27
    393c:	c9 f7       	brne	.-14     	; 0x3930 <__ultoa_invert+0x86>
    393e:	00 97       	sbiw	r24, 0x00	; 0
    3940:	61 05       	cpc	r22, r1
    3942:	71 05       	cpc	r23, r1
    3944:	08 95       	ret
    3946:	9b 01       	movw	r18, r22
    3948:	ac 01       	movw	r20, r24
    394a:	0a 2e       	mov	r0, r26
    394c:	06 94       	lsr	r0
    394e:	57 95       	ror	r21
    3950:	47 95       	ror	r20
    3952:	37 95       	ror	r19
    3954:	27 95       	ror	r18
    3956:	ba 95       	dec	r27
    3958:	c9 f7       	brne	.-14     	; 0x394c <__ultoa_invert+0xa2>
    395a:	62 0f       	add	r22, r18
    395c:	73 1f       	adc	r23, r19
    395e:	84 1f       	adc	r24, r20
    3960:	95 1f       	adc	r25, r21
    3962:	a0 1d       	adc	r26, r0
    3964:	08 95       	ret

00003966 <__prologue_saves__>:
    3966:	2f 92       	push	r2
    3968:	3f 92       	push	r3
    396a:	4f 92       	push	r4
    396c:	5f 92       	push	r5
    396e:	6f 92       	push	r6
    3970:	7f 92       	push	r7
    3972:	8f 92       	push	r8
    3974:	9f 92       	push	r9
    3976:	af 92       	push	r10
    3978:	bf 92       	push	r11
    397a:	cf 92       	push	r12
    397c:	df 92       	push	r13
    397e:	ef 92       	push	r14
    3980:	ff 92       	push	r15
    3982:	0f 93       	push	r16
    3984:	1f 93       	push	r17
    3986:	cf 93       	push	r28
    3988:	df 93       	push	r29
    398a:	cd b7       	in	r28, 0x3d	; 61
    398c:	de b7       	in	r29, 0x3e	; 62
    398e:	ca 1b       	sub	r28, r26
    3990:	db 0b       	sbc	r29, r27
    3992:	0f b6       	in	r0, 0x3f	; 63
    3994:	f8 94       	cli
    3996:	de bf       	out	0x3e, r29	; 62
    3998:	0f be       	out	0x3f, r0	; 63
    399a:	cd bf       	out	0x3d, r28	; 61
    399c:	09 94       	ijmp

0000399e <__epilogue_restores__>:
    399e:	2a 88       	ldd	r2, Y+18	; 0x12
    39a0:	39 88       	ldd	r3, Y+17	; 0x11
    39a2:	48 88       	ldd	r4, Y+16	; 0x10
    39a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    39a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    39a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    39aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    39ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    39ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    39b0:	b9 84       	ldd	r11, Y+9	; 0x09
    39b2:	c8 84       	ldd	r12, Y+8	; 0x08
    39b4:	df 80       	ldd	r13, Y+7	; 0x07
    39b6:	ee 80       	ldd	r14, Y+6	; 0x06
    39b8:	fd 80       	ldd	r15, Y+5	; 0x05
    39ba:	0c 81       	ldd	r16, Y+4	; 0x04
    39bc:	1b 81       	ldd	r17, Y+3	; 0x03
    39be:	aa 81       	ldd	r26, Y+2	; 0x02
    39c0:	b9 81       	ldd	r27, Y+1	; 0x01
    39c2:	ce 0f       	add	r28, r30
    39c4:	d1 1d       	adc	r29, r1
    39c6:	0f b6       	in	r0, 0x3f	; 63
    39c8:	f8 94       	cli
    39ca:	de bf       	out	0x3e, r29	; 62
    39cc:	0f be       	out	0x3f, r0	; 63
    39ce:	cd bf       	out	0x3d, r28	; 61
    39d0:	ed 01       	movw	r28, r26
    39d2:	08 95       	ret

000039d4 <_exit>:
    39d4:	f8 94       	cli

000039d6 <__stop_program>:
    39d6:	ff cf       	rjmp	.-2      	; 0x39d6 <__stop_program>
